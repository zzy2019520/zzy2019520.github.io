<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZZY</title>
  
  
  <link href="https://zzy521.com/atom.xml" rel="self"/>
  
  <link href="https://zzy521.com/"/>
  <updated>2021-07-19T11:59:51.197Z</updated>
  <id>https://zzy521.com/</id>
  
  <author>
    <name>张占阳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CRM数据批量导入</title>
    <link href="https://zzy521.com/posts/2fb365d5.html"/>
    <id>https://zzy521.com/posts/2fb365d5.html</id>
    <published>2021-07-19T11:48:27.000Z</published>
    <updated>2021-07-19T11:59:51.197Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="98e9137441cd82af37da501f53cd9f71ca5d5fa059c0451c7e987e03cbe1ea46">922e7c822e7dba3b099f545ba738c124d0acd2eed5ef6b4be9fbadf43b0ea808b5e5fc5f11d888e534a39f23e4e537d50fdc29f49cb26b94fb03d8900af2f269b8a2f8a69ac1b6582e4ead0bfd1a5149158a0e24675f8a2a6978098dfb2511854a6ba887d133ca261386d57e148e7f9788ae84f6d595d9ea37365dd6f1dcd77a1000b24c7127ac0b0ecebd5252a58c26a01aac5d91edc1b2c619482bbc9d4e3c924305be6c0d815b8e036003d3bc8b92ab0805074ff37e956df2df257a2df5baba0a56fd2ac909cffbafec50e554445976c4516e5eb1b85e7f6a3d7c178002e0ad27f801e328228ec67a78cc9507562fd2604b3ef653d4a25b1d65303652ee4d93ca4ad44d404591fdd59bb03d7571e6a4182c822c4d1d3ff0da74362f86f6c38ad506af4807f9bb4313f13d7b5c5f90388db72547075778f2d046a293977109c900db5a7e95cb9949cd52e4460356ef4b5c5bba1acdd6beb7ae72881a9884cff0dc99cca5bf70925eadce8cad10bae9c1cbd369ae3c3398998eafdf91f98d79b8de62f1ea5b0425732f72818e9947c01c2715c0eb2fda74231df712c4d66189f2a92ac8bc771ce0a880170f6ba1d3acf125cb78764d785ac91bed644ac20a43efc1961342bf981442ef66b3c1f0843bba877ae3a8b46566f52e609847fb3bf50d83625f233cdd72bda4a05184c1ba5b3c4c72dd18064dce0c243f6ed8f21f63aea387ad5bde4b295efffa92ab72955efd23a30872ba396cd04bdb442c461c1bc5489272d98bb38068044627fff82641b833b5dbe43bf3ca503ad9958a3de94d296e7c9d71d1c0f3b1c15bc2bfaf792bf10a8a9bef2fb3f7dd7bcb4479d6620d9bba38af6cf576398dd4226abc01285aa0cfcb9733fca03b85c0318139ac38219163c76c5e5c71cef42d5329f28eebcff86dfaba6b2904bb52de8dbbad916c60a19219c9c1253c5ab0bc5e076771104c6dd7fc57f6f1c5748ca7564432b16f6a6ab1cf9fae0c321708831ea205963e5778cd18542d98cef80b3383a7f08b82fc546bdc47af33b95dac690b450171541e2b1947376a2142cdbe3296ad4f4e76cc68cdaecaccfaa98255115712aef3334b2450c480d69e0c872ae28ce6e703ba12590d6a6b951fb51f5db56b41099f33b8d8a9e766583aff5dfeb13878262f7598cb5d99ea9b38dbcb64808455dbc9fc1a63203bc9e0b2d58ca9b6464694bcfef20cc3a18564a1bc66bccb344276976dcb26cb5b4648937a767195dbe26d71275f2f2f51ecb832626a0cd1a533c6229aac07cc942db1c8ca4538a4019cc2a5fc90a286a0728ad2ad5b62c798bf8f0bab23d717a2cf8580817df461d0c9eaa0faa2260198aa498bedab9496cf23cf64d808c5ab3ce4e2c5947fd4d6edb904b01e087b819f0106e3f5d33e4abfb8a2a4749b8bb25745cc627129562ba67bebec03bc4c18d5831327a84bd33bc11c01416267d228398f22c12805ba59c815f904035f2b805cfc87f42c06dc2e4d0fc3590c41a3d526b8babdab3d77d5e03541141fcd9ab160fae243f03785764bb495c40d7fedbe903d7e145b68d269428171a1529f925487f458827eaa10cdc6c0ef883d7589baf5b85af0e14595cfb06d5bb19fa05c77588432a94695f6f3d8d07b898c49d27d658b5149794c77f33bd00c011d613376e56caddf41e7ac99ca9e2fa6651d02ef1c0ef3f711aaa9c4dd20a839ec3f4b533fb62db47ae3078bd846dd899417a204194ae3a95ee52bf21947a1bcec539e5bd8a83dee6ff2c6a442672eb54dd543fbdf3240854c20cbd8823ff1615cde07403cc97f0218dd938ae84a6c63a718a76a7c0b6d75141ebc7f1a863eca0ca242a2de10d0297b18f3533505fe72cf11cb19c41eee8c9372e3e4254daa84272ef29bfcf5a9c3ed301b530ca100d69b547f6207ce7a7a51064a471845c169a9a0410a3a0c2ce2171bcf36b9c3b01d6b86caba722f3f636da2ffb13db9294b53911e9ac0c5f78e1f4cc1c7290344d43a973ecf744c00a6619a489967a85fabe4c9b30e37b7151206c0ef83db0f32871d0644c7551c8d6518a437561676fde79f4ccf2b5bb96501bb9801f071f35a9ea19fdd6f12ffd3604882fd9b44257485e50f3b42574f7e5d68b7b54dbddc6eca9b3faed77ccfed8467dace97931558bbcc035a44ffc5d126c4556b8e653284ef09f6cdd7e27302bbf3596a6d0db744b5b20490308844ebef0d334426548731dbf2b865b23c63933e754205527a61272164f2478cb93c759344c3d8115ceea20de26672a236c4c141ca587c207352fcf82def7ee7989f973e08971ee34584e49562f4fdfe7a7a1cd6717709cf3cce6b6890d9b1fd4715e01c541163bfb36459828167c0f070f4956ac6e202cb95ffbf4c6c0f552d0483b55defa29f495fc6ad4384d85aa05d87195735045e490694e05a9fed79eaa624f562b0a07fe8635e175b9b77cfd4e90d47605e870b5820d62c666fceae85bea99eff04623a3639f4589254e39876ddcbd86699171752affb3e6a5eafbdfd433adb53514001d987fa67f9ad8981a7381a92e33649155a1ba188185a5ecdcecedcbfb1cfc7ec92166aabd41ebdcedf7f6be60f37be8967a6db66693b36a824ec840040520cc7da65080296bfe86a93246dcbd19fe03d9e753dc44ff1fd9f406653e8836c41be3be27add57f6e011b3dab4f7611580df198e7edfa96a731c98f5b3198f00bfe398d4334d938958e1986f889500ca2599f5cdcc6a33b4ff44b1691a678e3b778ae0419746687045a2d0bf044ce694f536c5a94ade7cf7fef7175ae95e92a026e15605bc128702a4131bd7ec24af387abe238f45bbc612f4ebde94b447047cf4ebc3193cc316beaaec48313ae89f54020e8465b37bbda5f54202027470f772ae4905a1a813e7ccfc1f1b93e6876a3b73e123b55ec91a6ab7478f61678ad52f5a028e9f35659a0f8d0013e9e28a131972c391a4a4bec2014a9d3da0aa039598fd3cdd2a35e6d37f9868fe6d74a69480958be6e1eb8fdfbd3fe896602a78d48baa98520ecb037b09feec38b657d08bdd411430a2246a59eab00122e8e7161eadf6807fd3ff22a401bf350b70777ee9503bb2598f61b40f34b740da2a412726bfdbdaaba9125db0f26ed29d759c0679e5b7059cf84ca59065d4867d83f8f8ac6a671d2384e8ab639b15744a98665df1795eebe0e6ce5fbfddab587de10690839a0695bf54ff9e0f3850cea3918feec0cc8665ea986587b5428aefbe5ef8f386b4dface950030c07822863f52c8d8d7ed5b7636e0cad34fd84321acf89d993ca02d33727738be0904999f618ddcd27fbad8814b7d039d206e7611963fe730b4a15ede21dd376867d4e567398c1e27b917ccfaa35be61e21665aed2c0d690d069b508b2abbdeb5644b8c4a5960c636fcb6fb228b6750a3a1a4155758f146e962b92a852301d7145e0a8952b47a1c1936a900b0e4d0825d1f015546adc7d210ec06057c4b7d2a19bb267156098b13f5afcc48b1670a4c300dd0d6051609ab854269e72bb125cff5e6465b4ec528cb10fbd1c6d8447a72a949e2972ec5c075c1c923177016d676b13567416303acbbdcf42b6d50b577e97dc3834d7a86ee7d0074b8189758dbd6fa6a04233fa0bbc26d8e8bd525d39bfa30d0394bc887a47580c77f59ebd2298fd899fe8326f14e99f391234c6eabbc1e0da65ba3ff376a12947da0575826e3e552e15300cf033a679aa8983038e9312f3054735a6ccb056b6e7ea3be3c57eddad4b0eb7f44228cfc68d9343139c2c5d8126582826b2b74a4cc6f63fbbd1bc486f285312ca214a2c2f60f755bfdddcb51cfd079632f1a57ae17e45eb8597488b97664fdf38682ee4696ac37a1d3b55d1a16981f8b22030b84aeacf4554d78db284b1aa78c4d91e6fc6172a30ee066fc3af1f158e24d96e56b3ee7f20873b8d56d87f7dfe99a6309bb739f5719b81bca89c99737dae73e397e2dfc228e2dbd528e26cca82a417b74efe1dd61ef7621e3f272be4db4f8c93a9370d9c5b8519b8d4bcc5d73ec4860b722c1382a0ddcc082aa635402da4f76856b74b70c284780e67a8fbb34358dc20ceda4866ea1869b4c3bd178071185016da645d2437459a94863568f8536e10a22c9b33db81f86c7b46d8a7c07e1314b62e46d0ded32056c6695fccb25dee0ba2fa3c77f89b3c322342b1d4bb7af3ad1b1de9fc61f88681a495971ef46c1d690bc6387035e554e0a454b64c124a9d62242ae806b1b2c09e7be84a099c6023da9b83c6caa63d12453bdb1b9398ec00369d9dbe12795ff5150c3d38b6f5865f4e9f5c805c47f79cac6ba90076b88aada72441fab5f5bc94e397397ca7ba4e98c16fed98dd5b19937b7bbb738275b0246b5801ca6dd2925b3006948db57e01fafa7daa22ca198ee906f3681f9974a59b3f4adb95c25af400f8590d2998d2bf6cfa07635cab0fc7b3a2efcd846100b42e1adbd9b176d276c179acd62659af478d07b7cfeacfd7f1dfa50ff71b8b582f5acaea1d9e7259ae84419510c59fb41f8ba2dccdca90b254d9384af4a94f0931b64c42d90042f0f797e82aaf09768d93e9f32051d7fabcf70f3d7d97a80096e2194af56da00d16873a78ae7c354ccde6e28be135d8a317a2134e23b4e66777c0d1ec07c9f9edcf058d09517d83f457b6ea0a810ffa8b2b82fbb40c42d323a1b661d485e3576dfdd8eb07a23cfbc5a04981404ae4150b6eaa44f8ca446845de0887459a59fbdbd4cfdd9d9a498393406cc0d7fd4cbdf0b7cdbf3795005fcc22be06cdaf297ab0dba50f80103591bc7f903a463dfdfb088e264af6d89b094d0c88e9a9482df40fc236d49df1ac6dfc01cbb7eed373746d1a7ac276e85ade675b94ce8d2f41ee43162d8a76c17dac5f782a44a71f860ddc01098e797f0135d33358001bdd200e8b80699c66224384b91cc2ad8dd5cc0f9a5b814b446fff90bccbb8a3e40f522c88a1d2551803231ffd586db1058a7070017e9419b38a9145af2401495cdeafbca003082058946ef34ab5543a519e0512a432c58153ae52cf00f2c49f19887bed0169feca870106668d485a87992f4f78fa5ac2ba5ebff9b9ec794f1ad9e741828f565968f72edf303d5b6e4232523d81cd9a5de744dcaaacf269066ea462acdb305db9e92a22aee2266402373edb9625779dfadd871e5707999e2a32d6c4af402add08a413d4011366cf893290527608a270658a6c878a3b22128c25b6ab5a22df40df0d5c7766203fe9fa9a4592e705bbb8b6780a592f3fb4b03e118fc3f5d97957a6fe0e506dec6681bae9041eb52c0d94bd6bfe9ff773a0868ab87259a499a94f0f2c3a72c8624562010441b0c6af4d69eae7c7a95de259d9fce69f8de85f2a29e705b68c892612308489bc220d453081f88cf5411c69174547d84a52a3216f2a926b226b2ae7e3b17db6965353681b6ee2c0b0195957928df4baadf19019da6057b4441197e2b5051e166523f35e0f06050017c37612b82387cd1b7f34c84040a2d22be614783e603cf13c0af2cae58382b4062080b72e8cad871f3ad9c9dc0e3fc2966f1da7efe9cfdf88472c1b9eda4f9a7333dda19e37c1ddbec1076607a1bdf51e09bf005b151e13b17df2cbbc993bddee7e0f51ff0470defbbd03af8c73d8c66320e8a17bbb5ee673e80cb5eddae96445122b5ac04cf9a9ec1128d0f82dbe5d9e11ccd4f5b26ecefdc2beaa6dd21fe960b4e2fa0ba681df19359b1f306a7b9651e5bf1d3623f6dfacc1b376b8492a827f447a18280f4d306cc763447543eafdc9569bafd2f2b8eccf6b5c1b6ea241835143babe64c824962abcd93ce0bcf39cd20482f23d69a66e353f75af06c36663e69840876dae18f58d8894af00ca45b0a6dc28e0e3cd7b37e59e07ca456e65f6b0168acbe234d57f61f97bfff27f3d2879c93405fdbf93c843e2ddc4d268ea6552b1af0a8bfcf0cb78dd2bcc05da94b74916a85e7b8e7eb629ea31e564c88ef5513686f0a5ac4d119dd94181a017097e0be4e53d1d95e0edf8e6d88186e69f34f6da0c01f673edc0daffee275b5ff2e696ea8e5e48a28ce6859915808dfa43bac4f237f52fc47d771472a22c34edfeb9d099e3158d912e4c5fe77432ac0056b26204013c3e1e762716fa756f66ae6eaa66d625f9f37667972eaaf9485e0e062c5c141beb4202d78108e57657842b3dba1f6ada9ad6cd8a6422a175268e50b2978a3c4321d7c56f0ff66cebdf61d586afb9e30263b646e3a800b16da53f370dcfb7f6d18f40b86583a682c8e82719438b4c25002164e6b96ba44240a3b51760f17cc81b0c74f1ef0fb478cdde3da5266ee37badb9b6485552236bc28895d7a4a13319e16740287c7efad3e32a82abae0778d9705c1922877cca7178c6188ce3deda714b788e1674e9476c18c804211488cd9ce2776bb3fff6aa3d384f479bbc2b778798a9389cec1134e6234b60aac80dea2f877d7827ab71fbdeb13e16b19621bb1dd454b19670ad8d4116616418ff5cfa3c8775ba7f2bb2b632a3938d0d72daad19e89731ce2f6a1f1ae71bc1278803b6f22a6bd91018f1ec37236ee2511eb15d71c36374f40e218b2f1f9943c66ef4e4c155ca38b0001b75625c4e3cfaf30371df107a1bb3a83c660213f4d07a7b9d931e0f21ce8f861496dc7e07c5cdeef721df593be81e30c5dc9607e80f7a6a7822e411caa974787dd8df57752382d6adfde027a80dd9befd7a78bdebb887893bff4091f0f8214433f34c171bef6260e8cdd049c2402ffc1038d2ca4910e2368428adb068a280e3eb9553886f48b7895b653295b395f99deeb3fe71e05b1a1d3b47f4a87d3bec34fb0c1b89150eb002297e2054cc22d27b5d55d19ada1817a1e51f8cbc8b62e0242635e2465ea9e20ccd5f48414cde977456a177c10c3068b3c1759395e357d8968421cff17fb8307ae8a7016b1fcee5fe1eff89f5fd2ceddd17bb2559ef830d29a29b07a0a6e91e841db11637be58a1696fae32adfdb4f8cf4b41afe413b63e354cad3a47de6b0e04c1e2e66418e563f1fbf84e8d069be112673abc7b536f9d64dd27f9efa831d779445ba9b8ba1b3c92ae063e95294b1dfd939e0a62ab4f01162cf4598076b7e0233ead50b86e0f72b42f1aca3c3cd5073a9133df8fabba9ac81f2be62dff1903949c34034fd10534289b89ab536981eb1116937fde7a5d94474ee0d741e7a33e5df564f02eb9c5071cfaa6c09fb509d6a9350dc17a4fa7fa3f2774f7ef1f7db9f957a09e70d7bda54c130b0c861be9bf2d3e38b18133a3da6e74e739a1cb23c43b45ac7df67cc472d070a5e86bd17862629b7a13e9fb793d1f053a0bec5fa426155c0b0f63dda7de09405691a6cd3ddef10123938973a02990a7e917e3b9eeb4865dd944857d80dd80584963facdeda6b5b438d3e0f650f34f19343c175b8a7726fd1032e8b1446f6397f4f6dfc1e3cf8577dd559e4f6c2cbeaba2182ee34fe949bb2cefc3f8baed029ad850b1204c6d739e3a572681e21567afad004c0ad39093875ff3333ab95d2905c70fb6973a519040738af85f73ab1d6d3cfc317813bf560dd6f60af06ecc8ff24758f9ab8926e651fbb8b7c0f40393eaee2edb5e6a357af656ba20515cf5e1e477235d7073b77355caffe9b18460cfd21736d3e291c099e7efaccf8197b227bb92436eb0a7c1be6df9ce5812528dffb7fe65cb53451bb9b0679d3a5115fe9d9879e5a6b1cae8bc4086fb9ef69f61aaa721941e4ecb3a9e66fb3c302f3c0eaca728880978041e9809eac953e7d295e097f60c13253491b5b290663b9739fb8691bc7b23adab851b0a35f71be771211ce3b3e155ceb4662c35919b31207fd5fae874e38db33a451062f2d9ad55beea6414d9d9193fa65f37a4be5a9822502bfbaa4c887d248efe4860bf4080857dafdfcf8454fe58e3f37a3bbafd35938f4665ac296d4a72f7f944dcbc589da0b7dd66ee2f3bc936d2eeae06f7c8957e463101c6575cee3149d14dc0d58aff7f251ac063146249504191186d623bb28739bff6dc78a4964bbd8b3ea51e496c43e6225f9b1644f3bb68020e0f68b17f5d7a75ed75ba12b9b0662c135872d7e77021c4a3f8744e6c9f0f2efbcc971caaf44e879b105c537c22750050669215370abcaa16da43dfee292a19ee84fc7ab89bce63db42d0619a812ef3c68bed2e390a8ed269bbdee5ea385398eef4b5a24ee93c3756944b8a5843ec00e563ad7aae02966edaf438d20dc13d8f1de9d15d876f368c61f3fef942f3ef83ac9d90f03f73a22c8f2675f0bd7be5d55b15afe7104360ab7f7e9a1fc42b41181ddecc77ec2a167e079d2b26ad80ae102cf623828ce1ff01e09ab9547f29e0ed67d7acbb170974b58d11fe7be2679ba70f6bd15affc8ea779eadbcff673a40647461466584a52597a6e80d3396c23af534f89d53b1e584c1906bb94007384fb6b6e42741bfac838c3cf9845a9a465db2e3945ae8fc4b5759b2293a535747ef04fc8a9db996db6b05d1c9ff8775e4b6f0a30a511defea038dadfe3da8768fbd34e3ef674e058e595f0fcab4dfc362a449338aeec8e11ac9907cd693907288bee99a7081635e0e30030fb3dcc8b02c6f338a353479681143cc49059add592cf0bc7cf0a48cd5e3717d7a1fd8cc0085d6194a57ace94836d2db9250e961a618dc3ebd05ec18c5a0dea04173401d8101178d0ed170a769692327ef8778f415f4493011af76df1421931581005348f802d000c67a0514c5adb8c6240e33278252c6ab63e2dde7702de964eeee9dd41dd42ee695e7be3bae021376256188a3fea5330bd7a7610f3f7d16e23bafd852a6165676690f94c120cdf0dbe275aefc0c212b2fd3e10e23f581fc98680a93e747aee59407a9cd2fdc6a81e5216cb3337094dabf7f04d6b7b9c868ff7efb0e24a2bdf19d13af0e6a87c5fa29f197bf0263978d2f830edcd6567294598932df4866a73ec8fadd3159b7b180cd92de98e8eaaa4ce32201950c51574cd5737bb9799cd36f2cbbc1b71107127858b73241b0ab595f8c9f147a1e553896100b87fb587ccd3fb1f798fc047c945f9a70482463844c16b41b81a54da8f213c24b44abf1ede845a4c4bf458a35489d819ce5a23be7424412de8a670333584511da3c79b1f9e48bb1d156705cc0e5310ef661b9a3ad655c28795526dc03a812f86532339a190e6361d8d376fcb4fbb4760bc1edede60185060ac71ae2dc7194c7ccadc68a70f742ae5036ffc3c654072f5d8f95c3b8ecb2b8e9ba21580d14bc195e3538ece9005c350f6b42409a25c9e328aeef2d04b9de27be8ffe2eb2cae5e1f7e0764dd46b0ceed4397cd8e5b9b60f3d58f28459eb2e9336eb7644cb3ec41e2e045ee968cb362caaafabcac553efcf099ac7a67b814d208b289015fe0b0997f414c31a0183a9a7277222eb7330752616b9a0277e81d94cba6e17cfd10153b6136dde3e79f0cda8597e9ebe94bca3d145f63a49fc00a0511fc24a9b63e6eed5844b0afad38c450940d08814a4e280c28887a3cf900560ebb205021ae0602f59c91e16cd8169be4b3081efceb4c3d91f0943283568a5d5ff5e602073c5ede07dfbf53eb03df1718050da45fa42e574cf0b8358c26345c07a3a1a610f05069d5d76431bf6b245aa7d6ac34b9f22f1213b60effc40647fd44de95e46a96aa923bf3eadab9f772f4433db6fc40ed66f04053e074c2995e05b9438361155477314e685c417dac27c2521db94366c1ff610e351bddfb4cc50b3dbcbd199b57eff2a7d06bb4b74cd095c745220c881d6faf363083d32e5e9405128d374c4c2f63103ab4df0c76ccee20283690cfadca2326f8b5cc0131fadadd81ca0b7613035074ae6d6333e959d04a1edaa35fd53fc1d73567a0a2e506e34a271a25a7c93e2c67495ab68ba2c5e7268407b93d7d83fa7fea1e0f2ff6162afa5727a964785f97eb334fc2d1f40a0fc288595fa1d850657d5cf747efe833b8e850d9dcf40a9510ab519b0750a5114587a4cb35802fa3d807d2ce83162bcbaf26a4e75cce3ed1dd2fb79b21afd64000fa18c856a2d7838ab90cf6af1d8b02e8b435927523bcd72f68449a744f8ec1ff5e42c0ec1498e7922dc0abd9db9d94619a6700cb789ed57a1d7f1d7294648a1f8e76cfe48a3b75cbe46e573b13814f5641325fd848c08f871494bfaa94b2904443c7b686b52950651a1651ee67a163bb4884cf3222a42e74ebad6512a9cfd1ace3d3c36596db497fdd72bf4d26d38c884f1b8ada5cfed0b50135ec83c9ed98866aff5b6988e0162c862f44614a6159fc775e8335d3a0d98144a3bba0b9cba5b8da545b995160667f8b4c3203ce9a41ce7de75316c2c0ac0c57b40bc52a30c4c65d52fe5a7e2e7758bbdccb395415326c2c2b2440a4802b256a28beaff9acdf11dae27a1f1f5438dd4474e411d4f42db31ca08b6f44c5172408955fa01132aa0df2c747f92b73199d67e39be32f135e5c804bc3326421d51b3db96f1cf98c79dfa597a4939cb5df47c6ae7b250d08088b361df3e25d933f7b5c3857a9c3b72e69c3a3701f0eedbc6b17c7bcec825d5784cbd39feed3558eceff15fb929f3939980ce0cfb6a7ececd354e502482155a47eeba315e2e0e415b9242174a42e3cbecd3524f7ce9dda4ef937d8538562e877deb8c6862e742d959f27efa8a06bb76636b7c33877f88d9d1c1b1a6aaf32c3782ec150d762ee488c1b71b483df3c0a13ce2e976d21818e1a776f689dd5c0e202a9823a664219847e6247185f70881e0d2e3f226835805259bb2add4330cb574a37f364bf918a8af27bc54a125df083f02adde5adcbe784e350b23fb01a75d6b4454782c5f1412c04cff697723ab2cef45790902d9e55aacb9502c2c3e3e453690422cc951b4f3bfbbc1c65c2e87c9206a13992b5e0941029ed2c02b0fa7d715a43b835b647570b55604f5a800ead82b75812d19fecab00626fd027081cacd577dc6802a92b25d1d7f02d98bb7bf6b4d4ee6f7a5ade441f2ef8edfd8f0a229b9e83d23ae24f8acdcec42704edad327ad3fa0125a895cc35671236dd7a77702cb72161a7f04ce519ec8bf431005a82017008f8be2bf73d136f6be0340504e64b3d65187b6ba41cac38c1e3d7be2824b2c6e154098bc286f6a5e4ac2d7f5fd7f2c9c2eaa245ae0a21ff026eca31565ba0ecef5b83c2de38522e84f57278faa10c3957bf3766db8a326679c1822d4fcda07fe714061100a4b39054f6102eeead4482a08970344d05d0061ab71d0dfa52eb1acc54ba825bf2c23ab1d87d3822d5a5770fa7fd802ed2fe69d2f641a9cd256b1204a299980e73516ec5302cac066e4443afbd4cce976226770ca915f29ebf7569a12f5f94d9efbbab01d4c9e377e461f73d93ccc8be8a73cc371ab55c9a088328673cf0ac6da0b1a7b024445455fbb6eaf59ec6d66942fad3f78864e62639c4309035d7476e96184c44d054bc6c5b19e38d18d2a894b8e00235a81ea124497bcaf30aacf8917f1f6081989b994756631219222bdcca56ebff8b5482ccf69efc8cffcda2aa3039b8355c8a4efbfcd5182116a28a3c0e0b63a69815c512c7efa521747067a53fa1a5268943b6d089b0a3532f30d5e3b46dbb58a202e5fcd5726eb1f342f22183549fa7382cb8065738226d35a5d727279a12fb7d1f9d0c569b1dcd969d6950ea28b18f269c49a1ebb2580342af30bc9b580fe65e66447a98dc9a1eb4b5ffb180709c26ae76e26afe8192ab8b237e36db3e0381a49a5ba256e1676b77ec57f1b9a1655f1b1499a3a59e88ae84f23d2d5dcc6a5ad69d8d2dd559c62a7ded2749249eb3f3f4419d36f53040c58f0cafe2d5dc2fa94a8a94672a89f4c9d5e9c917798ab7b515afd47ba8160a01c772aaaf1cd3d5b024934c35f0ab7554b37ca93d5bed9b808de420653afd9e31911569f3c16cc3e52d2828b866c5b054ba6b9bd76e450c0dd242ee870d07e2663877443186651543bb2bbce41e2e1b7ce885855fd3c224b3257eb68169c3dc223e478a0973887d315a9b4416d33c43cd865f6c86ac5bb7bdc0b0fbd0835e5f6aa69c0b7c97ab790cc1af99ea996556dd95ea98c4c78e0c668862059d6a401a204ff901181dfd4a561b34ab4f7c506eaa1bb38d1d499bcdd08e8ad90e8a619cf9e65df09d972ffa0038aee59d5a8c7d19749d0936e17a0616c3597b2cbf7bf3aacf356f7f4d380152a06a01b63ff2904314858f21bea90a5126439214b9cf4e8247f1db3c98168a00c7e6bd79618707bddeb4e46576b3d5e7e394eec8652d38c2f39ae605564c0b5e03e7d87ff2cdb241363984dc69fa32610e80419c961dc8f66682abbf84ffb75dcab6fa4c8f94ac397f5d189cd8868d9f002448babec14feaa47e93b1d473f534461418a09d2c61ff5658cadccb8fc1859608a500c70100a028bcd037d2ecdea23a301a352eb6f3f0bc31caaa710a888ea5650f1fcaad0a192e3c84d8fec44197899addb10dabd03b54f175ab2189e3b320f410333fb431bdda4de29d52fb8744a754a2e3666ebbd8f7c9f2f8295ab156fdb0fb43bc38698da248c89b288d30ba4d01aaf512076485ee9246c905f1147b5a1109985d56121cc7d8214f1847729a94ed259f73b42b3d1a5ced4266f58c8c4d48829d34ce6f44c359531075576283c2a739edc00cb5b9a63178b27d478656c59a392e8d071ab6cb2200603f81af14a4d1f9ef6c5ff6a1dcd7b0973733e9bcbc9890546f16ea5e12ee0f3cbeea57d8475a0c5d57c0061209c0f3f5d9bd35a6ec4981c4d6fbd71a3fd2532f5f995432b9872d693e41adde50a84099339f6aa1fbd23497b805bc0a8a019fbeb676081f82e29c6d48e4872f682176966f58577b253fd313c99d083bdd0b53e45c949452553e6300e0cd19de5e28974fcdfe884d42886e6c4dc5953d070e9409fb9a23d23a87e2d5d0e784a22e5a0c3bd6e03f24497519846cca666e79dc424c45b2d052e60c0d59f00a3be45811572cb8de32b00b4862e858fd7e67bbc2a9916a1833c7169974811856b32a0ceb7757b59bf8d41836c6f78e71fd21a7278324bf411fc950e47c4d193c440febdf63bdd12dc6c334e274a22cef3850944d9fffecb94fdaf6ef4722cf6fc8d815631ed83b6f20c129b22d1a4b45d422133c2225be2272014a368ceabc14bc317f9fe356ba00252b757c62d39d286ba236e0abe350d4bfcf0abcaaf7d8fa81409a8c484b2ba0b406b17d00a4e94c7bc591642d3cdcaa96d392f473fbe390695915cc31c29a93f19d47a7c0cef25024e3adc0c623e673f23d73dfff5930ae50d61f3cab86ae1351603adac79dd3e5ffc86b036272e549fbcfe4afe375b7edbdb849fe1a0860c0bf153c2ec8547074f55e30dcc80c40f3e2be75a205ba4ff5ef82330f339c8b792de026a9e21d0c50279da7ffcf82eef5ca7408837de1c22fda2e4c5c561299f772a5aaa9f53c380f52c54bd131fd3dde774d5a20b05de646027dd838f18498ee765526ebb5f5d4ef088ca1103d9bf1c2673a0c5592d719f5c15593b0cbd580ebe997845d7e6b0d4fccba89e8afbce2cc13916701aa45d4c08e0688dda5cfe1d5718b8cf9b8b72d15d59fbfdc5129f982512715f1e2b78dda3b76231fc23f7fda30b4e251a1e574d3d5670e3ff3e21de83f46b22794ce0cb2285c4ec3719064c65ee4d319699a77dd31b47f9fc147bbce937947a31689ed684325c32bbc2221190278352950d6d5beeb883700636807b74fd5496cc4ac5f214bf417c5ed212a9e3a7df927b592edb5b5706fc9a5914fdfc76fe234e0d6ab41d968d137fdbe3c3004f99d6f0da32eda8c84653eb4166fb138998831f74690a88d0954e0e096048df914fa89393687dd5060de78d7817835fd7d329dd3992ca7f5526305fcbb5a82e1bd2c64ffd7220d089add836515df8c72f6bae18ec597deee58f74c8bd87442c59346953af686fbe8e32f1a2d4372d91ed87c26d693cdafe22937ff0ff4dcd8ec64db6dec2bae7c144e09ff26d91f91c349c5d784c3c022faf92f7c7a96003300c42e6523b6c52157275da6bddb2e54f93efa0286dda7b600d03f0eb2be131eec3a21b39121d5b77c0207633d4a4b77d237adf01572948f3972eb8382449e99e6b8b823013f3d1cbc489f5535cd2715a6dbcef3c159001760b35ba0f8f695d82d738881d7772f06641d3fccbadb992b3553b38798e3a48f0bfd1c8bc706a6c9e431bf85a0a7fa6f365887d910021664145208aa7507d6e41c32a7e643d9d758291b344b14b6008a41b890747875700b79e2d233407fc4a6bf86a0d5ddadf1983635ba7049dd33db00075a830675bbf0c326c89a8c2c70ca5dc506f64e99c609d62b94859127e63d95160a47a8681319a210e9e03a8425833af89070822fa5ebb2e5e4f760b6d1d85e8db29b2cc71a3a111132d3a252954844a5c79536f10553d0649a9d4f5a425899238aab37952b86efe13ac9f837efd21d442f49304707adc6ddca2d465e75937d537e0d1ab9a8fce4da590bb2f39401a61980627350cae85755f03ca8444a5db7d0de002c6997375c7afdc6bbfac04a04c56acb930e8f7067960c4e7427ebc67d6a1c43f0747eacd9d8109f4ef569ad4d627903c92f6091b72b2eab0a9e9de8f0f1456d51ce3b7fc2f0e5d979dab5c2f24ba5fec5b6cee05bb55dbfd873015dcaba5c2c208e4496bdc959fb7f94c1a803fd8ca83114d2fc81e7b03b6f6a022241015daeafa69ca555e48c26e51f38490680257915ae4075a25957e36e866e0c6ca100b3da2a06a38457e0cdd110cb81e894d9ec07c038e9b21218c5ea190ce503612c336910ce100a64b07e44fc205b08caa773c9e0a2a9e39e0cd49171b186093032337ad8b77f2c743a39200106e3218701cabf4bda7b751b5a5c9a273934c66c0742ec4caafbdf7974c875a6746d96e930547459e49b74b4db58beaa2db3e4566bb6d0085ab3c57a7d139899bca889c06c3557f92964f252bc20ed78218a7b9ea6b7fcd3774dc0f0fe070791d2d4cdfa856bf0253c7307c66fcd3f9230339324a05e0a0465905cbbca478f834bdf71ed6aa484b3fe8e3b2eaa0fee1e8d74185b080a2af3b1661e1011e6228c83347590ebd0d6d7d680fe890765cc5cc508143413db8d880ae2ee0f3feb97220c3baa96b4759373763132cb9f8999aae1230226d23e6f2f48fdd93e47d009f51c7d05953e7917d558cbd9be6cb4403d348280e5e1bf01bfa70452da85c4950ce0df17888bf45b8c933068537005d6bf7cc24b93e3a6ca3cd87baa02a782f0919a1f49b49363ae0ff1527ddf9ecdda592b17acc5e052f8aa7e4d6b214bdebefa125469a9671b5986a8f5b15f099557e2a144e4407d017732f47faa084e458937252338f395cb572c111978c1bf73dfdbb1c3bc93221ee82067bb526b7cc644f9165a9383fffc7d01b229bc9d3e417782c001fcb25950eef37c7ff8d07ee700ba3dbd2cbeb030d7e0762e0708137d1a7297d44dc92eca5f909c4ae2d8a2386c06bf19f9b4a2cf1ffa1f2e35f0a8c64d508cbef5722989bb1f7eb71ccd9ef711dbf4507166c8c0faa491aa80a59936308ef80b6935792e9ef752bdfa16f8840518ae742fa9c65588394fb9122c48725f0af84439467b546cc16ff108c22ffddd780b2e7186f3d3406cc03248fb46bc211dd2b3eca4970832b1277e6133185bdecf293910915d2cfc4e626a26260dc6de71a09c273d2fbeef6cde27e0dcafa138a47c7a40eba957b03198bd2048fe2b1ba5a2521722a24cb11df0434c9c35084ed80afb17d81bcc8a0e834c4f724003d365882b177f5017532f932b802258acd1896e6cfb45d0e37b03d773c7fa07026bbf7502cdb37d0504736ba0ef1db0725461466cf84e16a8f6f1bb03d10e4f2476b201199cffc0b8409efe7264ac7a9b86f119524d9020201aa66b5fad8bda5ea7e29a20f50a41f40793e297363eecdd12c72d6aca001dbf82b2c9d5d885a3e9b7c797f7cd404c905b9559638186d942c64ce0939d2c5c822f895e2a3b8b1c24b876d41d3c24ed8d097763dc75e946af05a0cf9c55c9c22a9d0fd715eca8b1a000b6ecff6a371d1fcf5d85f00b7f0e3779c688609c65121a3811cafa7abe1d447c3e6ad57dbc2cb556f810068cbf30566fc4454d65ec21a70d2aab6d840f1c17e4f7aad8c0932d8b1991e64dc0df6da150b13888c14725c4dcde65d47f6aff88357ebb3bb8a2b8944bcb4c6191173afc80fb33a767741ec7f46138a160978961f921f2ddebdd25042cc91e9dbb9114ee353c668cc93a523af525a63f4a9e47c125036be0fb99a9ed6b222ebfe9c7cfeff8edf7a92b91858402916e951b179f09b915f73c7654d78b05aee76aa358a5b90e6a54ee743f1836b500fc1c0f643e74fa7b7ace98cd725ea64a2a7d120a920b92054bcfff75c3ec69c88101f7584de10370609b4a0a3dd65f510eaa30f2185a79472c340498651dd92a1e3880b7d503d8378a09bef2f0084423bd8398e19c57d6ca71d649f6c89e278c1a9804c1678f67a99da1e7b051ef3e167c3126fc3fa53dd3e500a675cd54e10d379617f8d8e473665f68239c00c75b4b814f8ea8b495001a56b4a126999a86022fcb822247e7f247537185c02a09ef86da33b31cf3c751d1ca41d692f602f3f3c3ee63c03deacaa280332d6784bedb3c2f9c3defa78f5e09f7a51d4f640849bb48e0405e44d3d431dd0c8096919fc7c233c9f2450fc0baf0e28cbdaaf7a4bacbc669f9deeebfc529e8a7385b2baaf60e5e4183bf2fa7d9ce531fd57aad26c977fb9c9fe774e4e44cad50aad39d267c63ee20e47d3e7ea5643c44248fd8a301e4b0ec2b1bc4a876ea89fe358a130df9f38d717476cdc8e6f135d5cde7d243582a7d8baee9b46f43c2f96a08338870badcbcf1f826541f83f053af5389deb7587017423fe15b3e15df0064f8031695054c56533d3f60a813250e8c2dfba7b6891c83dc1595bbadfa8027bc4dac1e1828482459a5458a5470bbb4c5a41644ec9d16307d974783fd81fa0f7353e4b2c77468f4fb01c1fd6abd16be835ab3284fe6181c153065e1943fa96630a61bef95a5a5a8eae0953575384554a58a071a315494d86252ad72f54871e9deaddec2ced81564e34a2cb9289e1273aefac5f7401983d5b48b1cc68afbef7db2bfb60d972cb406cbb16203c348d4f204a6362a14afc0122cc6dbfda9e83602ff4bed2ba0b76c988b51909bb3a29f2892cee44fc159ac3138e6e94eca96b80162f8ee06caa381927512fbb9b87c3764558d84b130f3c6f6eb738f11276f621397291bc9dae0e56cde3c75f45b06e44ca84b78986921c5fc4fc2881228147fb02202e34021cfe4255d0f82504e043faad2083d3e4a81dcc3794b9ff8683744aa0aeefa8b2a3233304c352d6438272c0c01227502518fc3e0197a068814ce1d056ca810372afd02013e391223ff60d2a57fdb9e3098401e08318b9bc8eaef3ab65a8ba24714a6385eb577625c5488fbd71463c044ea1f323f49f1888f5981e072b8a6d5e35c61a52e67018bf67a427f9724ba50089a942da1d736eee2b4427ef13c27652bcf9d73dbf753ae085ec37b22ec3bda14c45f2bb6fdfb4debbbaa5946681adbcf631330a359dc2910b5e475c53f218489dbd4e2160ee76de795249b357a569e6c35f2db5fc7dafea703fb26c033a538b3dfd9e6dccda8820e1389cb54a1a26f2bec7059d1d2dac195b4f7a0dd1c302e05c4dfd8686c80cd4a5df24e78ff98bbb37460f626cbe1fbd4484830cc25b690d66d99e101f690d4fa77d55f4ec36d47f85d0ff9a35aa43b2647555346f2ffaa9f1d53614569bfe9e00e4003139e2f3dd0d582c78d48bdb86e6feb6125bc71ffe0663be2c35bccef071a744e0d3c0ddc52037cb6ad0805341c49bda5e6fe1064df7b1bdf0b2d5361f14087085ee4a6adcfc48d3e3b549ef0be18a55978b45b8d6fec6f38f5c75724a5019510f8ce626bf7bee1cde1acdafe27e467366cd914078a9cc2e9cb0c654fdca9c74b9a6dd5d7a2034063d0e1456208f942fc6a73a7505ff9d61592b88bdc3ea8c732edd8d2c97f0793babf86c0426d25d4e85f4ccfae3a243411436d036c2a6eb13f78bc9d197b4df7cf8d63add4cefaf08e02ae49fb3da51936b58e5c1c29f3024eacd376ab40ffd596a2b1e99e6acfc53513feedeec9ff22f26b8609f0dd6ed825a62d24ac776ddf2c8a3f0472bc98ce7f2315d0eb731bda9c1b80b6f18eb815ef422c9bf3dcda8b932c084157bd960a240efac5697eab7576ac0db72021bdac9bb1e7281204bb6adf8f5fdc36a25907f58d0d5cd4db9498fa1647c8d32c119d9ad555f6503c3ea63dd20033f12374bddd95dca633083197725bbf2cf563b18dc53c1924371fd19d3a161f3e50e0526b6fc0a133646e7a81f237ea0a8f62b7eec902fa27224afe2e2a83bc993f5540e8eb4450b1679169a70e26996ab4eb2fbee43d1f5414f1430375a121667ab7fb5be0c7110c3e243f8e3ee8fa463dce5e6aee6a06e2185f61ee1abc951ae6d06c199b6cb877a9e3ff066cee5ee2666de1a25e71faf7757f21cd115056130173e0ce18aa994279bf4e9a2154ad442ea4f13c3afa9d9d971de360a6e971b8541050b04f300ce10218b684a104aa81428c0be07d1a5972c246d0e65f4266644e0f832643873e2161a1946e94282d44d89ea38a864cd0c1b53f5501a51ed3e6b73995f82e5d5661d706aad206e1e1352e91342badc51e7e251c16c9f2e60c56d4078f7be725a5e9e01a506e5dd780750c12febdeea75ba59395f200e538dda722d4f626485b1d73e4cb1cfef4deeb30e668d094f5a94f111c9bf0626e6382cd7402665033957fff6be144116c0a659f02653eab94734f124aba9e67dc179e31ecc2ec8d265a8574816d2ce816e22de8ec828b015df0356b661ea34264505b9c426a58b80611f355ccf0de1faa143b01ccf48727e31a34b39a82cf4a627246edd5aaabe4d0d32e9372bb5d02473988e3617e5a6b626b1ae23a8e06f295d7ffeda04176a5027a23d7e863c68850fa778c7c3f36bd3642abfd3c8d402da5947fb052b8ad404bf7cb26a9998620d4fbe8205868e22698904fa3ee42466739b300ef4c820078a114ed983ad65dc14e22a4d010d06949b9b66bd56465afab13cd1a391589687cf2332cb5c431c53f15a43f8ed85997e8fdaeee52f5aa5787e0aa52db1bde6871336c9c81dcd1894bb3ef405f474c3c3524e92ebd2d5cdea24653b309cfea3e05b24657fb627e97378bad3a287f5e7cd88cda3aaa052692150ebd3e2ee742c7d327d83691d3b4a90a8e72bd645a68735ad400c11fd67e2471a58dcb57307a948332dec346e3aa5359d881802e558a71f0134f81a97a87636b4dca01ee480cfd2b6bc661788ffec5f85ff52e6eb5fbdff97941c32a2a767621c599b20a3f656cf365ca7530221682a137bcf8dbfa2c3261e901515754d96bb5f315c1209dcd798a0e3084f75582762a3b528c869b546a76a45150a4a39096e32dc90d8f5ee587361ab6b69eda306acc5a288c92e10443b91acf38888f3f0f1394f97b3176f653395db42b273ad4a93ebc8806210b2fabaccd6f8ab0106a73d90b24a27575994fecea39a9ef87cb9c7150625430212dad90d9a15e570e47ece2258a70bdd0d2b0425aff0f2b5be964c9a7a8ae4b6a23767c47e7d820a63a30380201c61cb2aa5440b66d5b73a4b0274a178dfdf602644d48bdf166d592da84779c7a0829c706622fd042b00120775237f069ad4464cf3df8c87efbc955b0a3cebd6aa3cef67c55b2cdb36626e34d46768b195c66868b470487557df13d12e9579d18645124a63273629f5f3165b5ff9843889b75318d31c1c9e10e73f9b6603dfa9db634540fce86335852278adc2c1cef609a677a81d5e1b3e7e29bf5ce4d845ba4f4abbc030cd3f47146160e18abbe833edd24406079eca8d2e5f159f89de744255b75efe339948dfe38db20f1fa1707be6f7265c1368f3b9f82082d23130589cef736790e264d0b28545c1c7d4299866cedcc8f872950aa10d0f429973ea841cb47cb21245223be08c7819933b14123491e2445cca671f534a214d7802797b6e1fc5257125e3d627a2d737172f8f8fa263e7d36238037fe98416e3d324a7275aded165c550e3ff2ffdf8ec55e24d48f8ecb5237b53cc6f00ee3f9e57166fd0c3865d00fabfea27a7d224d869b1b5c76f29536d6ba31543e8d46de688c2a7fc05edb67dffe07de54fa3ed13a0f8d098d5f396f101d110cecf0eadba8c1682e5da43e2031759ecb62fd98e40545d207fc7ef62b42fde3f705423362d373cc360d8336adb6a90fb2aa0aefd4beaac13062cbe04f980005d6d56f762f6e38eaa8d2adfae1458c2d590e9fc62de489bffccfedda69b4698312dac39605fe7db4bb47a028d01cfed902c81efe1e76f216873bb8ad858d9508baa221555000c15a141873146aec1343f86ad0c01a86c2565b1b13fc60145fbfa756afb00fd7fbe3f564626d7aa243cb1bc80ab3654d3e643333f2711e0305f4a9ab8d0225819c099119fe328af856e7cc9830845beb71d88b015195a9995ccc164e71c413b1ee0482b4e19906bc38763623fef33cde63d2edfe18f44573916fed475b3ac4ebcd2536525142ef47c6e750bb0455d602f265782101ddc7f8fc2a4784a7108a785b394bccb8432572353fc51a8696ec7323debebf65c15203646de0c44413ab92e3d660a89d7f2c3650d30fe081f83277455fcbc8ff93e48f6459d0025f3e3a614cae3fe8d0ea67ed4dc504c05ff3927780be0e284151c365f3ef154f1c8d093ca2742fdef2703d037b08a13bda06534a7d089a727ce0eefd0f2beb13e1cea8dd7c9a10765713a9a10cc9aea7fe6bea3422e518beb18e07c6edd8db88ca603ba772cc836cce82649d90b5ddb299e80b51f32a94077f54cc3c79debeec033967a4a2450a5482f87914f0c92f64e444a353ff116bf60591dd43eb157bc6094461cd6868cbad80d600df2ab82a1c8a262a36dd75e0f6850ebe7320852bc09235eec5fec911f49d4e5f3aee33365bcbfd78da45d5843ae7f2afd63932f73e2dc71a6a6162e824ade75d69e2b2152ae1f158791b0476fc37971b48daa73bf80445424c7fdf1ea338342404c3b2ee5a63111986fac49ab516df7677c95b67028b18912b075b2d8e87585d7d183490ef9f66f221d9698860ec4f3d01ba45787977a2b9ee705c5a0d43ff2d45f940ecfe09c9f8c388904443ff9e227f26d3500d2070d622dad8278182597c691c63ce3d688476fb16f7271273270e1332ac93d7fee00b2a0679255132f59866419662fb8c04cc1182ea8c0cf759c6637d802eb58a5a1e089d3bbaf7e8a18f657fbb45e3dccd0a4ecc7be998d67c51819d6aefb22184821d2c089c0ffc113ffb4a658b3c790c454103b6927e864ff4bce6438e86fd06279ed6d535e463d4819f0bb526ed14081f5ba0c83dac1cac55bc15502d5bac0912d49efa69b972361ea8ff56a8144f4104efcfe6f2f7fc513d2fcfe99ed11befbffc9956c5c0ed1a526f39042719d5c8aca93ede9b706731753bab58c07302e9c4ffb00e52842e13e699e74f42847888589828e913ae75acf74555771cfe508556845a3882543e40816aff31006c5238d28c3f7508dbf43fba9c49c2bd88f48b03ad68ed0636fa5949527301ee11c46958e6e6515e5dcd0ea0c495cf54cb918460d0368cd28c0d880779f0da988185e8b864c2e9ee1eb925b9c514eac58a4390097774f55a7c794d8bcdfacbd8c7f41407f145949a4e67f33cea640ba18433688cd784363c3a4628d645b0023899a8d429d9c21e91325e3c8291c1c0e76187c80b071b3adb4785414e181cf4531d7e6c863e1b3eb4569e462253cc5ec7256d37e231cea54bee9c5cc804818ed92a41fbde65285dd1ede23b28b4303c369d9e3af961696c9d490c11720feab6886339f32b3b83863b489c2bdbe14d65edb997937d57d46b88968c4bc4a9f66ebbf89d9fce608bb7ae6d62c1149a48e6320bd8ef43b5c97d7099d82fa3427028ac8a174964cf39a9ff61781b224a86fc4e5133c6b1a046ba2c4c30674f141cb90fa2de7766b493701729120573e42504c6fe224d23f2f5d9edb99699ae43e6118d19140711c9626d6b42456ae8253586e878ca8e05114053961df648a78119d22cfadb9a9a51d66c3172bbed6b8ea735a16c3d3a04aa6fe84584e4f67cbef4f27642987f15968bdcac26b62be329934505f808c8b8b61cf6d76ff4eb425e225dc68a2d3dd0566fb574ee852dc2069abe755b7b096b43c75bc0c381af3d7eeef080b15b579b3fdab432c31ffa6b3ed88cf7beac888d8ed0034c603e1f9955210596c4346a573970902a42411b36bb60aeea8dc58ff37cd12f702dd3916624e126d5263418030ff747ad4341d51801cf473fa98cf193b6d36c5db22ce4ab7c1da31e4988b5372e69116b64ebe441379e98f3e09a50bd36122b65bbe0fc0789d9aeead27a00538ebe41c1cc0939b7eef29afd3c41ff43a21d7b3aa8a2b6c0f6d5ecc64aa4b9ed56589af1ba8b41601fd12fa2e24097885721c569dc0392f577c0dd70bdba4a3a553c432206283e1ffc3961696ddce384f9b86bbe9b1333f58c4767258d7bb71d09103bb21ee2971f6bd02ba4ff4716767a9d87175524ba588d80a93448072d7a9446e0539e318bfbc8632dca1cebf38d6d1684d1560daf532fffc09194df1f2ce0de8d8887ae1d6c9fe098ba1f7f2878fbeeb6f5c94468d61c20816627ce8ab54666a599b9447b3d8c4f4ef50023a87cc5f11e774cee138c558e6c54c9701378518263236e7462bcbcac3f5319e3c0f96bb9db75624d72db3ab86aaf846125f419020f7ed6e2ddf7ce9466516160e5ce1c207d1e942a0d7241d82473809c2cd82fd4141bbe7f132521f801321b93f013c6ed1ce70de74735941ac94e35f933f01e59f26a9b370dd74e9a9d127a312bc35cc6dd8a558aa003f455d8c6c3f733a48ec208faa1f6c6c1c06d24f30b80ccf0ee9cca0ab401831aef755e44bb0165f55a0e095224a1c96ea73c06b439a8d4f689aaf6951036e7d7ff600dfcafaf009c1b1e5dcdefa5afdba184b928ea8525c902cc7a21bcc1973da4cd3ecbe2ab378da6fe5a9006bd6b42ae0267b868d0a05fdccbe88adffc3088e1c6a1016e2f36574e1dd3e7bdab51f60af4d089b50c53217c83a6a75a4aa4ae77f8563dcfc38e065c28e7e4f6b03bac38bc8947e3f844ea7531cc5a87c955e87c4acf763cb3a1b7e399a08c161607db75cd445a3a8d840473e8d19a2bf94f28acf7229fa5456bde37fe1a99fe9a3e59c67d079b3e027f120e85a1c2907393654ce23fd708def92a2a5380de5ae4e90e7829df8dd40cd9bb610bf87000ef8555fb7c99c5d53d945bab20d02c7b74ee83f223871449ca0d8769419d9f15551046dce3f7c04e2cdb23d23721469748b87ad27fbfa3dd82acad38a393ab5f387d0b5bec503e56812c078f1df45e398e7c4603b8125e42770aebd198faf51318165a239965c934ae6fc73592598a6c99df5e72bfb02848248c7018aad109077f7b1fb22fed4f07e60c75e4c62e4d81f72dff63e4613d66e1a088039422bfa67a0b6b06d5e96d98900b7a255297b31220b9fabded2e45d187ea73b91d0e23c5d948d1e26a5da8713ff52a1a8ce892b4fc6ec75e000402bf2ccc3807b1a89359f0931bf8e345c27defb501d9cec97ecbf08ba6965dc0ca7f96aaaa72c14953294728c68c02a4a4ec23fcb7fed9b04925e3ef8a7e574e4867bd2dbe197a7ebee8ba97943cef3e6511b3e2539d4d71ada8250ac47bea9a213c249253b021f9199140a1e50fb09c476be313240703d1fa7726c7f8891d9666458ed0d51aba4fd20a55577fa540c50166b7a69f7471d66cea049f9c35d2a17b2cf3453db52a436b23bc47722bdca0b2c133aae91f2bcfdf20b608649b40d5809d18ebc1900e9647aeab53a49eea1f3f510fa016e3bb7be82ace37a3de8cb9731be9d4f322e9d450aa33529fea4dec8e608810506b60c2d807129f332fb492217de00c90aacf675b8f4f3810140f523613fdab1697158c131a898c1caef5f6b07d70f95d4cea6df3850e5dbbf6775cb390c226604cd617eafbd67af31adf76b7b6a0bfd500bb7096e4777947d12e490421cbc7aaf6c2264b5f43ef09690f2425d659345875e986b03579460142430d22d924bf58fbd8d44e8a983e9c9595f50c154c98db85960c0d207af7e52e5957ced619da8e39d59032106aede69a45b2a7c6585cdcac7688b136d3124efe2e3e453bee71ded3bcb469392652ab8106ed773a39be624aeea17f480ca3f1648f397b6584fcecb07ef8942d90d689da72e860e793b2e11f8de120473f44dd8169007a5651ff30c45210ae0e13cba444bba5aaf717ae2c2764deada852ddcc36368e884e04e1a2e7e3aab1117fb0e1ae527ce3b076d01ab7fc16d7a94754b7d3f8ebe7e1ecf0794213ec8528731083089a983388179fc17a621816e4ff6c592c3d95f7d69eb15e85131bb076423840f731a5fb02083c9819ad9d977064d612fa9395a4a88f856e2e5e347ffe6a9c62b4805c7e031ff7f7f592c8840c2a6632e767c0fa9e1fd34f16515a625b4f9f311369456442d6871202159248fe05cb77d76f3e425a60887f8fc985ea039a34146d71b42db2d3a2707628b9f6864a700103d8ab99a4f55c55a54d21718b670fcf9caa98e638ae47f054eea8f2260a5050361745df2329f462144d694078deabde9131c01f35128c9ab43491364eb42c8e222e9476efbf4d5d928b0684504a99ce0593bc498c15ae7b384b5e107d9464ef4aa2e5aeff98d9d175c64278fd0c52b0e8f6d3ec7770805abbfd16e9e26a40e3cda88ce7237a74e36a62af4012ed3f4061a573b8eddf4b373d4fc337042ad8c83c7a9f166beba9200e77a43a529d582a9f8271684ce9ffe2906220064057b6847266b94382a0026c8db446c91f612a6b91560d16981d2a1fb0bf2f642d71dbcebe77f0b3a194440afeec5146c644e6f95b8d5c1ee71d8d9cfd887774483bdfd43aa00ae0cabf1ae13518526aa1d5136bb0b0c4bb00e22afe06a721b6da8bde4f7c960eb6c0d1eaaccadb672dc3de8bc8f5b0c44cc530b9905b04c518f4c704b9565381d733b0371163ce4ffff0df8c921b2df9cbd9d21f9d890bfdfd9308825cafd21613be4e5bc2567ac6fd5aaf433130f02b782d0e5e2dcd171f4b3e7c93e320368d3607e7c1c6ddd9f8d819c0065a8275db4dc7e0d7b8cde5d331e6d5c851f1b5c17416b35143bab23358dbb5edeab94d7aee0b3543ca9f627ae2121a4affc75250b7d343196880197598dbefa24219f527b50af3ac542af2b42eaf2fa041820ada430591424d3e9f8d984e0f9e834bd81bdbcdaecfe9553609d6ed8d623aca05635625fc397229b03ccd1a87a60f2a65912e1215c1f7ff791ac59cab4d0a660c1dfe392e628222d04aa440264ca115fcad9a4ba8f3d93c9770b8b9a298e577882a36b25be0a6c39ebd862fa8bd7f72eb7a4bc37162da3ebb092753f3c2f701af363d1c3e4f9d9044116bb7c3c0ea59973349c8d2259f3c4a27900a1253c1bf742b80c0759b3ded7e52458b4881a278649e4e5486f99586f8aaf404eedcab0c19a9824f149a44cb12860f0632e55c2772ba2f69103c6682c97c8f682ebd4a31147d82c53d9927ef03b7b8e3985e628718c358ba6e5f23e31a240c95507374692a620524f72fee024b97399a745ccbb5d0526d8692e87eb06e4cc029b8fba4cea3262f18a36a5c4059844e0b00934a722b9ad1515cd2934a01802910f24d20f599fa04b8c88a4643858dae129071f80261158ac74a0bc5daf60b539cd5aca405a2ec85939373e288d0ce3e24e3ded8c58f1c3e13714b6e79ffe4ee65c301510ad7e26af16325d386a8579cfb6097cbe309b3db2d276c8136307d8b018a7146a10cccdbcf1fae62468d4540bcd00c949202bab12f71c22242cfd172676b34c5d1cc794251b4259014fe7de78db01c4e33d6254cb4a8b3f15e0b4454d1f4971542e629ce917e00675055d02248fdd68a1ed3a78d38c2e43776ac40620c172ee8afd6230007f50480ceb99359d81ad0c152836b4128f80d3de7d125a2e7d33610063f4a341e7deb60c2aa5648fdf25d64dcdbc0cbf367906b265d7c6d52974f5535f8e3c683d223df279e6bb044315aa9942803762a95afc61e0a66aa6f3db07ed01e56638169ea987b04021ce39a930414f5c0bd7f5b112810bc706c33064bfc4dabdeab07fda1d9ef7eaa5793a22e999c5c463950764ff8baf63f67adc71ecba2a8b42071ba90e8c3b66c4fc5f329b905b1a825207c64b28ebf4f053d01adfa180f5c34b9f3bd82324cce0634206aa75ce55130c338f9c6c7be06db0f01d5dcbdfa2b5dd001c84899b761753fc3621a9a64454d6c607727950478f80986b57c05e31e8b5d2c0bacab27f3d120b9f721c0d3a06ceb8753932b9c1e09e455bb493ba859d7454fb13c783d31594c3de46f2b680f905a09d35084920693cde286d7097ddae761f786c7efad1febd29ac5e4d98d38a9b0e30d0a2642e9074bb997802a32c2bccbfa8ad159d59ea406deb88da61370a6220a1eb00003546d84371fee975eabeb49c788f37d0a63de21027d2bd03587e7e15249d3bf94637edcffd2ac753b95060a799c95d25d8b1a08da3ef947541749ff7a575e8de5365326c2a7c650ed7ef8791313f7949c7d248db083a55e346714774ee01c7b49f2954e8d4f9357ec0df91ca7b515b921ddc4e32cc946b66c1bf7e2d421f3d8ae5fe349b6517ea75b9a8b2c5d481e7e6fba58e006ba3890c281b20ef67a1baac18c2931c44dc4c3f0ad49e9cf6634741469e2b382966b28aaf0b8130754010c8da18dca9f5c24a4ecf99d176cb2c869021c3036af9ad2473c3ea0fee07c09013dfc0af1f7cea54682f8fea1217187fe65819c8906e3797838916441c8b90b50b639085b58a3a210503d6c7f965f1d5a68dabcf5910286bfee902a6d594f54f2fd6d9b9c004372d28c98c3245fdc1a47162ef747e4918ce3c789217e59856484f93b31030be7e713bf53bc946d092965bca5907bf0b8effc08f8fea3769aba44197006affbfd11a3e27f63c26358ee4e5be60bc2d5e4d02453a627c891b6cfb0747974a27ee60ed450a5b066e54b2bc228697806e3f3db3ab1fde0ae9607ee71053a285519d17d07d7fc9a52cf11f1fee26fb69a17a029ad45ef1ca9aa10edf60423461450de858c7f923a23f679c7af40d82dfc06dbfdcc8d37646c02ee75a3ffd6bd64b62ff96b51b82158815aeb06579c2319ae2c9e2a6ac20a49414c60feaf642edb54c0ab03315bcc813c7e6e2c6dd54de4e59032f88babdf1027de74533ae7a578f3507fedaac625cd2f13e7b9c4b860fe75c8e448f44b797dca6cec0b9671790de76abdeead44abb98f4b02288e29f7d5c40aa8c085b52bcd8a00a02ec5c0ee3ad0b46732b8b120a8f602b712871cf67b434f42f44185c2708a3d424e7a9c76a1104379e4cb4c6d1dbe790745d46142bce726636f8626aa2b152c3c86c6d6cddb5ce0ea4d56a535c4d4afe74b6ab480f8a858ace06c846c07de8ef9f1d1c88880da086b86185504e63da3b48185ee0991c82a9904b81c2c0c080d244715d1706a7cab54317dcd470b0a0337bc2e58b8efcdd6541feac9cc301b65552b6c3d3c33b8645ee4d4c10fcf846f7cc6f416cb13d08e4649ccda8d4c54e6fec2d4babdff12f84612053f42495a1c052bc5130619f4a4b66f4470cd76258ceeea70e70efd5c5637deb47c44a9556722e66a03e60e2f6621ba2ec4f5be3a49625140f73226de0fa2603a46f269405d418acdc739ea903382b29d0b7f01e0eaf67d75e41fa443c074b3a5c3249d94c198aa74f2707ff3c82bd0647d97e18f813634238ebb19826bc904b159e037bace984307f52604d8844ed51f29fd13f3667c8581e70a4a7fa1424e8b28f082a025f4e1aa69ad33a01803ab41bc8c68f873d800d961642d5829e0c01b4baa7c3f6e18ccc291b6b34180794f7c5719b57931a6460998480143e08c2f4c860c01777a9fec6d08ef446b674edb5607cc4982d62865b9970f903bd46f17318561e113ec9c9c9c2c615803e75039998300531cabf65eb55e875628c9ffb5503b2837785ce4b641f780ca78b6a680bb5f3e674c761c3cfb1f0ac6d21cc20fab5d7a0405a31027ad5c8f276ac04e4fef5cc317eda6e2d31957f5235c680c4cd134b0f4f7128cae0650770b69d1b1311e4cb7f3612730fb319107ce0635dff19fefb5aa787b5a38bfe97793e732bd6604009b6a50ded1b16105e651391b3cf9dbd5c04219d397b88f23e6ab59687e1156e35b5227885a52f018fe609f35a2a21d546aa23bc29017ee074e12af7f54f0cebc8a5cbafd6c14ed2ee65096fdfd4a61fb090acf8f895321faf22994a44bc34920a30bfeb6001d6b5a6d5d7e0138d2c72099231798ba06b3938b14c07076123983fc20b871238abbaf513a227aec7b5928281841ecec5e2f9d671d60749ec1445fbc6ebfc3f06facfc105cb3a2743c44608d83538cbedb2b54023d99aaa0deacf4670c725b7956130972803ff79b9de5796c85da4a9264ddeb9edf6015fe1aced0d717759e0c01b677b48aa804e18552c206efbe51be443d4c469b80398592cebd66d4a34ce833986da686eae59a9fe5555b6b38ed2af3dbf32a648d88bc20cd78f0e9472f3b25b2c7d517a63f263aaa95a4430841528b2e882cec7f7020bc86ff30d5330a91ca8c632ef1ad43abeb78dee295417b55793632bd2d6b0c045723f408f1b02e0583666191552dfd08354bcb1ade9a0ab5ffce03672a88fa09112437c3c94a7bbb320fc94749d5df29944c4476d38238926b6a4be54d727ed2216879e9e7ec5ae606561b611a86bc8a6b26e995fb748a88b7e4a23d8fdb5f6538485354123dacab6127d0554cca57e9734103f52a3a7101622f002cff2da645ef3624a6d6478314e079bccdcebd6a28f0ad10bc90484777e3aca0405b37f7255807e175cd822a579c51bc2deda91938728c0e85d3a96280b257b52f57aec2b9f271ca0d09a9e5d689cda0b258be9be3fd05cc18e3736e83993603c92f6fc8f46318281ec0b7874c31ed5f0a0cfc0555de28fb5256ccae264c82b4664af7db4ad3fd3f7d7a9605f49cae5a2d452ca5dfa636d3463fc3829d52004f36fbcddc048048cecf1973b69939fcd561be81e534985cacb9c5afe8c130522a8179f9c74834a93147ba64748c82449d09a46e519b24ca4f784a9e23fd4b4e639a8129a3062cd210ba5b71e4fd80fd2a8e5c40582892966b08c6c42b38dac40fd2eba2844a37f8ae30a94a8cbbeee30fe88386f56732e347200c61323577e6c54998a2dc4cd9d351a7a95eea8667ee896289cb8cbf2605015ba969fd5e36bf6090628809b189ae901ce011c3e7e7516e4870ae04dbc6a5e9a84ae402afb66abfdc859b07b7aeeb263ba37e85bb33826add2428cfd9ffa7d4089ef8ece98a57d36a85fe63dd8e6a2bb248d1ed142b9164d73bf6304c61215cdd62063da9a94951fc46a171e20566c62ae2badae04bf7e91359991ff9ec37affc1e1c2d9a57c9e7a9d95f6b261a587244291c95059b6fac0dbb1c59be5b60804bc5ba4758e81eefef74e6173725791a9faec3d096b12d0f501badaf2db21d5e292e8393b0a1219efbe4b29d737da834b670cad7f3f9b334faa82290cdc3b43fb23a1c77a3920eddf5f4f11e50c8061debe431cdece1b5d457360fa6da7ff1585930fbf90103cfe686a2966469bd931bd2e4358a82d4505bd3846c642fdc7adad86a399898f2a5b07a21ae2681a2d2328976c3ebf9daa726583f98a0ab707d6594f56acdd130367883cc59d4226a063d4012e18cafd32486dbe216b3bdf18fe8815511640e15e30576dbdb4c78128c3e0de061a7b1c518aaf8a176f9cd5cd87cde743b9ee70bdcb37a4d98faf34055f669b6cf51c43514cb43fde2492d6b6dd35aa04a031d2b0ea6ff4686e76360c4e5909c4ef6abaf356b93371b217f8cb9316915ac94df4d9449dd0e104b3093144afaa18492db73775f1f6d170bbbd796a045ead6c783295837f226dc67a994b7ae9445bdf45187d597338f346b8a25056eaae0aa259518ed2bb2de12dc00c8aa5c7fb718246fff4aac8ab93a9560708d67c61d23d8eeab6f10bada0ad775905381a8a14022b7d434e12e19cc2d58e93dcecc7d54437676e2e57943377003e074be8fff80ac14e5fafc919b0a3518645209eecf414df776968278934749cc6157dadcc302cbdcbd25f33e4e96259ed5e5f48deac742b6547d9f309e854bd2b05e23f7dd1b8c49fcc8e48776df860f24a33085f42a4b25d71bc671f8e96161d1f7faa75a99450d2c80ccdeedef2d732f2c10730b0e244cf3089c3f262e3f2c70681c575d2fe34e38c4235c72aacf94b4d91506d82478b270a560bace81ea43eb1325a586ca6cc53e1ef9ae04fbdc7bbb6ea6c002533847f2ca2af121f76bed6a9be5b9f5fa45e79f5ddacf1e84b4d89f441c5e09a079c1fcd829a3f84db5c5a1648cfd1e3f9af3ed4279f4ee8f67fd090d63f2db44a445f6ab8d5c50853fd36ff0a9ebd0d68d376f640b56cedc91352268029ab297ddea1a4c1e46543a5862b3ee597c9181d675124552951c93455edafd4b0d6432b7af56ad6f672f92d0945e52bd6c3acc4d22b5bb4b43f8003819eacc641476cee3316b2bdd1eb3c646805ad399c6465550729c817ff906028701f8ea6f9168dcdff5dc3598fe45e946a1e08162a75567902e7def024e3e20a8d4391c035dc156a47aea344cf1635e6b990f1149a1333d97dfa5f9b9e0ec80f3c506565eecc47415cd237521375a3afe04b7de80b8677147b9289d7fa5efc82b241f2b5827200a39806e0c9919c699640a88abb79594586233b05f9859f51f84b0acb8cab02fe1620a8ce61fb15972eb8a94411bca66e8f7ff64ff68668b876312de793d88db47bdf80899bdbf4adce1298924d6e3d612859a17584ed165d2d9e6d1ff6a3c6f125f98fa1f942ea0be560f8cec4bd4b8b436559e49e8b9633743d2904c60434b8f95989b213e4a45f22a6594015271839ac045ec5875c425c4fc41547c2b85390b361a35a97cc49d96fddce2d124c58685a40e8b2c42236cc07c6c35e2c58de63c6f0b2e91753e07972f740cd05d940c1d2c5c414281d5dfc1de86cbc310d9624d6becfd3969e9d16c5819296ff6f7a2dfd8969099fd8a8232eab4b0d89d01d642fad2c3845dd7140fcdf1e596994f3fbca2d2fe1d01cf16ca8ed67c3c262d110363b5574939a786a9dbe625b690d45b390bc018f3f2bc9483568f81adf212b88e7786627e2dfcf6ca369b3d80b1bd723259f616f3f5251dc743c4b5dcb5b9c69f1dfb7d4e0c02e65593105b839e7585bc4e301406f9055e7074647b501113dc4c5f59ae8b10e52d1ecd327bbb702829ee2726631e5237dae28877af4a367c6c8b26f2fe28450cae32c6198a343e9f98bbb2cee46afd0b0c36cc8639c9ae3815bf6b4f0a905f8ba121306776263ee3ac436f78cd92a79ab9678f23a5318fb2e70ec41ef414385662c87304e13efbddc86c1fd615f89670200a11cdee06f328e25d7d8c7280eb2e8fd29eda2107acd78096cc9072dd7fc5116ef4c9e8d1fe9e1c640fd392398d51bcc97171edbfa0e0dee58de42f839a2a9fbeac175818cbcd96b7092ac0fdd292e8c15106e715df7eacef6c3fc4295072b46097606eccb323b19453a868d146f2e247febfc40595d2cc432ee0ce03702fb99e24ab92704d601853a53c2ad88dd9ea23a5ba7af3b30a8e688e3dd30dc436dd88314915714fe0536b82ff1752e80c69ac05ed2a7d0f7687c959ee0c37416c7130dc4847a7568b88078f30b0a9022331e29de3f41928385bb5ae3736b6be4e11a9598576a12dba64169f8aaf3eed17044b13630864bc0d0a9834e17e4f5a45ae72d6de1ad21128d4542589256862f4250214d7ff95ef6557865fb289b0ab85aa5bd40aab987c9cf0432aa3f1edeb732bbe93e5a5110417a8ea46ad84c5b304583593c787e3961280c6335ec763586b23c6de95ef54aa153f26931dcdd3228cc1c6a809dd879cdc001c54e98873cd132a10c71531aae5fd27d77b8ca4ca1b1a7a8082ac6403c5720a1774bd5a58aad3e51c653e52d25246b0e5407c91697ea7721dbf9e94ad097d2da2dc619e4b763194c9ef0cea820fdb1ec9fab68de010b62cae73d352709a62e8accabe9b501d46e20d600149d392ff181cec52a6a94b81ca7d3ae9ff3dca938d1e261c595f0ad6f86097ec5c4a4672c1632e2db81f7e9e3f35cf5217febe2e86397a919c731c2570d24f16d98dad6e99ecf5104258ac0028a2e8587b71f7969f0f9a853f59c0365a4375fe53e6335e531c60ec302f4e3b9836a565d6ca9ed17e22bcaee323d74b4bc83fcb5b13ba2ed4a67a7810245b4eaa5718628e8f7d0aa01afa39671da946575e1c770372d0a3affacb301b53d2ccd9aceb8b3307d01881c6ae10c3c69d869f1b2ebf024171d64aab1fed86d9a99b195cf98dc4cec8ba9c74c7101f047672705b3c3f5e45fba1173eb9651839e8f50ebcc2d099eeab072b7d0e2369c0f785e72a2b62334ebf2737a288aadafa26df69c6eb25939d373bc0ed884e8557429fb814acafce629a8a2d35a7afaee18b5d42489862d2e1daa6f63ffe65b492dc9263851d1984ab07e6b79572b19f40e88f3d954adc0943dbb69c690dd68fdf622f94c7aa146f681d0617badf74f9e9adef56277a672d47346cc96d0b253c0bb9398e2f81982fd6abe3791918550ba2309810d4923bcec7ce891f2d2f198dfedafff92b681e3751b93ba433fd653c9920936342999764af658f00b444dc63cd428ba22b2bc4e4ab5e66eae2094eaaf34c5a7b03804163746aa421336d4e86541ea61f79eb1811a20954852b00abf01f40f57333628551ffe56084e96c73d25f4db9b28119300d0ffb6425d95ab8938dd551083979f286ca70625b10ef43df6b1a7ede40f9f88c03fca2e973446fe459053754e165164d60962b1c847f9ad4079d0335dd9b9baf5e690b5c008d7c618429c381d9be677734d46620e5c6aa5bee883eafbfcfec2defbc951a82a7b1e3bb5ce3317ccb969c70464608991fcadf921be9d865a1e42b17e8d431d76bb1122d51bfc27416a4bec789feb920840bdced319702ca34e55ef78687e8ca5b1033581798f97d85b2bbe642343db30b6ab0b9d4df16511cd61f03ecc70544071145fb8e626351e0d9ca7ad81fcf9cc14748cde3e1ce67308b7026efc7cd37d3d54dc244aebf59cecadda850e49c88ab39f43f101d92bd0f556c36f2e7045e3173e7eda8b9b93417b1b6aa2e6571bfccf18afbce262e228651335cffb911fcea912843a6aef180a83b16326ed48e3a00fed764b67faf3b8a0fb0089da30e690d53e71f979298781962d42c7f02af38003bff4dddf9aa8a456cab79178a9e2aaa26676d74174957cb69daf402cc65da857c997469901ac925c7bcd6dfac35814a9c4be451f54686862eb639e0721ffb6b9dd2517895e92551f0a284dc9d6637e12aa4ee9999b513752f045ba77aaea93af3a84f55b153c6556547f05cb2cbf2ae21b5be98c8666afc22bc63054be6a13823930cba05bdc2158c7e1d9f43261b57ca985b10dba3a8b28b46ffb4c8075f0d1d8f7fab453b84daaf55f0af140e703d347c58c83187cc8b6dfb2f71d9e215ec97a53321e3c1ea1c3365890d6ff40f69b42411e61b01c184ae37607e4af93e84b8fd4f5a553bb17b75a2176d65fbb694b758ede5e2c5f85dadd2152ef49f404cc54f8183dfa36e042eed420bf87d494ad6337b7a1cb658d57ca1e5e53db3ee12f11dd7e6acad11f76213bde20ecbd741f1be702a1a998eb0bb74a44e1376787b22735d2eef6978a6c8cc990d5770380fbbc33dba73b8a0d704aa13c86c8ddf8b13ef386c61ef56ee673868dc301017a814844c42297159ee3b9e97dfe29d701e311110a6a0f76fc57bd6f5146cce991ca071361dc154352ac6cabccbef7fe86f867e8da14e16835a893c3431b68ceae3033cf0e7a331f07e20f2cb4771c1556fdd1ce5e5d36f82f6e9d34afe053fa6549e247aac6b0c787b37a9f146fe1fb1c55c059eb85a702b2ce629a46bb535e7c682f05638e503761c6ea9501b87f31eb5b55ebd8f0a60836a6521a3dfbc886d3f1b91e579cf4b1c83c1010c1e0d4e7b70415b0fb4cfad42e1e7e75f26d2bc23068d088a348fd4dcd2bb029da621737041df38cb2020604400bbbfde096111880ee565b817cd5c23265a95cbfb8942d253196f88b9937984787491e37314002229153ede0b71f153120c723fe12b1e4aff847daedb151b48bca495fb10fd4c76cb06f6e97edddfdf8d97da0d07017f5cead116de471275b64511aab4a409f609ee5b18d6939602284037e14e8b92062374866ea7d7eea960014378d3b020924e3177310d87c3da95e94567b91454d6b12ca84ab472447bd51ff7deff422fd8f9ef058d99a6a0d8672b99932ee8e9bdcde5f98b22db3cb7fbbe605d8e8457719b9f45df773455cd531be6807711284ced94bb3973e37be7eb1f26c24138f6d4f49e7f2fb7ac368447f7f51842e4ac09542f72956f4d9eb04711f0dc102a79973a869e2c5152579d1689e0e498beaf6f7f244948130a1d644e327b89bd34e2676903cd768cedc7dcec66ac851f4a720520eb4bdefc52891401b7d09a0551048290d29a85f77644cc56f4fc3135e68b9e997f2f72196dd18cacad70fdcd4e88577dd443a9629b36045ef6e1df7336f89f54026401ac4af2a66fefc34e8dc71959132d5d823621f406d5b625c57dc33bc0c791192e20b5524932f84ffb6e4d6dbf1445e174ac93a7bf97c924389b7888d041c61c66bf6d6700c56ed8cf94b5f7d63abb36ffb07f049c5165d0330e1bf60e747a664ab396e338cc2b9b3b45c5175d879c5ddbf559ede2237c4de0e44be4a894c14f252c02412e19062b269000f5c6f33f3e0392a4db4a112ce09087089b2544259ce9ac115482faf8577bfe740fb673920169e5e53f70d4b9991910cfd6bf320dbc8dad8fb89d84295284559dd8923304bd3a5806033814ba5f67c6f3f0362f052a6798f115802e08ef93b4f72ea6e05d9761c9c30473fc0f90bc390a943f8db0932cc7842085f326dd7e1256911626ea548f116f222abc717863136870c8a2f929d64d84ea00bf4c9e9d213f4095417e958ecc7360f9f1efe1439da6060ba32e3908a4e78d348ed92766e274e2f0c6bdf3280e63de9d835e2d78984e8cb0e2d487df0ccb32a183b1c32780797c29e48515580fbf5c8cea9b257d2f93f30c4776ed2d2000c8e4009b57e86ace042846cb545bd027c83c8c17423bc8d10cdc5057fee23b7563ce676b1c2827a224e1a1ad411b25bb63c33e2e3527dd3f3847f0d7aa1f32dfa24e19ad8dfba1450657c8e0e427e42aa631097c94dcda0dfe517c2d867b316427fecbbe5cdb598d2022ec5bddc95cb05f003900ff20ccac77f7ab4903cfe9add569d2e27a3ba62d678194e2bbcdd0fbad501ddc61b7dd2ce304a59b51826c4ee7311c7f45538920d1f3955da5f5830137fd383fe66fb0343310419a223885208f3895fa596b564dc64e111404c49c4576e600510fea77955c9c5cd9d7a54e85deeff870132973657a5eb0e6e1983f25e3dfd755f2eef989b5e575ebab8a9f8d0c53292476d0e0149fca207a60b2c9ee5427db7725a8eaca5df6990f99dc4c47810e7ff36c136f64b16ad7b1d0facdf3fb17d09d2b799af596575effb6b3d4684fd177a54a449b4ec5c68f809db3087d5d64815f9282976a1eb88b811f24c498eaac8be1d3910956b8f45257215f6a79ab8fe52832453fcf33ca663d12dbcd19a2c109b1307b866390dea13d03e2a2b84cc9a690f8c155bc8367f28bdc17f2ca4586c3901a31cf0c80990b3786363833445e4a9af74992a8d8724ffaf751518d29a2347146cedd8f5ba2b2cd48cd704f48ad39fd2341c6f59d2fa2fa7dedebea70e0e9e67d91fd06fd9ad45dd0bd431fcb314b85e8d33194e43e8ff60459971226484490ae9fecf6d90605dc7424ff2bc985e150db5a01346523812571520973a2da043db2e66daabb4050126a37beb8aa9e918608a487e4f324fa70cfb748981c5944a4a84f12df6f13506bf4715213e3e9289d9f1762428a53108ec2cf1e0ea449753cf764f604cad1259365f6ea6072d5e6d29a85fe0c5f142c283a64bd45d857050b9ea967862c2a45ea480fbecaa2da26559a938b2b83d1ca925a5b65f31eaec08d90e2d042ee708b2f1bc8bb128b940bea848f0730e923ab15ca531615ebd973ac7e5b6570b8b24ec1a02c6e5d1790d5d22851b897faf3ac5c16ef9f8582e579b7477c63e9c7f193c1ae577b889eca69a8ea7374747dafaa2866de149640582f0af3d341bd2ab8b30f64c9eb8332637515d5d3f9f2b7befad45369c397324b33865754d1a69431b2954d514fee813f9bb3b4b3726844083d062a5e694eae2e48cbef5aaff1ebdbe679ca3ab9ce2b49b93344cbb0fd8c95abab863c4ebd3882ec53a634fbbd0d463ebd98d48c81d3c99f5428074d4f5ecd77f64558ee5babdabd2ee7e0c232366e634a675dedfcc293d8499840e46fab75a3c1ce59deda3aaadf5132e2be0ee59692f96fb0d5bf9bec16df975f69ad08d5015edaf99333f01ee0775d00c2eb44e18df51d817b86055b84fe5b47a99b615c33cf5ac21a4b04d6a0d38cfb3d2ee2823ee3e9c44990380f2ffac022e3cc9d830779c656e7dbc47c1235c92800e40f559860fd7e5f28b23bd4d83b7a3a69d4da681f44c2f95925857bbc5c11fe457484a7370104a2af561949dba9857ce9ca5bd028283799a17cd2c5a5abf2d6fb1d16cfb974a42be30532be82cbe6213fd5f263355b59aea845005066de38736017a67253d920c9d1cfc95f7f6717d3c16ba84f75a5f69af71714b92a5a05936b997d63b22143f31b6e27c9230f3496203d67a42f16b1ef32cdd879fa9fe4903c5b8a35754dee1a7de4235fdac5741b18094619d7eb82ea9bc4dce15aa6556250545b2e1655b98f153f63b42ed176a072e100396baa730b29f8fa7acd1b7dbf622350411be43b30d954b7db83e9ff8c811129ae65dc6d1e42975ddf8578433e030d5d6829206a6f2c4054062a2f1aea4686e2ad5ab3a96e0568f18918d9f8158502d858acc63be686f78dc201b64a8ede302a9aad4b82a594c971af64133ea05ccdcd765691b8f7b5ec59800b702aadcd4a06e2c954500e8d6b6b3fa6456176a544528a72d9ea00a19c90c7f5d21c98fa9aa524ebcf9e79c43cf7538939972be79865b5033ac9f252fb3b18dea17fbfb560ed83f8fa30f46e30ee717bd277c4650ce0eae8a0b9571f3739a97f538078b376c13f0bcec0191b3d1bcad09a5ad8bd2ad487cb4ee450c94c82860fe964cdef597e6703b4f280fc55f0ac2edc8f4e30055025aa1c754e89e8a9c80016eecbaebdea43b55ae64524fac40af80fa23784ddc03188d92c1c57fb9c82030563f9b880718ca558fdb69bbe72666e8191f6d2b82941eb6727ab8e34c24d160e9732130d953e5fbc0905ce2e0fc5ffc4547bbec9750a477b186b73d74b8f1c6dd1db8124debaf7fe30a7edb3868827b6639ca1034f1d1e294a2ddaba8ed0cb51d92718bcedb0cf57ca2ada753a677ecb1aa570f659916e2d8b94bac6a20f5ef00b11b01f3431fcf9f6ed7aa47439af8e95aa0e9fea76cb9bf0db59255702ac24985f129e61196dd8eb51a8597f3d5ff50c50c797448a9697e61296015315a93bfb2cf3dff5f5262322ed32eca8c2c1557ebc74ab1d235653dc3bf214cc43f1a3a4361eac5c7be014f71616f49747a0717c762bc910c328d4fe9d04b16f25df51049eb665a4b791e1d38357bf84108445d007d981bf46ef705bacb99df4129caafa527bf9ed95f6356f73acca77b9c2803f4367799ffcacc9e26ec5207814bea562f57eabd260de52cbb118df7bd173aef5e1ac2ba1c9e492f95c9582c0ffd13946e4ecf283cc26b5cd1a2852ccb0b60c4e9298a9a141ccb8ad33d05c33a9081327aa1e6b7f0f1dcb9a6b19019d44364e6773e6e1fe3a737cf048a70e79b7caa2fdec28bdf745119f862948e781345c1693170fb40e17e4ec7ea28197cea006334e7b6b50948a01dad1ba21ef755104d6f274785dabb813c78d1270f556796b28cd3d0bd45eb29247fe83329d7f334c1a8c29f798cda8a2d58672eb31dd83009490b286c4e98dbfe4f6b20b9cdf2cd5b44dbb2a91fbb63eb6e3b3c8883c517c3f9eb4015ad3cbd4b007675ac7b119fcd937a652abc1e7504295680c120e96f53348f3fabb69186c855c234f297023ce2c7dbaf2eb8040f2e480fcce714fb6bc3b6c5234e16011a55c73c093dca7c90aa1c4d43896c6a49567af20daf6f455f685bf8ce0836170cc922abb45e3158aa7fa803734e40a01ce7dc60fb7baa6ec7cbfa4a2a45e0c4b67a7f40203ab707debb7519a01c986b0e36f762ce2967d9225b77b7ca8905c40c8576b460e8897944984c1f3a32ff85922348583e2416491b7bd25375473ea553f089c3acea9efa75d1e948152c67050af843798dc3c3e2f2183bef36692b00e7ece39ccc72cef596e095810e98c5549b2869c9cf6f5c225b1ec6194d6237bbdde369ac761d1b189add1143eb596d2dd90019c3306da27a2fac66369409764a2fc4cef28c2d7d4dfff94d07053f9e822b88d116e261954551b77d1e4d46e188f4799fbe39885a76663def0cfc877ca7b03bd83f8926f7dab86a068dcb908b521209ae12e5b4ab80c893f8e8a96c5e3db1d08ceba4f97a5e3b387c7213acfe6115cb2a3605d7441d54778b160cafbc019c91148d9294c6261cf3857a69ab54ffaf014616a0a0311e805761f136a41143e62cd6b66e3d08c70452b55a87b3087a5a7a6c55a6acd54b42788bae70d18b097d16a50bc64af1cd123d0bd2a98de803bc1464ac279d25af60318de7ea08a4235107d24ff76562bd549d11a850bd5cc91d121879ac222429d59c4b06d0a0c841572a09a3e1649f5933e015af61b402e40b956e1f0b1cc25592e451c70b309f11ac85781a9957d5ff0ec1cb53b0a17419a2763de2e567e108be9379dac29a39bdab21c7a4af9973a5ea8f8e937a7ced6d82b1236d235e1f80bb550b56c4e9a3316f9a543067adf1423fa0105e928dd804f431ff573e84cf868f58cf1654d808e2864372af208659706944c21e951a706c6f7dc1d5c7dad6ec7f0b85d79df2752fb876a56c2d20bf383f4f00f951cdad2eb699830d7357574f6a92ece492cdd38bab98ccf169a945f659c937e87e36777a0163ce2a4dc24fd6d003adbd82c4ba1178bfcee079ea3a8fa6d73da9cb8788208418726ee7447a74f276c4afdf7252985db3a296293eb7d19be6658af5714f64a38f324508bc2731c9213b04f5b432dc21a1bde5e24eb12d77df2d6b296b63e1adbe9e1ee9ed54bc83e2da1fd5f76453c1a460910f5a3649d763dea74e571dbac62dd14d59760ad6ba9cb0366bcd3f4545f2e0ebf8042fa83ecaac0ea451ed603586af54bf1580c0ef98c79399a7518d80d3a9bffd559324b567aa9399f207f031956a59672a4c5e2681b45b00e23e0da290ed40cc208c2cd35099b4795cbd66bd1121593f2afc205a9875d44d8eb3069a5ba6c0596b5584b70811b12f74a9a17c27bb94aaae5759ab4e1eb6b9834dc121806175b0e42a2c4484081c8d4b0f8074f3857d617068d364c7ecfff62c5d36ecf033006e5f597c97cff0f1bc77c7527200b5bd755d39eb8b8d298725dfe4df9c10ec392fa0006fd8d2822b3379540a22577161a8d94a099fee5c6d66038587483508b517cab2af64e17eb194bb917852d3b5083f2127c2334b2d596fb2ed9802365b3511ec24c19568847306d82d76e5de85793c43e09c97ff14b12040d61c27402aac5b85abe8a4dde61f4129d04a9eb79cbbcb845e1c778254d5edc6f50f37987495884fbe9048a20dcde20aa3e35efe637f7d9c00cba7b73ddfbdde722d593b243a67945421471e798e7d665d635a1cc706ec1d73297e371e704d99f9bf888b8527693730153b9c32ecd5f8488cf4e233b830300146744164a055dd024d008e217916c156b40b9c272ae47e409dec38cf18ff04def01175378f3877605ae851a830fd5d554625c8a270b982f106da8fe11f2b716703d40a2507bedd1774568b06c4f4fddf2b4c7a0168fe3496a6fa5e0c3e8bcb0dad7dd70307e82434356d0ed8a196778edd1bda34a4c3f47c5924c71fba7665d7f983cd30c737763e9f7cff62447464fd704e5e62e5b83529a8bea00934278d8d53501d385669e9230ac187458e5636db0918c37cc94249f305d6f28b8b0daa9988ce9aa7dc211430da09b4c392f67c10ba1c50975b94fabbd6523be312574ca70b8fac7a6c33cad67f69ba2ef00b5615a37285c86d7709cade0ccae2fc20576185b796e9c9c790bd98402f10f988627c98b96749fd074d0c93ca488687e92306c29540b9a3971d21d3b91daf387b040dcc4c3f0448dec68d6128e48d4dc073ad830d78c3574879ac3d5b0ae3f8db92a534287f8ad2265f4668bf5563c551c9170c5ed723923cfca8c28a3560713820f9059d8740ac668d6f7d5f6ee7404db60156fb15f7d6a4fb63296b141fd8ac88e8a1371354e3e5c7673326eda4772fda55a367017ca2b39a7f0300b5ed262e67f923a078f99b1b5b3a80c1f373125fbb20d54fbe6d0e98da9d3fac408de83c6feda2276fabbdc65a070e3d0a372e549c0a53efb550a64176fa687681195cbf9f94f3d1c6b88e29e600e6ccfe6142916bcbe9423f3a4b2994a75d9d6f9739e7cbfe3b528723e43e588a68197a164a7d2c500712938ff6d5a0263123e0cef8e8b5e1547009cf3cc05e1911991da9e3156e49126e875276371ef9ad781c44b6aa42f0ca7417104c990ed3cff3f6259407ba18c1b4fab83f113a1efc7e0cb961305615d7a26c310617cd0c6e59de8be5fd67490e4494a77f25c70c945689a21679e0e53028b64d4252ef8b8c91a52ecf22ce5350df43aca4987506f68ba0e9ecc001f3c9251b368a038b3fd0a356a74a6f17aa0523aa2cdd454fa90bae4a5289814c9a9a1756f90ac217d52764b571d5fa74ab186859de7778f9a6dcf8abbc91dd66490c61f6e34f8e3d5a2c6d2ccc5da70697eb0f6805e2c2d0645365364b10047a8bcb6500bc52019bab449c45901dca0a27e1d58ebb0d7116e153d800c24cf1a5114c089e4f5f8aee3333f1fa30d5e0606f83140b6310786aba42bb0b465d7f421387c3f2eacd5256492ce2cad370622b3dc0f9623893c2330da757f9180f4b48aec22f190c1c105e520acb64d5fce0b2818ad053b7fdca3028907f1dc0afc39250ada5367500b829ca7db1c026d78d147be2d31392cdf43dcd73e2e30ed680c49516ca8c43c17325d3716fd1e3d37cd5dced5487580c76d0849abd2ac0b0b7069fe936bb0e267c5c63b590f8f9e54acc735c8e07a8b7443c3a4aa4c689c5403ee6c44e32784116f39cbb858db1adc26e17efa70df5dbc6c2edfb7890baebebe4c797f28e31a03403fe54f5567485597fba1e2f78f84c09d44aea0030ccacf2a4e8eb82da7f4c250a81de99718279e8cc10d70a0e392f595eaf237c561a90fe81495023b950e97bc5739953eea992dc3597c2b5a66233c02f6951a9a930e6f51f7dd5ca322d2eb3334760c896e4f83e10b047ad502e5986595851722cf211655bed609175a79fc291292140b18cca2c9c41b6644611810fd0acf45dcb96ca7882096082428edc4e7a68006c4d07a41e9586ebeacaa7ada6e3db131534555e226e000f609327007cd5d270362ca0826edeadbb4f25f17f2b5f16aabfcd0c6ecb7068040f878fb1c7e59b7fb9598a190fd549ba07502da6ed3aca036ec94d447e16167cb5dc0ed86320e8079805e0510b748684c142f18423afd52601f399c2e040a4e309053b0be533700b90c1c8e00ad692238ebeaf945341f277bd1ef22d94a972fb5cb6894ce4fe989ff2da95dda10408e44139c59e30f51da52e4e4ca458caff1fdb00c57f79bcc428ca957200c1d83da76ec7b81ca0e20dcfb73e2d9e49f511e23e4c9dca39d113559d9205041d5109c8ed53df29e770f5baa7267926dd7b8692bd89f28f6145f44856e6c17692e14052241072d23bc4f2270afde8fcd7231d3f4be1a99e0a9edd9073ddd8a1b918991c16cef0899cd56585bd52c6ee32119b42a4c8c5f93bed9ecdef06e5a275c0e16391e2b6fcbd78e8b77031d07597ec42df1dceda2617e04335f951ea8821163f1b21332eff362bbd7d1d3d5faeea7c1ff9660ad73bb2bd0af33fa7391478851c3dc92f4a15b58c6ccf6a18f42afcb92923d2f9f8a22339a8b297e63c02e9368e73c7d8be1c30c59884386b45a325103cb0ad19b95eec8c46ccf13607faea35cc0aa76074c9f053d0fdb6f46544d1e8c7c0ed2a13b5d4bc1386f4add6d5f12aec95177d42b5a2be4e5156f731cc89ee91a221335ee73e2b3b603c9fd9d72c4a873da338bd2561a7bf32d4f336a25bda522544bb787a212c94d753b772916c3e49c7fa5f568edc9bdbabd53bc754eddae58b42f491fbdf6aa6e7249a762310ec8f1f7ef722db0ea57b8bbfbd1ed9b48c2906fef83bf1e008d38f19ff67ca54f0843595bd48411f184b52bcc96c5c3f3810b7c2042f456bc14a433e10fc4b5162302ac3cf3e5de3b227b595394dbb311e6791e52337797ac3fe8d8e2a6eb3e4f7ed31d0c838324625467f72d99516c86411f84ddb90c65616b8f0a42f15bd2eee3f0bc99bf35489fe01d4a77fea2513d4c34a2dc73c37e0605e2c7a0d55bda2be6d4c27f9447cc0b1c17eb9c285a415ed32509443b96d555324762b5ea304fff0e71042ef281ce9a1cd31e4debc19b69ce25f496cf6ce30e305b96b0cbc4abc91834e3d80eea1d835d81c6818bb1700295e612181347558570f8f4ad98aa079110e6922b4f5a64db201340784b367196f6a5070641f01930549f532ee694b0816867d9857d166559e3ad65fda3308bd57fc15570e6fdaf7feee7468c27c34a437c55841e3c1d842f2938ae3711aa10827702b862ef995e53adfb60dceebc1a1bfcb2abf0bff71505833190ce8ba220e85d0c0d86c50b659a5c6afcf6b1c865abb42c337606c968092aa4955021ffc49d0ce1a102ebc57092c5a60b7debe8d78270bbe19a411089aacf06ce4457eb865b572873b062d459cf5b8c2ca72e367807604193ae9c0e06953becb042ef09f29df0e9fe7796b0fe0de0f2c9a52f0604ffffec011d3b8e22d212d85226567cfe2ee59f35cfdc83f89ec92979c5abb92b8e27029b76a685a1d626fe6e227f1d5794705253f082ea1cc827d0dee603bb56a7726aeb05ade52c1a8dedefc016b087c1f3970018f1b79a407af47aeb372204e477884a28bf5619d879b1d0c948a8055f3b9088836bcd7cbff07b4fbce1b01a7df900f26ec7568ffd380c4edb93bf360c609c2f4cd183592f9f143f5d7e86dd15d2c5a488c224bcb65d78bc043771ec98ca3ab2c147bb6b563eab91de616e3a70a5750e76ba40abd9ff0f747b1fc77fc32e75e984aceddf499a86b5857c2782d31675de697bbf456815a4cf5432af8b84e25ad721f4801ba2635fa23fcb577641ffaddcf1f1373f3438ddd0885d99de08c077f7f337dff483ead7d5636188f702100f4ffed3e1a4cd2d102d9846ab1cfd1cf28ac873abae1a3b1035d01570c60aea40243fda404727337d8146521e359b6b7347df71ab2d9bba2fde47032f7a11d97e0e7a61cd9f49e896b80434160ddb3ea9a34fb1df39820ebb92ab07cea3b789781a2885204dee166a87741b87aefe44a64a78047e165995fda33ca2df66716068eddcf22553a27fdc6aaf1b65022a8d601e949898b6f9e1e5ff9655d38ee30db30e49d4f942640141522b487aab7f43135a83a2215e52f668b14cb2aaf707c9858bfc2ba1ea80c7576a1bc40e26cece3e4ef4b9f48f0d9d9dd01edbdd1cdc82db172b8a5b55391accd2d768188ab7ceb8e1eab5fd9e29f9d7d654b49a2a64251b6652fea44afbe214318ad651f1fd685da55431f2c0a3ecf45f76b724bbec6bd3a36608ca52627974724b0eea9a6426ffc1c2616e65791bdb0430094b5d7ec076f1a391b57ec17a6e4c184272751e8c8a94890060328d68a18c5c02aa7a71c8cdf9bcac97fe84f89bd37b9eb71543870fe97d2f3ff6bfab051d1716286eb04b14910a9ff7cfd05a9d2a30e3736ac1ad6cf392a00ab2c1edbda5bdd84e082cb7aeb4c91c3d0c0899da9cd27dea87ac0dde7bc0077a0fd91f7be58cbe841210177ead899a82d115f8c85b12b57b4c4ead0444a9b506b30e0aab6dfa64be7d3d00c4cd652879e0252fd3d64ffe24bd1439e28a46a953b7a34e38c7dfd85d045dca7907ada93e39a01b15f7436ac026935f1dc4a6de4e1b631cbaba79ad203c3a091660b3592687f47ccd229aaabd274076a9e5af8d3a9203e6ee8ee14fe7fde2fc3209072e3b1e4c800145b2a8921b983c5d1905be7dda8b0f01727571dce4786469316ac542454bfcff751443a0d4657e7affce8dcadfcdfc3eb83d735cd2033d973432ccd01a8de3f762ec061212ba2ba7560b734a810efdbe62bb30952e30e6ce8d59e7928be4e1a179bf01b7c00f7f3e78d8feb6dd67280e7fd5ac1d452a7c60bc599b83151d682829485dae5d3844b41a83316154cd09a8f29de2bcebe2317f4240a91f3201808e30872d62452544d13fc79335295400c2e77d288ae9f54991d99b2e031778e79f3f97b7698fa0ba4460f4a0f24f29db51a62444e6f2433a8055d191162789d5f9c06b1089ebe6460ff3aeaedfb74464ecbc987f0f65f876b0adf9c57186e1d2bed30577f17780b1e4b4743a9cb83da730ac79039fbddf0d2ff36a8b38de70d1bb40fbf47444f3fd88df8a58301cda50332f8dd82d7ca9084dbec10f2916132ec7fe28df1d79429bf3eb960a1902ecc075e5bf0d286f5d405da94a9333dde10624bb3fd6d9077a28ccdcd2d01ae087b83e1e574702d40aa4092c3347739030f0bd7eced8cb7424bac680243a9b7eac8635d83b432e5cf319e0a9dcf5b64b1d0525fa7d31184365a9e82d6e2507bd3ef8fe2621531eb6f2e4b08814a641049987e719890f73ae9ed68918e94bebe123a98b16d203b6d3c4a0228277a5a07bf9223711e37f69bc0af1e2d55f93d40913988e2dc851baf332a62324e33fe2f1d8c3cac25423c1ecd2250a482c70b441fe4515070f033f9e6d47b46541fce5919985576340b4127ff8ce6d75067f032e9239ca03dc4ad8cebde1260d34a468125a2074d8f27dfec58d279e7c12b9c35a660d5985b6d0af4ac296c0f28ba9dae82863bdb20d20dcf7b21d79154cd7f249a7e943e9a4401ef4d133e33349cb287b7deb556ec4ac9353e6b736f6f12fb6e7d2019298e0a00ecf5d117ad852e3bf209176a7905ce17ad2810404910b89e24eb4e6ef066cdf719efebc99ee193e1356ae030329c7027e39c3541725d44ddf2c0973235628c42afa591209cef2be037d93bb4917a294ee53be3a90c9c44b947de4a336fbd665def678eb4709d300109ddbc9a27c2f6799311e36b568d54e327bd799614bb17c6784a50b45671b5b6709898850a5d5d29c5d69e2553b209d2286a30684aa4babd579d1fadff3468fd951a6904da176965ee4303bfea9bd9152da107fe449e4f1a04c0748c4afc12442f30cc6a6872c4cf46e2ddd076c5e2a8c8ff549373f9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码访问。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;密码错误!&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can stil</summary>
      
    
    
    
    <category term="CRM" scheme="https://zzy521.com/categories/CRM/"/>
    
    
    <category term="c#" scheme="https://zzy521.com/tags/c/"/>
    
    <category term="数据导入" scheme="https://zzy521.com/tags/%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>SQLserver数据库时间处理函数</title>
    <link href="https://zzy521.com/posts/d31c6e08.html"/>
    <id>https://zzy521.com/posts/d31c6e08.html</id>
    <published>2021-06-22T02:37:33.000Z</published>
    <updated>2021-06-22T11:00:34.886Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL-Server-Date-函数"><a href="#SQL-Server-Date-函数" class="headerlink" title="SQL Server Date 函数"></a>SQL Server Date 函数</h2><p>下面的表格列出了 SQL Server 中最重要的内建日期函数：</p><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">GETDATE()</td><td align="left">返回当前日期和时间</td></tr><tr><td align="left">DATEPART()</td><td align="left">返回日期/时间的单独部分</td></tr><tr><td align="left">DATEADD()</td><td align="left">在日期中添加或减去指定的时间间隔</td></tr><tr><td align="left">DATEDIFF()</td><td align="left">返回两个日期之间的时间</td></tr><tr><td align="left">CONVERT()</td><td align="left">用不同的格式显示日期/时间</td></tr></tbody></table><h3 id="GETDATE-函数"><a href="#GETDATE-函数" class="headerlink" title="GETDATE() 函数"></a>GETDATE() 函数</h3><h4 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h4><blockquote><p>GETDATE() 函数从 SQL Server 返回当前的时间和日期。</p></blockquote><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GETDATE()</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><h5 id="例子-1"><a href="#例子-1" class="headerlink" title="例子 1"></a>例子 1</h5><p>使用下面的 SELECT 语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT GETDATE() AS CurrentDateTime</span><br></pre></td></tr></table></figure><p>结果：</p><table><thead><tr><th align="left">CurrentDateTime</th></tr></thead><tbody><tr><td align="left">2008-12-29 16:25:46.635</td></tr></tbody></table><p><strong>注释：</strong>上面的时间部分精确到毫秒。</p><h5 id="例子-2"><a href="#例子-2" class="headerlink" title="例子 2"></a>例子 2</h5><p>下面的 SQL 创建带有日期时间列 (OrderDate) 的 “Orders” 表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE Orders </span><br><span class="line">(</span><br><span class="line">OrderId int NOT NULL PRIMARY KEY,</span><br><span class="line">ProductName varchar(50) NOT NULL,</span><br><span class="line">OrderDate datetime NOT NULL DEFAULT GETDATE()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>请注意，OrderDate 把 GETDATE() 规定为默认值。结果是，当您在表中插入新行时，当前日期和时间自动插入列中。</p><p>现在，我们希望在 “Orders” 表中插入一条记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO Orders (ProductName) VALUES (&#39;Computer&#39;)</span><br></pre></td></tr></table></figure><p>“Orders” 表将成为这样：</p><table><thead><tr><th align="left">OrderId</th><th align="left">ProductName</th><th align="left">OrderDate</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">‘Computer’</td><td align="left">2008-12-29 16:25:46.635</td></tr></tbody></table><h3 id="DATEPART-函数"><a href="#DATEPART-函数" class="headerlink" title="DATEPART() 函数"></a>DATEPART() 函数</h3><h4 id="定义和用法-1"><a href="#定义和用法-1" class="headerlink" title="定义和用法"></a>定义和用法</h4><blockquote><p>DATEPART() 函数用于返回日期/时间的单独部分，比如年、月、日、小时、分钟等等。</p></blockquote><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DATEPART(datepart,date)</span><br></pre></td></tr></table></figure><p><em>date</em> 参数是合法的日期表达式。<em>datepart</em> 参数可以是下列的值：</p><table><thead><tr><th align="left">datepart</th><th align="left">缩写</th></tr></thead><tbody><tr><td align="left">年</td><td align="left">yy, yyyy</td></tr><tr><td align="left">季度</td><td align="left">qq, q</td></tr><tr><td align="left">月</td><td align="left">mm, m</td></tr><tr><td align="left">年中的日</td><td align="left">dy, y</td></tr><tr><td align="left">日</td><td align="left">dd, d</td></tr><tr><td align="left">周</td><td align="left">wk, ww</td></tr><tr><td align="left">星期</td><td align="left">dw, w</td></tr><tr><td align="left">小时</td><td align="left">hh</td></tr><tr><td align="left">分钟</td><td align="left">mi, n</td></tr><tr><td align="left">秒</td><td align="left">ss, s</td></tr><tr><td align="left">毫秒</td><td align="left">ms</td></tr><tr><td align="left">微妙</td><td align="left">mcs</td></tr><tr><td align="left">纳秒</td><td align="left">ns</td></tr></tbody></table><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><p>假设我们有下面这个 “Orders” 表：</p><table><thead><tr><th align="left">OrderId</th><th align="left">ProductName</th><th align="left">OrderDate</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">‘Computer’</td><td align="left">2008-12-29 16:25:46.635</td></tr></tbody></table><p>我们使用如下 SELECT 语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT DATEPART(yyyy,OrderDate) AS OrderYear,</span><br><span class="line">DATEPART(mm,OrderDate) AS OrderMonth,</span><br><span class="line">DATEPART(dd,OrderDate) AS OrderDay</span><br><span class="line">FROM Orders</span><br><span class="line">WHERE OrderId&#x3D;1</span><br></pre></td></tr></table></figure><p>结果：</p><table><thead><tr><th align="left">OrderYear</th><th align="left">OrderMonth</th><th align="left">OrderDay</th></tr></thead><tbody><tr><td align="left">2008</td><td align="left">12</td><td align="left">29</td></tr></tbody></table><h3 id="DATEADD-函数"><a href="#DATEADD-函数" class="headerlink" title="DATEADD() 函数"></a>DATEADD() 函数</h3><h4 id="定义和用法-2"><a href="#定义和用法-2" class="headerlink" title="定义和用法"></a>定义和用法</h4><blockquote><p>DATEADD() 函数在日期中添加或减去指定的时间间隔。</p></blockquote><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DATEADD(datepart,number,date)</span><br></pre></td></tr></table></figure><p><em>date</em> 参数是合法的日期表达式。<em>number</em> 是您希望添加的间隔数；对于未来的时间，此数是正数，对于过去的时间，此数是负数。</p><p><em>datepart</em> 参数可以是下列的值：</p><table><thead><tr><th align="left">datepart</th><th align="left">缩写</th></tr></thead><tbody><tr><td align="left">年</td><td align="left">yy, yyyy</td></tr><tr><td align="left">季度</td><td align="left">qq, q</td></tr><tr><td align="left">月</td><td align="left">mm, m</td></tr><tr><td align="left">年中的日</td><td align="left">dy, y</td></tr><tr><td align="left">日</td><td align="left">dd, d</td></tr><tr><td align="left">周</td><td align="left">wk, ww</td></tr><tr><td align="left">星期</td><td align="left">dw, w</td></tr><tr><td align="left">小时</td><td align="left">hh</td></tr><tr><td align="left">分钟</td><td align="left">mi, n</td></tr><tr><td align="left">秒</td><td align="left">ss, s</td></tr><tr><td align="left">毫秒</td><td align="left">ms</td></tr><tr><td align="left">微妙</td><td align="left">mcs</td></tr><tr><td align="left">纳秒</td><td align="left">ns</td></tr></tbody></table><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h4><p>假设我们有下面这个 “Orders” 表：</p><table><thead><tr><th align="left">OrderId</th><th align="left">ProductName</th><th align="left">OrderDate</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">‘Computer’</td><td align="left">2008-12-29 16:25:46.635</td></tr></tbody></table><p>现在，我们希望向 “OrderDate” 添加 2 天，这样就可以找到付款日期。</p><p>我们使用如下 SELECT 语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT OrderId,DATEADD(day,2,OrderDate) AS OrderPayDate</span><br><span class="line">FROM Orders</span><br></pre></td></tr></table></figure><p>结果：</p><table><thead><tr><th align="left">OrderId</th><th align="left">OrderPayDate</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">2008-12-31 16:25:46.635</td></tr></tbody></table><h3 id="DATEDIFF-函数"><a href="#DATEDIFF-函数" class="headerlink" title="DATEDIFF() 函数"></a>DATEDIFF() 函数</h3><h4 id="定义和用法-3"><a href="#定义和用法-3" class="headerlink" title="定义和用法"></a>定义和用法</h4><blockquote><p>DATEDIFF() 函数返回两个日期之间的时间。</p></blockquote><h4 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DATEDIFF(datepart,startdate,enddate)</span><br></pre></td></tr></table></figure><p><em>startdate</em> 和 <em>enddate</em> 参数是合法的日期表达式。</p><p><em>datepart</em> 参数可以是下列的值：</p><table><thead><tr><th align="left">datepart</th><th align="left">缩写</th></tr></thead><tbody><tr><td align="left">年</td><td align="left">yy, yyyy</td></tr><tr><td align="left">季度</td><td align="left">qq, q</td></tr><tr><td align="left">月</td><td align="left">mm, m</td></tr><tr><td align="left">年中的日</td><td align="left">dy, y</td></tr><tr><td align="left">日</td><td align="left">dd, d</td></tr><tr><td align="left">周</td><td align="left">wk, ww</td></tr><tr><td align="left">星期</td><td align="left">dw, w</td></tr><tr><td align="left">小时</td><td align="left">hh</td></tr><tr><td align="left">分钟</td><td align="left">mi, n</td></tr><tr><td align="left">秒</td><td align="left">ss, s</td></tr><tr><td align="left">毫秒</td><td align="left">ms</td></tr><tr><td align="left">微妙</td><td align="left">mcs</td></tr><tr><td align="left">纳秒</td><td align="left">ns</td></tr></tbody></table><h4 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h4><h5 id="例子-1-1"><a href="#例子-1-1" class="headerlink" title="例子 1"></a>例子 1</h5><p>使用如下 SELECT 语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DATEDIFF(day,&#39;2008-12-29&#39;,&#39;2008-12-30&#39;) AS DiffDate</span><br></pre></td></tr></table></figure><p>结果：</p><table><thead><tr><th align="left">DiffDate</th></tr></thead><tbody><tr><td align="left">1</td></tr></tbody></table><h5 id="例子-2-1"><a href="#例子-2-1" class="headerlink" title="例子 2"></a>例子 2</h5><p>使用如下 SELECT 语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DATEDIFF(day,&#39;2008-12-30&#39;,&#39;2008-12-29&#39;) AS DiffDate</span><br></pre></td></tr></table></figure><p>结果：</p><table><thead><tr><th align="left">DiffDate</th></tr></thead><tbody><tr><td align="left">-1</td></tr></tbody></table><h3 id="CONVERT-函数"><a href="#CONVERT-函数" class="headerlink" title="CONVERT() 函数"></a><strong>CONVERT() 函数</strong></h3><h4 id="定义和用法-4"><a href="#定义和用法-4" class="headerlink" title="定义和用法"></a>定义和用法</h4><blockquote><p>CONVERT() 函数是把日期转换为新数据类型的通用函数。</p><p>CONVERT() 函数可以用不同的格式显示日期/时间数据。</p></blockquote><h4 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(data_type(length),data_to_be_converted,style)</span><br></pre></td></tr></table></figure><p><em>data_type(length)</em> 规定目标数据类型（带有可选的长度）。<em>data_to_be_converted</em> 含有需要转换的值。<em>style</em> 规定日期/时间的输出格式。</p><p>可以使用的 <em>style</em> 值：</p><table><thead><tr><th align="left">格式编号</th><th align="left">示例查询</th><th align="left">示例结果</th></tr></thead><tbody><tr><td align="left">0</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 0)</code></td><td align="left">Aug 23 2019 1:39PM</td></tr><tr><td align="left">1</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 1)</code></td><td align="left">08/23/19</td></tr><tr><td align="left">2</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 2)</code></td><td align="left">19.08.23</td></tr><tr><td align="left">3</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 3)</code></td><td align="left">23/08/19</td></tr><tr><td align="left">4</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 4)</code></td><td align="left">23.08.19</td></tr><tr><td align="left">5</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 5)</code></td><td align="left">23-08-19</td></tr><tr><td align="left">6</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 6)</code></td><td align="left">23 Aug 19</td></tr><tr><td align="left">7</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 7)</code></td><td align="left">Aug 23, 19</td></tr><tr><td align="left">8、24 或 108</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 8)</code></td><td align="left">13:39:17</td></tr><tr><td align="left">9 或 109</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 9)</code></td><td align="left">Aug 23 2019 1:39:17:090PM</td></tr><tr><td align="left">10</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 10)</code></td><td align="left">08-23-19</td></tr><tr><td align="left">11</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 11)</code></td><td align="left">19/08/23</td></tr><tr><td align="left">12</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 12)</code></td><td align="left">190823</td></tr><tr><td align="left">13 或 113</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 13)</code></td><td align="left">23 Aug 2019 13:39:17:090</td></tr><tr><td align="left">14 或 114</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 14)</code></td><td align="left">13:39:17:090</td></tr><tr><td align="left">20 或 120</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 20)</code></td><td align="left">2019-08-23 13:39:17</td></tr><tr><td align="left">21、25 或 121</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 21)</code></td><td align="left">2019-08-23 13:39:17.090</td></tr><tr><td align="left">22</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 22)</code></td><td align="left">08/23/19 1:39:17 PM</td></tr><tr><td align="left">23</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 23)</code></td><td align="left">2019-08-23</td></tr><tr><td align="left">101</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 101)</code></td><td align="left">08/23/2019</td></tr><tr><td align="left">102</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 102)</code></td><td align="left">2019.08.23</td></tr><tr><td align="left">103</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 103)</code></td><td align="left">23/08/2019</td></tr><tr><td align="left">104</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 104)</code></td><td align="left">23.08.2019</td></tr><tr><td align="left">105</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 105)</code></td><td align="left">23-08-2019</td></tr><tr><td align="left">106</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 106)</code></td><td align="left">23 Aug 2019</td></tr><tr><td align="left">107</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 107)</code></td><td align="left">Aug 23, 2019</td></tr><tr><td align="left">110</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 110)</code></td><td align="left">08-23-2019</td></tr><tr><td align="left">111</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 111)</code></td><td align="left">2019/08/23</td></tr><tr><td align="left">112</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 112)</code></td><td align="left">20190823</td></tr><tr><td align="left">113</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 113)</code></td><td align="left">23 Aug 2019 13:39:17.090</td></tr><tr><td align="left">120</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 120)</code></td><td align="left">2019-08-23 13:39:17</td></tr><tr><td align="left">121</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 121)</code></td><td align="left">2019-08-23 13:39:17.090</td></tr><tr><td align="left">126</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 126)</code></td><td align="left">2019-08-23T13:39:17.090</td></tr><tr><td align="left">127</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 127)</code></td><td align="left">2019-08-23T13:39:17.090</td></tr><tr><td align="left">130</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 130)</code></td><td align="left">22 ذو الحجة 1440 1:39:17.090P</td></tr><tr><td align="left">131</td><td align="left"><code>SELECT CONVERT(NVARCHAR, GETDATE(), 131)</code></td><td align="left">22/12/1440 1:39:17.090PM</td></tr></tbody></table><h4 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h4><p>下面的脚本使用 CONVERT() 函数来显示不同的格式。我们将使用 GETDATE() 函数来获得当前的日期/时间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(VARCHAR(19),GETDATE())</span><br><span class="line">CONVERT(VARCHAR(10),GETDATE(),110) </span><br><span class="line">CONVERT(VARCHAR(11),GETDATE(),106)</span><br><span class="line">CONVERT(VARCHAR(24),GETDATE(),113)</span><br></pre></td></tr></table></figure><p>结果类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Dec 29 2008 11:45 PM</span><br><span class="line">12-29-2008</span><br><span class="line">29 Dec 08</span><br><span class="line">29 Dec 2008 16:25:46.635</span><br></pre></td></tr></table></figure><h3 id="SQL-Server-使用下列数据类型在数据库中存储日期或日期-时间值："><a href="#SQL-Server-使用下列数据类型在数据库中存储日期或日期-时间值：" class="headerlink" title="SQL Server 使用下列数据类型在数据库中存储日期或日期/时间值："></a>SQL Server 使用下列数据类型在数据库中存储日期或日期/时间值：</h3><blockquote><ul><li>DATE - 格式 YYYY-MM-DD</li><li>DATETIME - 格式: YYYY-MM-DD HH:MM:SS</li><li>SMALLDATETIME - 格式: YYYY-MM-DD HH:MM:SS</li><li>TIMESTAMP - 格式: 唯一的数字</li></ul></blockquote><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><h3 id="根据”填报类型”字段的值选择不同的时间字段"><a href="#根据”填报类型”字段的值选择不同的时间字段" class="headerlink" title="根据”填报类型”字段的值选择不同的时间字段"></a>根据”填报类型”字段的值选择不同的时间字段</h3><blockquote><p><code>convert(varchar,(CASE new_type WHEN &#39;1&#39; THEN DATEADD(HOUR, 8, new_actualfinishtime) WHEN &#39;2&#39; THEN DATEADD(HOUR, 8, new_submitdate) END),23 )submittime</code></p></blockquote><p> <strong>1.当new_type 值为1时取时间为 new_actualfinishtime字段的值,当new_type 值为2时取时间为new_submitdate字段的值.</strong></p><blockquote><p>(CASE new_type WHEN ‘1’ THEN  new_actualfinishtime  WHEN ‘2’ THEN new_submitdate END) 时间</p></blockquote><p> <strong>2.现在因为数据库中的时间为0时区,所以转换为北京时间要加上8小时,所以为</strong></p><blockquote><p>(CASE new_type WHEN ‘1’ THEN DATEADD(HOUR, 8, new_actualfinishtime) WHEN ‘2’ THEN DATEADD(HOUR, 8, new_submitdate) END) 时间</p></blockquote><p><strong>3.然后又需要将时间转换为日期格式,</strong></p><p>加过之后为</p><blockquote><p>convert(varchar,(CASE new_type WHEN ‘1’ THEN DATEADD(HOUR, 8, new_actualfinishtime) WHEN ‘2’ THEN DATEADD(HOUR, 8, new_submitdate) END),23 ) 时间</p></blockquote><h3 id="查指定时间范围内的数据"><a href="#查指定时间范围内的数据" class="headerlink" title="查指定时间范围内的数据"></a>查指定时间范围内的数据</h3><p>因为时间在两个字段内,所以可以使用</p><blockquote><p>(( new_actualfinishtime BETWEEN ‘${START_TIME}’ and’${FINISH_TIME}’) or ( new_submitdate BETWEEN ‘${START_TIME}’ and’${FINISH_TIME}’) ) </p></blockquote><p>其中’${START_TIME}’和’${FINISH_TIME}’为帆软报表内选择的时间,格式为其固定的格式</p><p>但是又想只选年月就查到当月的数据 ,所以使用</p><blockquote><p><strong>DateDiff (interval,date1,date2)函数</strong></p><p>以interval 指定的方式，返回date2 与date1两个日期之间的差值 date2-date1</p></blockquote><p>interval 格式使用Year和Month,差值都是0</p><blockquote><p>(((DateDiff(month,new_actualfinishtime, ‘${START_TIME}’) = 0 ) and (DateDiff(year,new_actualfinishtime, ‘${START_TIME}’ ) = 0))or( (DateDiff(month,new_submitdate, ‘${START_TIME}’) = 0 ) and (DateDiff(year,new_submitdate, ‘${START_TIME}’ ) = 0)))</p></blockquote><p>同时时间又因为时区问题需要加上8小时,所以再使用</p><blockquote><p><strong>DateAdd (interval,number,date)函数</strong></p><p>以interval指定的方式，加上number之后的日期</p></blockquote><p>最后为</p><blockquote><p>(((DateDiff(month,DATEADD(HOUR, 8, new_actualfinishtime), ‘${START_TIME}’) = 0 ) and (DateDiff(year,DATEADD(HOUR, 8, new_actualfinishtime), ‘${START_TIME}’ ) = 0))or( (DateDiff(month,DATEADD(HOUR, 8, new_submitdate), ‘${START_TIME}’) = 0 ) and (DateDiff(year,DATEADD(HOUR, 8, new_submitdate), ‘${START_TIME}’ ) = 0)))</p></blockquote><p><strong>最终的sql</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line"> convert(varchar,(CASE new_type WHEN &#39;1&#39; THEN DATEADD(HOUR, 8, new_actualfinishtime) WHEN &#39;2&#39; THEN DATEADD(HOUR, 8, new_submitdate) END),23 )submittime,</span><br><span class="line"> new_ord_sales_idName 业务员,</span><br><span class="line"> (CASE new_type WHEN &#39;1&#39; THEN &#39;客户拜访&#39; WHEN &#39;2&#39; THEN &#39;工作日志&#39; END)填报类型,</span><br><span class="line"> location 工作地点,</span><br><span class="line"> new_jobcontent 工作内容,</span><br><span class="line"> new_account_idName 客户名称,</span><br><span class="line"> new_telphone 客户电话,</span><br><span class="line"> new_entertainfee 招待费,</span><br><span class="line"> new_accommodationfee 住宿费,</span><br><span class="line"> new_trafficfee 交通费,</span><br><span class="line"> new_miscellaneousfee 公杂费,</span><br><span class="line"> new_other 其他费用,</span><br><span class="line"> new_dealers_idName 部门</span><br><span class="line">FROM</span><br><span class="line"> appointment</span><br><span class="line"> WHERE 1&#x3D;1</span><br><span class="line"> and new_ord_sales_id&#x3D;&#39;$&#123;id&#125;&#39;</span><br><span class="line">--and(( new_actualfinishtime BETWEEN &#39;$&#123;START_TIME&#125;&#39; and&#39;$&#123;FINISH_TIME&#125;&#39;) </span><br><span class="line">--or ( new_submitdate BETWEEN &#39;$&#123;START_TIME&#125;&#39; and&#39;$&#123;FINISH_TIME&#125;&#39;) ) </span><br><span class="line">and(((DateDiff(month,DATEADD(HOUR, 8, new_actualfinishtime), &#39;$&#123;START_TIME&#125;&#39;) &#x3D; 0 ) </span><br><span class="line"> and (DateDiff(year,DATEADD(HOUR, 8, new_actualfinishtime), &#39;$&#123;START_TIME&#125;&#39; ) &#x3D; 0))</span><br><span class="line">or( (DateDiff(month,DATEADD(HOUR, 8, new_submitdate), &#39;$&#123;START_TIME&#125;&#39;) &#x3D; 0 ) and (DateDiff(year,DATEADD(HOUR, 8, new_submitdate), &#39;$&#123;START_TIME&#125;&#39; ) &#x3D; 0)))</span><br><span class="line">order by submittime</span><br></pre></td></tr></table></figure><h2 id="SQLserver数据库函数参数格式说明"><a href="#SQLserver数据库函数参数格式说明" class="headerlink" title="SQLserver数据库函数参数格式说明"></a>SQLserver数据库函数参数格式说明</h2><table><thead><tr><th><strong>函数</strong></th><th><strong>参数/功能</strong></th></tr></thead><tbody><tr><td>GetDate( )</td><td>返回系统目前的日期与时间</td></tr><tr><td>DateDiff (interval,date1,date2)</td><td>以interval 指定的方式，返回date2 与date1两个日期之间的差值 date2-date1</td></tr><tr><td>DateAdd (interval,number,date)</td><td>以interval指定的方式，加上number之后的日期</td></tr><tr><td>DatePart (interval,date)</td><td>返回日期date中，interval指定部分所对应的整数值</td></tr><tr><td>DateName (interval,date)</td><td>返回日期date中，interval指定部分所对应的字符串名称</td></tr></tbody></table><p> <strong>interval的可选值</strong></p><table><thead><tr><th><strong>值</strong></th><th><strong>缩 写（Sql Server）</strong></th><th><strong>Access 和 ASP</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Year</td><td>Yy</td><td>yyyy</td><td>年 1753 ~ 9999</td></tr><tr><td>Quarter</td><td>Qq</td><td>q</td><td>季 1 ~ 4</td></tr><tr><td>Month</td><td>Mm</td><td>m</td><td>月1 ~ 12</td></tr><tr><td>Day of year</td><td>Dy</td><td>y</td><td>一年的日数,一年中的第几日 1-366</td></tr><tr><td>Day</td><td>Dd</td><td>d</td><td>日，1-31</td></tr><tr><td>Weekday</td><td>Dw</td><td>w</td><td>一周的日数，一周中的第几日 1-7</td></tr><tr><td>Week</td><td>Wk</td><td>ww</td><td>周，一年中的第几周 0 ~ 51</td></tr><tr><td>Hour</td><td>Hh</td><td>h</td><td>时0 ~ 23</td></tr><tr><td>Minute</td><td>Mi</td><td>n</td><td>分钟0 ~ 59</td></tr><tr><td>Second</td><td>Ss</td><td>s</td><td>秒 0 ~ 59</td></tr><tr><td>Millisecond</td><td>Ms</td><td>-</td><td>毫秒 0 ~ 999</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SQL-Server-Date-函数&quot;&gt;&lt;a href=&quot;#SQL-Server-Date-函数&quot; class=&quot;headerlink&quot; title=&quot;SQL Server Date 函数&quot;&gt;&lt;/a&gt;SQL Server Date 函数&lt;/h2&gt;&lt;p&gt;下面的表格列</summary>
      
    
    
    
    <category term="开发工具" scheme="https://zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="数据库" scheme="https://zzy521.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="SQLserver" scheme="https://zzy521.com/tags/SQLserver/"/>
    
    <category term="时间函数" scheme="https://zzy521.com/tags/%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>CRM钉钉端获取当前用户信息</title>
    <link href="https://zzy521.com/posts/9178543a.html"/>
    <id>https://zzy521.com/posts/9178543a.html</id>
    <published>2021-06-19T00:57:42.000Z</published>
    <updated>2021-06-22T03:33:00.339Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CRM获取用户的信息"><a href="#CRM获取用户的信息" class="headerlink" title="CRM获取用户的信息"></a>CRM获取用户的信息</h2><p>调用方式为vue接口同步调用,等待接口返回用户的信息之后再根据接口返回的数据进行逻辑判断后执行</p><blockquote><p>返回的<code>SystemUserId</code>为互联用户中的用户id也是销售员工资料中的id</p><p>返回的<code>OutterUserDepartId</code>为互联用户中的部门id,也是销售员工资料中的部门id</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; invokeAction &#125; from &quot;vue-xcrmsdk&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      userInfo:&#123;&#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.getuserinfo().then(() &#x3D;&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F;获取用户信息之后再执行</span><br><span class="line">    &#x2F;&#x2F;此处再写语句会在等待用户信息返回之后再执行</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    &#x2F;&#x2F;获取用户信息</span><br><span class="line">    async getuserinfo() &#123;</span><br><span class="line">      await invokeAction(&quot;new_user_getuserinfo&quot;).then(res &#x3D;&gt; &#123;</span><br><span class="line">            this.userInfo &#x3D; JSON.parse(res.UserInfo);</span><br><span class="line">          &#125;</span><br><span class="line">        ).catch(err &#x3D;&gt; &#123;</span><br><span class="line">          rt.showErrorToast(err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;CRM获取用户的信息&quot;&gt;&lt;a href=&quot;#CRM获取用户的信息&quot; class=&quot;headerlink&quot; title=&quot;CRM获取用户的信息&quot;&gt;&lt;/a&gt;CRM获取用户的信息&lt;/h2&gt;&lt;p&gt;调用方式为vue接口同步调用,等待接口返回用户的信息之后再根据接口返回的数据</summary>
      
    
    
    
    <category term="CRM" scheme="https://zzy521.com/categories/CRM/"/>
    
    
    <category term="钉钉" scheme="https://zzy521.com/tags/%E9%92%89%E9%92%89/"/>
    
    <category term="用户信息" scheme="https://zzy521.com/tags/%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF/"/>
    
    <category term="vue接口同步调用" scheme="https://zzy521.com/tags/vue%E6%8E%A5%E5%8F%A3%E5%90%8C%E6%AD%A5%E8%B0%83%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>CRM自动填充字段的值</title>
    <link href="https://zzy521.com/posts/45daea7b.html"/>
    <id>https://zzy521.com/posts/45daea7b.html</id>
    <published>2021-06-09T07:04:25.000Z</published>
    <updated>2021-06-09T08:08:26.697Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a2fdca0593848dc0d3dcfdd1d2aa07a238c8401b591d3c58bbb0c5b65b42229d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码访问。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;密码错误!&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can stil</summary>
      
    
    
    
    <category term="CRM" scheme="https://zzy521.com/categories/CRM/"/>
    
    
    <category term="c#" scheme="https://zzy521.com/tags/c/"/>
    
    <category term="Lookup" scheme="https://zzy521.com/tags/Lookup/"/>
    
    <category term="字段赋值" scheme="https://zzy521.com/tags/%E5%AD%97%E6%AE%B5%E8%B5%8B%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>二进制形式特殊的数</title>
    <link href="https://zzy521.com/posts/bb493ea5.html"/>
    <id>https://zzy521.com/posts/bb493ea5.html</id>
    <published>2021-05-31T06:43:18.000Z</published>
    <updated>2021-05-31T07:51:21.034Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>a&amp;(a-1):去掉a的二进制表示的最后一个1之后得到的数,如果是2的n次幂则得到的会是0</p></blockquote><blockquote><p>0xaaaaaaaa = 10101010101010101010101010101010 (偶数位为1，奇数位为0）</p><p>0x55555555 = 1010101010101010101010101010101 (偶数位为0，奇数位为1）</p><p>0x33333333 = 110011001100110011001100110011 (1和0每隔两位交替出现)</p><p>0xcccccccc = 11001100110011001100110011001100 (0和1每隔两位交替出现)</p><p>0x0f0f0f0f = 00001111000011110000111100001111 (1和0每隔四位交替出现)</p><p>0xf0f0f0f0 = 11110000111100001111000011110000 (0和1每隔四位交替出现)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;a&amp;amp;(a-1):去掉a的二进制表示的最后一个1之后得到的数,如果是2的n次幂则得到的会是0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;0xaaaaaaaa = 101010101010101010101010101</summary>
      
    
    
    
    <category term="Java" scheme="https://zzy521.com/categories/Java/"/>
    
    
    <category term="二进制" scheme="https://zzy521.com/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>CRM调用外部接口</title>
    <link href="https://zzy521.com/posts/ab81ff07.html"/>
    <id>https://zzy521.com/posts/ab81ff07.html</id>
    <published>2021-05-18T01:48:01.000Z</published>
    <updated>2021-05-20T09:46:50.785Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="1529c030e612c5245898a5be21cc73b03db49d0b6bef0494788bd62403ebc5f6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码访问。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;密码错误!&quot; data-whm=&quot;OOPS, these decrypted content may changed, but you can stil</summary>
      
    
    
    
    <category term="CRM" scheme="https://zzy521.com/categories/CRM/"/>
    
    
    <category term="c#" scheme="https://zzy521.com/tags/c/"/>
    
    <category term="接口调用" scheme="https://zzy521.com/tags/%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8/"/>
    
    <category term="json数据处理" scheme="https://zzy521.com/tags/json%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>调用钉钉接口发送工作通知</title>
    <link href="https://zzy521.com/posts/6a850357.html"/>
    <id>https://zzy521.com/posts/6a850357.html</id>
    <published>2021-04-07T03:21:19.000Z</published>
    <updated>2021-05-20T09:19:40.749Z</updated>
    
    <content type="html"><![CDATA[<p>工作通知消息是以某个微应用的名义推送到员工的工作通知消息，例如生日祝福、入职提醒等。</p><p>发送工作通知消息需要注意以下事项：</p><ul><li><p>同一个应用相同消息的内容同一个用户一天只能接收一次。</p></li><li><p>同一个应用给同一个用户发送消息，企业内部应用一天不得超过500次。</p></li><li><p>通过设置to_all_user参数全员推送消息，一天最多3次。</p></li><li><p><strong>超出以上限制**</strong>次数**<strong>后，接口返回成功，但用户无法接收到。</strong>详细的限制说明，请参考<a href="https://developers.dingtalk.com/document/app/invocation-frequency-limit#section-yx8-1s0-c8w">工作通知消息限制</a>。</p></li><li><p>该接口是异步发送消息，接口返回成功并不表示用户一定会收到消息，需要通过<a href="https://developers.dingtalk.com/document/app/gets-the-result-of-sending-messages-asynchronously-to-the-enterprise#topic-1936880">获取工作通知消息的发送结果</a>接口查询是否给用户发送成功。</p></li><li><p>消息类型和样例可参考<a href="https://developers.dingtalk.com/document/app/message-types-and-data-format#topic-1945727">消息类型与数据格式</a>。</p></li></ul><ol><li><a href="https://developers.dingtalk.com/document/app/obtain-orgapp-token?spm=ding_open_doc.document.0.0.3579203faWR4wP#topic-1936350">先获取token</a></li><li><a href="https://developers.dingtalk.com/document/app/retrieve-userid-from-mobile-phone-number">再根据token和用户的手机号获取钉钉的userid</a></li><li><a href="https://developers.dingtalk.com/document/app/asynchronous-sending-of-enterprise-session-messages">根据token和用户的userid发送消息</a></li></ol><p>具体代码如下</p><p><strong>代码中的*****要自己填</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMsg</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用钉钉接口返回的token---不用填</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String TOKEN =<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//调用钉钉接口返回的错误值---不用填</span></span><br><span class="line"><span class="keyword">private</span> String errcode=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//根据用户手机号获取的用户的userid---不用填</span></span><br><span class="line"><span class="keyword">private</span> String userid=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//app应用的唯一标识key</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String appkey=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line"><span class="comment">//应用的密钥。</span></span><br><span class="line"><span class="comment">// AppKey和AppSecret可在钉钉开发者后台的应用详情页面获取。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String appsecret=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line"><span class="comment">//发送消息时使用的微应用的AgentID。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String agent_id=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line"><span class="comment">//是否给所有用户发送消息</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String to_all_user=<span class="string">&quot;false&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据手机号和消息内容给用户发送钉钉消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone 手机号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg 消息内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SendMessage</span><span class="params">(String phone,String msg)</span></span>&#123;</span><br><span class="line">        getUserid(phone);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果获取失败获取token重新获取</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="string">&quot;0&quot;</span>.equals(errcode))&#123;</span><br><span class="line">            errcode =<span class="string">&quot;&quot;</span>;</span><br><span class="line">            getToken();</span><br><span class="line">            getUserid(phone);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        send(userid,msg);</span><br><span class="line">        <span class="comment">//如果发送失败重新获取token再发送</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="string">&quot;0&quot;</span>.equals(errcode)) &#123;</span><br><span class="line">            getToken();</span><br><span class="line">            errcode =<span class="string">&quot;&quot;</span>;</span><br><span class="line">            send(userid, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getToken</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String URL_1 = <span class="string">&quot;https://oapi.dingtalk.com/gettoken?appkey=&quot;</span>;</span><br><span class="line">        String URL_2 =<span class="string">&quot;&amp;appsecret=&quot;</span>;</span><br><span class="line">        String URL = URL_1.concat(appkey).concat(URL_2).concat(appsecret);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建连接</span></span><br><span class="line">            URL url1 = <span class="keyword">new</span> URL(URL);</span><br><span class="line">            HttpURLConnection connection = (HttpURLConnection) url1.openConnection();</span><br><span class="line">            connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            connection.setUseCaches(<span class="keyword">false</span>);</span><br><span class="line">            connection.setInstanceFollowRedirects(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//设置请求头</span></span><br><span class="line">            connection.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">            connection.connect();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取响应</span></span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(connection.getInputStream()));</span><br><span class="line">            String lines;</span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> ((lines = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                lines = <span class="keyword">new</span> String(lines.getBytes(), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                sb.append(lines);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">            <span class="comment">// 断开连接</span></span><br><span class="line">            connection.disconnect();</span><br><span class="line">            String obj= String.valueOf(sb);</span><br><span class="line">            JSONObject jsonObject = JSONObject.parseObject(obj);</span><br><span class="line">            TOKEN =jsonObject.getString(<span class="string">&quot;access_token&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token值和用户手机号获取用户的钉钉userid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone 用户手机号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserid</span><span class="params">(String phone)</span> </span>&#123;</span><br><span class="line">        String URL_1 = <span class="string">&quot;https://oapi.dingtalk.com/user/get_by_mobile?access_token=&quot;</span>;</span><br><span class="line">        String URL_2 =<span class="string">&quot;&amp;mobile=&quot;</span>;</span><br><span class="line">        String URL = URL_1.concat(TOKEN).concat(URL_2).concat(phone);</span><br><span class="line">       <span class="comment">// String userid=&quot;&quot;;</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建连接</span></span><br><span class="line">            URL url1 = <span class="keyword">new</span> URL(URL);</span><br><span class="line">            HttpURLConnection connection = (HttpURLConnection) url1.openConnection();</span><br><span class="line">            connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            connection.setUseCaches(<span class="keyword">false</span>);</span><br><span class="line">            connection.setInstanceFollowRedirects(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//设置请求头</span></span><br><span class="line">            connection.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">            connection.connect();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取响应</span></span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(connection.getInputStream()));</span><br><span class="line">            String lines;</span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> ((lines = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                lines = <span class="keyword">new</span> String(lines.getBytes(), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                sb.append(lines);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">            <span class="comment">// 断开连接</span></span><br><span class="line">            connection.disconnect();</span><br><span class="line">            String obj= String.valueOf(sb);</span><br><span class="line">            JSONObject jsonObject = JSONObject.parseObject(obj);</span><br><span class="line">            userid =jsonObject.getString(<span class="string">&quot;userid&quot;</span>);</span><br><span class="line">            errcode =jsonObject.getString(<span class="string">&quot;errcode&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token和用户的userid发送消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userid 用户的钉钉id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg    发送消息的内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">send</span><span class="params">(String userid,String msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String URL_title = <span class="string">&quot;https://oapi.dingtalk.com/topapi/message/corpconversation/asyncsend_v2?access_token=&quot;</span>;</span><br><span class="line">        String URL=URL_title.concat(TOKEN);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建连接</span></span><br><span class="line">            URL url = <span class="keyword">new</span> URL(URL);</span><br><span class="line">            HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setRequestMethod(<span class="string">&quot;POST&quot;</span>);</span><br><span class="line">            connection.setUseCaches(<span class="keyword">false</span>);</span><br><span class="line">            connection.setInstanceFollowRedirects(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//设置请求头</span></span><br><span class="line">            connection.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">            connection.connect();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// POST请求,包装成json数据</span></span><br><span class="line">            PrintWriter out = <span class="keyword">new</span> PrintWriter(<span class="keyword">new</span> OutputStreamWriter(connection.getOutputStream(),<span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">            JSONObject obj = <span class="keyword">new</span> JSONObject();</span><br><span class="line">            JSONObject obj1 = <span class="keyword">new</span> JSONObject();</span><br><span class="line">            JSONObject obj2 = <span class="keyword">new</span> JSONObject();</span><br><span class="line">            <span class="comment">//消息内容</span></span><br><span class="line">            obj2.put(<span class="string">&quot;content&quot;</span>,msg);</span><br><span class="line">            obj1.put(<span class="string">&quot;text&quot;</span>,obj2);</span><br><span class="line">            <span class="comment">//消息格式</span></span><br><span class="line">            obj1.put(<span class="string">&quot;msgtype&quot;</span>,<span class="string">&quot;text&quot;</span>);</span><br><span class="line"></span><br><span class="line">            obj.put(<span class="string">&quot;msg&quot;</span>, obj1);</span><br><span class="line">            <span class="comment">//是否给所有用户发送消息</span></span><br><span class="line">            obj.put(<span class="string">&quot;to_all_user&quot;</span>,to_all_user);</span><br><span class="line">            <span class="comment">//发现消息的程序id</span></span><br><span class="line">            obj.put(<span class="string">&quot;agent_id&quot;</span>,agent_id);</span><br><span class="line">            <span class="comment">//用户id</span></span><br><span class="line">            obj.put(<span class="string">&quot;userid_list&quot;</span>,userid);</span><br><span class="line"></span><br><span class="line">            out.println(obj);</span><br><span class="line">            out.flush();</span><br><span class="line">            out.close();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取响应</span></span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(connection.getInputStream()));</span><br><span class="line">            String lines;</span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> ((lines = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                lines = <span class="keyword">new</span> String(lines.getBytes(), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                sb.append(lines);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">            <span class="comment">// 断开连接</span></span><br><span class="line">            connection.disconnect();</span><br><span class="line">            String obj11= String.valueOf(sb);</span><br><span class="line">            JSONObject jsonObject = JSONObject.parseObject(obj11);</span><br><span class="line">            errcode =jsonObject.getString(<span class="string">&quot;errcode&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;工作通知消息是以某个微应用的名义推送到员工的工作通知消息，例如生日祝福、入职提醒等。&lt;/p&gt;
&lt;p&gt;发送工作通知消息需要注意以下事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;同一个应用相同消息的内容同一个用户一天只能接收一次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同一个应用给同一个</summary>
      
    
    
    
    <category term="开发工具" scheme="https://zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="钉钉消息" scheme="https://zzy521.com/tags/%E9%92%89%E9%92%89%E6%B6%88%E6%81%AF/"/>
    
    <category term="java" scheme="https://zzy521.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>解决NavicatPremium连接SQLServer出现未发现数据源名称并且未指定默认驱动</title>
    <link href="https://zzy521.com/posts/21754c85.html"/>
    <id>https://zzy521.com/posts/21754c85.html</id>
    <published>2021-03-30T02:34:02.000Z</published>
    <updated>2021-05-20T09:21:31.038Z</updated>
    
    <content type="html"><![CDATA[<p><strong>报错：[navicat premium] [IM002] [Microsoft][ODBC 驱动程序管理器] 未发现数据源名称并且未指定默认驱动程序</strong></p><p>进入Navicat的安装目录,找到下边的文件,点击安装,重新打开数据库即可.</p><p><img src="../img/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210330103656.png" alt="微信截图_20210330103656"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;报错：[navicat premium] [IM002] [Microsoft][ODBC 驱动程序管理器] 未发现数据源名称并且未指定默认驱动程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入Navicat的安装目录,找到下边的文件,点击安装,重新打开数据库即可.</summary>
      
    
    
    
    <category term="开发工具" scheme="https://zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="数据库" scheme="https://zzy521.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="SQLServer" scheme="https://zzy521.com/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>Java中a=a++的问题</title>
    <link href="https://zzy521.com/posts/dad1e78f.html"/>
    <id>https://zzy521.com/posts/dad1e78f.html</id>
    <published>2021-03-23T09:41:17.000Z</published>
    <updated>2021-05-20T08:54:03.477Z</updated>
    
    <content type="html"><![CDATA[<h3 id="int-a-0-a-a"><a href="#int-a-0-a-a" class="headerlink" title="int a=0;a=a++;"></a>int a=0;a=a++;</h3><p>生成的字节码是：</p><p>0 iconst_0 —–0压入栈顶</p><p>1 istore_1 [a] —–栈顶值（0）存入局部变量1（a）</p><p>2 iload_1 [a] —–变量1的值压入栈顶（值为0）(a++效果)</p><p>3 iinc 1 1 [a] —–变量1自加（a++操作，自加后变量1的值为1）</p><p>6 istore_1 [a] —–将栈顶值（0）存入变量1（=操作）</p><p>a的值依次变化为：0-&gt;1-&gt;0</p><p>运算符的优先级中++和–仅次于(),而a++正常的逻辑是++在下一行才会生效,但这里使用的是同一个变量,所以这里是先把右边运算的结果(也就是a的原始值0)压入栈,然后再去计算a++,由于=的优先级是最低的,所以最后再将运算过的值赋值给左边的a</p><h3 id="int-a-0-a-a-1"><a href="#int-a-0-a-a-1" class="headerlink" title="int a=0;a=++a;"></a>int a=0;a=++a;</h3><p>生成的字节码是：</p><p>0 iconst_0 —–0压入栈顶</p><p>1 istore_1 [a] —–栈顶值（0）存入局部变量1（a）</p><p>2 iinc 1 1 [a] —–变量1自加（++a操作，自加后变量1的值为1）</p><p>5 iload_1 [a] —–变量1的值压入栈顶（值为1）(++a效果)</p><p>6 istore_1 [a] —–将栈顶值（1）存入变量1（=操作）</p><p>a的值依次变化为：0-&gt;1-&gt;1</p><h3 id="int-a-0-a-a-a"><a href="#int-a-0-a-a-a" class="headerlink" title="int a=0;a=(a++)+(++a);"></a>int a=0;a=(a++)+(++a);</h3><p>0 iconst_0 —–0压入栈顶</p><p>1 istore_1 [a] —–栈顶值（0）存入局部变量1（a）</p><p>2 iload_1 [a] —–变量1的值压入栈顶（值为0）(a++效果)</p><p>3 iinc 1 1 [a] —–变量1自加（a++操作，自加后变量1的值为1）</p><p>6 iinc 1 1 [a] —–变量1自加（++a操作，自加后变量1的值为2）</p><p>9 iload_1 [a] —–变量1的值压入栈顶（值为2）(++a效果)</p><p>10 iadd —–栈顶两值（0，2）相加（结果为2），并存入栈顶</p><p>11 istore_1 [a]—–将栈顶值（2）存入变量1（=操作）</p><p>a的值依次变化为：0-&gt;1-&gt;2-&gt;2</p><p>这里是先计算括号里边的值,左边的括号是先存a的值,然后压入栈用来计算之后的a++(由于有++才有了这一步),这时候左边的括号内容进行运算,然后a自加;右边括号先进行a自加然后进行运算,这时候右边括号的值为2,然后赋值给a</p><p><strong>总结:应该是++的优先级最高,所以a++是会先取a的值,然后a进行自加,然后使用取出的值进行运算,最后在进行=的赋值操作,所以是因为=的优先级最低,所以=的赋值覆盖了a自加的值.</strong></p><p><strong>但在实际编码的过程中还是尽量不要用不好理解的代码.</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;int-a-0-a-a&quot;&gt;&lt;a href=&quot;#int-a-0-a-a&quot; class=&quot;headerlink&quot; title=&quot;int a=0;a=a++;&quot;&gt;&lt;/a&gt;int a=0;a=a++;&lt;/h3&gt;&lt;p&gt;生成的字节码是：&lt;/p&gt;
&lt;p&gt;0 iconst_0 —</summary>
      
    
    
    
    <category term="Java" scheme="https://zzy521.com/categories/Java/"/>
    
    
    <category term="Java" scheme="https://zzy521.com/tags/Java/"/>
    
    <category term="a++" scheme="https://zzy521.com/tags/a/"/>
    
  </entry>
  
  <entry>
    <title>Java位运算</title>
    <link href="https://zzy521.com/posts/f789481e.html"/>
    <id>https://zzy521.com/posts/f789481e.html</id>
    <published>2021-03-23T02:05:47.000Z</published>
    <updated>2021-05-20T08:53:51.554Z</updated>
    
    <content type="html"><![CDATA[<h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><table><thead><tr><th>符号</th><th>描述</th><th align="left">运算规则</th></tr></thead><tbody><tr><td>&amp;</td><td>与</td><td align="left">两个位都为1时，结果才为1</td></tr><tr><td>|</td><td>或</td><td align="left">两个位都为0时，结果才为0</td></tr><tr><td>^</td><td>异或</td><td align="left">两个位相同为0，不同为1</td></tr><tr><td>~</td><td>取反</td><td align="left">0变1，1变0</td></tr><tr><td>&lt;&lt;</td><td>左移</td><td align="left">各二进位全部左移若干位，高位丢弃，低位补0.相当于乘2</td></tr><tr><td>&gt;&gt;</td><td>右移</td><td align="left">各二进位全部右移若干位，对无符号数，高位补0，有符号数，各编译器处理方法不一样，有的补符号位（算术右移），有的补0（逻辑右移）</td></tr></tbody></table><h2 id="位运算符常用方式"><a href="#位运算符常用方式" class="headerlink" title="位运算符常用方式"></a>位运算符常用方式</h2><h3 id="用位运算做加法"><a href="#用位运算做加法" class="headerlink" title="用位运算做加法"></a>用位运算做加法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//step1:异或查看两个数进行加法操作后的结果</span></span><br><span class="line"><span class="comment">//step2:与运算计算出想对应的位置的进位结果，然后左移一位</span></span><br><span class="line"><span class="comment">//b代表的是两数相加是否有进位，有的话就继续，没有的话就结束得出相加后的答案</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(b != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = a ^ b;<span class="comment">//计算出相对应的位置相加后的结果</span></span><br><span class="line">            b = (a &amp; b) &lt;&lt; <span class="number">1</span>;<span class="comment">//计算出想对应的位置的进位，然后左移一位</span></span><br><span class="line">            a = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个其实可以简写成return (a^b)+((a&amp;b)&lt;&lt;1);</span></span><br></pre></td></tr></table></figure><h3 id="用位运算求平均数"><a href="#用位运算求平均数" class="headerlink" title="用位运算求平均数"></a>用位运算求平均数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">average</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (a &amp; b)+((a ^ b) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="原理"><a href="#原理" class="headerlink" title="原理:"></a>原理:</h4><p>每一位都0,1有两种情况,所以对应的每一位相加有3种情况</p><p>1.(0+0):0&amp;0和0^0都是0</p><p>2.(1+0)或(0+1):1&amp;0为0,1^0为1;而1+0为1,所以相加的结果刚好是与的结果,要求平均数所以右移一位,相当于除以二</p><p>3.(1+1):1&amp;1为1,1^1为0,而1+1为2,所以刚好是异或的结果刚好是平均数</p><h3 id="二进制中1的个数"><a href="#二进制中1的个数" class="headerlink" title="二进制中1的个数"></a>二进制中1的个数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">0</span>||a == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(a != <span class="number">0</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            a = a &amp; (a-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理:"></a>原理:</h4><p>a = a &amp; (a-1);</p><p>a异或a-1的结果刚好为a去掉二进制时的最后一位1的结果</p><h3 id="判断一个数的奇偶性"><a href="#判断一个数的奇偶性" class="headerlink" title="判断一个数的奇偶性"></a>判断一个数的奇偶性</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((a &amp; <span class="number">1</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;a是偶数&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;a是奇数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="两数的中位数"><a href="#两数的中位数" class="headerlink" title="两数的中位数"></a>两数的中位数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="comment">//通过位运算不会造成溢出</span></span><br><span class="line"><span class="keyword">int</span> mid = a - ((a - b) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不使用第三个变量的情况下交换两个变量的值"><a href="#不使用第三个变量的情况下交换两个变量的值" class="headerlink" title="不使用第三个变量的情况下交换两个变量的值"></a>不使用第三个变量的情况下交换两个变量的值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//原理：运用异或的特性</span></span><br><span class="line"><span class="comment">//A ^ B = C --&gt; C ^ A = B --&gt; C ^ B = A</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    x = x ^ y;</span><br><span class="line">    y = x ^ y;</span><br><span class="line">    x = x ^ y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="原理-2"><a href="#原理-2" class="headerlink" title="原理:"></a>原理:</h4><p><code>x = x ^ y;y = x ^ y;x = x ^ y;</code></p><p><code>z = x ^ y;y = z ^ y;x = z ^ y;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;位运算符&quot;&gt;&lt;a href=&quot;#位运算符&quot; class=&quot;headerlink&quot; title=&quot;位运算符&quot;&gt;&lt;/a&gt;位运算符&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;运算规</summary>
      
    
    
    
    <category term="Java" scheme="https://zzy521.com/categories/Java/"/>
    
    
    <category term="Java" scheme="https://zzy521.com/tags/Java/"/>
    
    <category term="位运算" scheme="https://zzy521.com/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Java类型转换</title>
    <link href="https://zzy521.com/posts/16b8fe02.html"/>
    <id>https://zzy521.com/posts/16b8fe02.html</id>
    <published>2021-03-20T07:27:14.000Z</published>
    <updated>2021-05-20T08:53:15.909Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Java一共有八种基本数据类型</strong></p><ul><li>整数类型<ul><li>1字节:byte<ul><li>表数范围为-128(-2<sup>7</sup>)~127(2<sup>7</sup>-1)</li></ul></li><li>2字节:short<ul><li>-32768(-2<sup>15</sup>)~32767 (2<sup>15</sup>-1)(大约为32万)</li></ul></li><li>4字节:int<ul><li>-2147483648(-2<sup>31</sup>)~2147483647(2<sup>31</sup>-1)(大约为21亿)</li></ul></li><li>8字节:long<ul><li>-2<sup>63</sup>~2<sup>63</sup>-1</li></ul></li></ul></li><li>字符类型<ul><li>2字节:char</li></ul></li><li>浮点类型<ul><li>4字节:float</li><li>8字节:double</li></ul></li><li>布尔类型<ul><li>boolean</li></ul></li></ul><h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><p>Java的所有字符型变量可以相互转换,如果系统支持把某种类型的变量直接赋值给另一种基本类型的变量,这种方式称为自动类型转换.当把一个表数范围小的数值或变量直接赋值给另一个表数范围大的变量时,系统可以进行自动类型转换;否则就需要强制转换.</p><p>支持自动类型转换的类型为:byte→short→int→long→float→double和char→int→long→float→double</p><p><strong><em>字符串和任何基本类型的值进行连接运算时,基本类型的值都会自动转化为字符串类型</em></strong></p><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><p>当需要把箭头右边的类型转换为箭头左边的类型时,必须进行强制类型转换强制类型转换的语法格式是:<code>(targetType)value</code>,强制类型转换的运算符是<code>()</code>.转换时要注意数据溢出问题.</p><h2 id="字符串类型与其他类型的转换"><a href="#字符串类型与其他类型的转换" class="headerlink" title="字符串类型与其他类型的转换"></a>字符串类型与其他类型的转换</h2><h4 id="其它类型向字符串的转换"><a href="#其它类型向字符串的转换" class="headerlink" title="其它类型向字符串的转换"></a>其它类型向字符串的转换</h4><ol><li>调用类的串转换方法:X.toString();</li><li>自动转换:X+“”;</li><li>使用String的方法:String.valueOf(X);</li></ol><h4 id="字符串作为值-向其它类型的转换"><a href="#字符串作为值-向其它类型的转换" class="headerlink" title="字符串作为值,向其它类型的转换"></a>字符串作为值,向其它类型的转换</h4><ol><li>先转换成相应的封装器实例,再调用对应的方法转换成其它类型</li></ol><p>例如，字符中“32.1”转换double型的值的格式为:new Float(“32.1”).doubleValue()。</p><p>也可以用:Double.valueOf(“32.1”).doubleValue()</p><ol start="2"><li>静态parseXXX方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span> b = Byte.parseByte( s );</span><br><span class="line"><span class="keyword">short</span> t = Short.parseShort( s );</span><br><span class="line"><span class="keyword">int</span> i = Integer.parseInt( s );</span><br><span class="line"><span class="keyword">long</span> l = Long.parseLong( s );</span><br><span class="line">Float f = Float.parseFloat( s );</span><br><span class="line">Double d = Double.parseDouble( s );</span><br></pre></td></tr></table></figure><ol start="3"><li>Character的getNumericValue(char ch)方法</li></ol><p>返回指定的 Unicode 字符表示的 <code>int</code> 值。</p><h2 id="其它实用数据类型转换"><a href="#其它实用数据类型转换" class="headerlink" title="其它实用数据类型转换"></a>其它实用数据类型转换</h2><h4 id="Date类与其它数据类型的相互转换"><a href="#Date类与其它数据类型的相互转换" class="headerlink" title="Date类与其它数据类型的相互转换"></a>Date类与其它数据类型的相互转换</h4><p>整型和Date类之间并不存在直接的对应关系，只是你可以使用int型为分别表示年、月、日、时、分、秒，这样就在两者之间建立了一个对应关系，在作这种转换时，你可以使用<strong>Date类构造函数的三种形式</strong>：</p><p>①Date(int year, int month, int date)：以int型表示年、月、日</p><p>②Date(int year, int month, int date, int hrs, int min)：以int型表示年、月、日、时、分</p><p>③Date(int year, int month, int date, int hrs, int min, int sec)：以int型表示年、月、日、时、</p><p>分、秒</p><p>在长整型和Date类之间有一个很有趣的对应关系，就是将一个时间表示为距离格林尼治标准时间1970年1月1日0时0分0秒的毫秒数。对于这种对应关系，Date类也有其相应的构造函数：Date(long date)。</p><p>获取Date类中的年、月、日、时、分、秒以及星期你可以使用Date类的getYear()、getMonth()、getDate()、getHours()、getMinutes()、getSeconds()、getDay()方法，你也可以将其理解为将Date类转换成int。</p><p>而Date类的getTime()方法可以得到我们前面所说的一个时间对应的长整型数，与包装类一样，Date类也有一个toString()方法可以将其转换为String类。</p><p>有时我们希望得到Date的特定格式，例如20020324，我们可以使用以下方法，首先在文件开始引入，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line">java.util.Date date = <span class="keyword">new</span> java.util.Date();</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果希望得到YYYYMMDD的格式</span></span><br><span class="line"></span><br><span class="line">SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyyMMDD&quot;</span>);</span><br><span class="line"></span><br><span class="line">String dateFormat=sdf.format(date);</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果希望分开得到年，月，日</span></span><br><span class="line"></span><br><span class="line">SimpleDateFormat sy=newSimpleDateFormat(<span class="string">&quot;yyyy&quot;</span>);</span><br><span class="line"></span><br><span class="line">SimpleDateFormat sm=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;MM&quot;</span>);</span><br><span class="line"></span><br><span class="line">SimpleDateFormat sd=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;dd&quot;</span>);</span><br><span class="line"></span><br><span class="line">String syear=sy.format(date);</span><br><span class="line"></span><br><span class="line">String smon=sm.format(date);</span><br><span class="line"></span><br><span class="line">String sday=sd.format(date);</span><br></pre></td></tr></table></figure><h4 id="js中将Data转换成String类型"><a href="#js中将Data转换成String类型" class="headerlink" title="js中将Data转换成String类型"></a>js中将Data转换成String类型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对Date的扩展，将 Date转化为指定格式的String</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 月(M)、日(d)、12小时(h)、24小时(H)、分(m)、秒(s)、周(E)、季度(q) 可以用 1-2个占位符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3位的数字)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//eg:</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-MM-dd hh:mm:ss.S&quot;</span>) ==&gt;<span class="number">2006</span>-<span class="number">07</span>-<span class="number">02</span> <span class="number">08</span>:<span class="number">09</span>:<span class="number">04</span><span class="number">.423</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-MM-dd E HH:mm:ss&quot;</span>) ==&gt;<span class="number">2009</span>-<span class="number">03</span>-<span class="number">10</span> 二 <span class="number">20</span>:<span class="number">09</span>:<span class="number">04</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-MM-dd EE hh:mm:ss&quot;</span>) ==&gt;<span class="number">2009</span>-<span class="number">03</span>-<span class="number">10</span> 周二 <span class="number">08</span>:<span class="number">09</span>:<span class="number">04</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-MM-dd EEE hh:mm:ss&quot;</span>)==&gt; <span class="number">2009</span>-<span class="number">03</span>-<span class="number">10</span> 星期二 <span class="number">08</span>:<span class="number">09</span>:<span class="number">04</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-M-d h:m:s.S&quot;</span>) ==&gt;<span class="number">2006</span>-<span class="number">7</span>-<span class="number">2</span> <span class="number">8</span>:<span class="number">9</span>:<span class="number">4.</span></span><br></pre></td></tr></table></figure><h4 id="字符型转时间型"><a href="#字符型转时间型" class="headerlink" title="字符型转时间型"></a>字符型转时间型</h4><p>（2005-10-1）</p><p>reportdate_str ＝ “2005-10-01”；</p><p>reportdate_str ＝ reportdate_str ＋ “ 00:00:00.0”</p><p>reportdate = <strong>java.sql.Timestamp.valueOf(reportdate_str);</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Java一共有八种基本数据类型&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整数类型&lt;ul&gt;
&lt;li&gt;1字节:byte&lt;ul&gt;
&lt;li&gt;表数范围为-128(-2&lt;sup&gt;7&lt;/sup&gt;)~127(2&lt;sup&gt;7&lt;/sup&gt;-1)&lt;/li&gt;
&lt;/ul&gt;
&lt;/l</summary>
      
    
    
    
    <category term="Java" scheme="https://zzy521.com/categories/Java/"/>
    
    
    <category term="Java" scheme="https://zzy521.com/tags/Java/"/>
    
    <category term="类型转换" scheme="https://zzy521.com/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python处理Excel文件</title>
    <link href="https://zzy521.com/posts/6c0fc8c8.html"/>
    <id>https://zzy521.com/posts/6c0fc8c8.html</id>
    <published>2021-02-25T03:42:02.000Z</published>
    <updated>2021-05-20T09:12:44.193Z</updated>
    
    <content type="html"><![CDATA[<p><strong>做了一个从Excel中筛选需要的列和行；并根据内容不同放到不同的Excel中的程序</strong></p><h2 id="导入需要的包"><a href="#导入需要的包" class="headerlink" title="导入需要的包"></a>导入需要的包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> xlrd <span class="keyword">import</span> xldate_as_tuple</span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> filedialog</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br></pre></td></tr></table></figure><h2 id="选取Excel文件并获取文件名和文件路径"><a href="#选取Excel文件并获取文件名和文件路径" class="headerlink" title="选取Excel文件并获取文件名和文件路径"></a>选取Excel文件并获取文件名和文件路径</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> filedialog</span><br><span class="line">tkinter.Tk().withdraw()  <span class="comment"># 使用tk选择文件时会出现一个框框，不影响使用但会看着很难受，所以将Tkinter.Tk()实例隐藏</span></span><br><span class="line">Filepath = filedialog.askopenfilename(title=<span class="string">u&#x27;选择文件&#x27;</span>)<span class="comment">#获取文件路径并将选择框标题设置为选择文件</span></span><br><span class="line">Filename = os.path.basename(Filepath)<span class="comment">#根据文件路径获取文件名，后边我生成新的文件需要根据选择的文件来命名</span></span><br><span class="line"><span class="keyword">if</span> Filepath == <span class="string">&#x27;&#x27;</span>:<span class="comment">#如果弹出的文件选择框未选择就关闭会导致文件路径为空，下边的代码执行会出错，所以路径为空直接结束程序</span></span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure><h2 id="读取Excel文件"><a href="#读取Excel文件" class="headerlink" title="读取Excel文件"></a>读取Excel文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;读取工作表&#x27;&#x27;&#x27;</span></span><br><span class="line">data = xlrd.open_workbook(Filepath)<span class="comment">#根据上边的路径读取Excel文件</span></span><br><span class="line">table = data.sheets()[<span class="number">0</span>]<span class="comment">#用索引方式获取第一个sheet</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;总行数&#x27;&#x27;&#x27;</span></span><br><span class="line">nrows = table.nrows</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;总列数&#x27;&#x27;&#x27;</span></span><br><span class="line">ncols = table.ncols</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;获取第二行的列名称&#x27;&#x27;&#x27;</span></span><br><span class="line">columnName = table.row_values(<span class="number">1</span>)<span class="comment">#excel中第二行为列名，用列表记录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;获取需要的列的字典&#x27;&#x27;&#x27;</span></span><br><span class="line">saveColumn = [<span class="string">&#x27;任务号&#x27;</span>, <span class="string">&#x27;物料编码&#x27;</span>, <span class="string">&#x27;零件图号&#x27;</span>, <span class="string">&#x27;数量&#x27;</span>, <span class="string">&#x27;材质&#x27;</span>, <span class="string">&#x27;尺寸&#x27;</span>, <span class="string">&#x27;工序&#x27;</span>, <span class="string">&#x27;完工日期&#x27;</span>, <span class="string">&#x27;备料日期&#x27;</span>, <span class="string">&#x27;成型日期&#x27;</span>, <span class="string">&#x27;仓库&#x27;</span>, <span class="string">&#x27;定额&#x27;</span>, <span class="string">&#x27;工段&#x27;</span>, <span class="string">&#x27;组件&#x27;</span>, <span class="string">&#x27;外协&#x27;</span>, <span class="string">&#x27;批次&#x27;</span>]<span class="comment">#需要保存的列的名称</span></span><br><span class="line">columnNameDictionary = &#123;&#125;<span class="comment">#声明一个字典来存储需要的列在excel中对应的列号</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">    <span class="keyword">if</span> columnName[i] <span class="keyword">in</span> saveColumn:<span class="comment">#如果第二列中的列名在需要保存的列的列表中；则将列名和列号存到字典中</span></span><br><span class="line">        columnNameDictionary[columnName[i]] = i</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;获取需要的数据列数据，去掉不需要的列数据&#x27;&#x27;&#x27;</span></span><br><span class="line">dataContent = []</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> columnNameDictionary.items():<span class="comment">#根据列名字典中列名对应的数据列去获取数据内容</span></span><br><span class="line">    dataContent.append(table.col_values(value, start_rowx=<span class="number">1</span>, end_rowx=nrows))</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;去掉不需要的行数据,同时将列表存储数据的方式由列转为行&#x27;&#x27;&#x27;</span></span><br><span class="line">ncols = <span class="built_in">len</span>(dataContent)  <span class="comment"># 列数量----更新行列值</span></span><br><span class="line">nrows = <span class="built_in">len</span>(dataContent[<span class="number">0</span>])  <span class="comment"># 行数量</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;需要将材质列等于——的值整行删除&#x27;&#x27;&#x27;</span></span><br><span class="line">material = <span class="number">0</span>  <span class="comment"># 材质的列号</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nrows):  <span class="comment"># 找到材质的列号</span></span><br><span class="line">    <span class="keyword">if</span> dataContent[i][<span class="number">0</span>] == <span class="string">&#x27;材质&#x27;</span>:</span><br><span class="line">        material = i</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">finalDataContent = []<span class="comment">#用来存储最终需要的行列数据，按行存储</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nrows):<span class="comment">#i为行数</span></span><br><span class="line">    temp = []<span class="comment">#暂存数据的列表</span></span><br><span class="line">    <span class="keyword">if</span> dataContent[material][i] != <span class="string">&#x27;——&#x27;</span>:<span class="comment">#如果材质不等于——则将第i行数据读出</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">            temp.append(dataContent[j][i])</span><br><span class="line">        finalDataContent.append(temp)<span class="comment">#将读到的数据保存</span></span><br><span class="line">        temp = []</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;更新列名字典和行列数&#x27;&#x27;&#x27;</span></span><br><span class="line">ncols = <span class="built_in">len</span>(finalDataContent[<span class="number">0</span>])  <span class="comment"># 列数量</span></span><br><span class="line">nrows = <span class="built_in">len</span>(finalDataContent)  <span class="comment"># 行数量</span></span><br><span class="line">columnNameDictionary.clear()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">    columnNameDictionary[finalDataContent[<span class="number">0</span>][i]] = i</span><br></pre></td></tr></table></figure><h2 id="修改Excel内需要修改的数据"><a href="#修改Excel内需要修改的数据" class="headerlink" title="修改Excel内需要修改的数据"></a>修改Excel内需要修改的数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;修改数据内容;按外协厂家进行分组-----为了减少循环次数放到了一块&#x27;&#x27;&#x27;</span></span><br><span class="line">outsourcSet = <span class="built_in">set</span>()  <span class="comment"># 创建外协集合</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nrows):</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">0</span>:  <span class="comment"># 第一行为列名，从第二行开始遍历 “零件图号”列将所有字母改为小写、“.”改为“-”、“艺”改为“y”</span></span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]] = finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]].lower()</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]] = finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]].replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]] = finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]].replace(<span class="string">&#x27;艺&#x27;</span>, <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;数量&#x27;</span>]] = <span class="built_in">int</span>(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;数量&#x27;</span>]])</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;完工日期&#x27;</span>]] = datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;完工日期&#x27;</span>]], <span class="number">0</span>)).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;备料日期&#x27;</span>]] = datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;备料日期&#x27;</span>]], <span class="number">0</span>)).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;成型日期&#x27;</span>]] = datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;成型日期&#x27;</span>]], <span class="number">0</span>)).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">        outsourcSet.add(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]])</span><br><span class="line"></span><br><span class="line">outsourc = <span class="built_in">list</span>(outsourcSet)<span class="comment">#得到的分为不同文件的厂家名</span></span><br></pre></td></tr></table></figure><p><strong><code>str.lower()</code>是将字符串的字母全转为小写</strong></p><p><strong><code>str.replace(&#39;艺&#39;, &#39;y&#39;)</code>是将字符串的“艺”都转为“y”</strong></p><p><code>finalDataContent[i][columnNameDictionary[&#39;完工日期&#39;]] = datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[&#39;完工日期&#39;]], 0)).strftime(&#39;%Y-%m-%d&#39;)</code></p><p><code>finalDataContent[i][columnNameDictionary[&#39;完工日期&#39;]]</code>的 值在读取过后被转为了数值，应该展示为日期，所以使用</p><p><code>datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[&#39;完工日期&#39;]], 0)).strftime(&#39;%Y-%m-%d&#39;)</code></p><p>来转为日期型并重新赋值给它</p><p><strong>将<code>data</code>由读出来的数值转为日期的方法为<code>datetime(*xldate_as_tuple(data, 0)).strftime(&#39;%Y-%m-%d&#39;)</code></strong></p><h2 id="将数据存储为Excel文件"><a href="#将数据存储为Excel文件" class="headerlink" title="将数据存储为Excel文件"></a>将数据存储为Excel文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置样式</span></span><br><span class="line"><span class="comment"># VERT_TOP = 0x00       上端对齐</span></span><br><span class="line"><span class="comment"># VERT_CENTER = 0x01    居中对齐（垂直方向上）</span></span><br><span class="line"><span class="comment"># VERT_BOTTOM = 0x02    低端对齐</span></span><br><span class="line"><span class="comment"># HORZ_LEFT = 0x01      左端对齐</span></span><br><span class="line"><span class="comment"># HORZ_CENTER = 0x02    居中对齐（水平方向上）</span></span><br><span class="line"><span class="comment"># HORZ_RIGHT = 0x03     右端对齐</span></span><br><span class="line">style = xlwt.XFStyle()</span><br><span class="line">al = xlwt.Alignment()</span><br><span class="line">al.horz = <span class="number">0x02</span>  <span class="comment"># 设置水平居中</span></span><br><span class="line">al.vert = <span class="number">0x01</span>  <span class="comment"># 设置垂直居中</span></span><br><span class="line">style.alignment = al</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(outsourc)):</span><br><span class="line">    name = Filepath.replace(<span class="string">&#x27;★模板★&#x27;</span>, <span class="string">&#x27;【&#x27;</span> + outsourc[i] + <span class="string">&#x27;】&#x27;</span>)</span><br><span class="line">    <span class="comment"># 创建excel文件</span></span><br><span class="line">    filename = xlwt.Workbook()</span><br><span class="line">    <span class="comment"># 给工作表命名</span></span><br><span class="line">    sheet = filename.add_sheet(data.sheet_names()[<span class="number">0</span>])</span><br><span class="line">    a = b = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(nrows):</span><br><span class="line">        style2 = xlwt.easyxf(<span class="string">&#x27;font:height 360;&#x27;</span>)  <span class="comment"># 18pt,类型小初的字号</span></span><br><span class="line">        row = sheet.row(j)</span><br><span class="line">        row.set_style(style2)</span><br><span class="line">        <span class="keyword">if</span> j == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">                sheet.write(a, b, finalDataContent[j][k], style)</span><br><span class="line">                b += <span class="number">1</span></span><br><span class="line">            b = <span class="number">0</span></span><br><span class="line">            a += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> finalDataContent[j][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]] == outsourc[i]:</span><br><span class="line">                finalDataContent[j][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]] = <span class="string">&#x27;外协&#x27;</span> + finalDataContent[j][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]]</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">                    sheet.write(a, b, finalDataContent[j][k], style)</span><br><span class="line">                    b += <span class="number">1</span></span><br><span class="line">                b = <span class="number">0</span></span><br><span class="line">                a += <span class="number">1</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;设置每一列的宽度&#x27;&#x27;&#x27;</span></span><br><span class="line">    sheet.col(<span class="number">0</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">1</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">2</span>).width = <span class="number">256</span> * <span class="number">20</span></span><br><span class="line">    sheet.col(<span class="number">3</span>).width = <span class="number">256</span> * <span class="number">5</span></span><br><span class="line">    sheet.col(<span class="number">4</span>).width = <span class="number">256</span> * <span class="number">10</span></span><br><span class="line">    sheet.col(<span class="number">5</span>).width = <span class="number">256</span> * <span class="number">20</span></span><br><span class="line">    sheet.col(<span class="number">6</span>).width = <span class="number">256</span> * <span class="number">20</span></span><br><span class="line">    sheet.col(<span class="number">7</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">8</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">9</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">10</span>).width = <span class="number">256</span> * <span class="number">10</span></span><br><span class="line">    sheet.col(<span class="number">11</span>).width = <span class="number">256</span> * <span class="number">10</span></span><br><span class="line">    sheet.col(<span class="number">12</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">13</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">14</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">15</span>).width = <span class="number">256</span> * <span class="number">20</span></span><br><span class="line">    filename.save(name)</span><br></pre></td></tr></table></figure><h4 id="设置单元格数据居中的方式"><a href="#设置单元格数据居中的方式" class="headerlink" title="设置单元格数据居中的方式"></a>设置单元格数据居中的方式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置样式</span></span><br><span class="line"><span class="comment"># VERT_TOP = 0x00       上端对齐</span></span><br><span class="line"><span class="comment"># VERT_CENTER = 0x01    居中对齐（垂直方向上）</span></span><br><span class="line"><span class="comment"># VERT_BOTTOM = 0x02    低端对齐</span></span><br><span class="line"><span class="comment"># HORZ_LEFT = 0x01      左端对齐</span></span><br><span class="line"><span class="comment"># HORZ_CENTER = 0x02    居中对齐（水平方向上）</span></span><br><span class="line"><span class="comment"># HORZ_RIGHT = 0x03     右端对齐</span></span><br><span class="line"></span><br><span class="line">style = xlwt.XFStyle()</span><br><span class="line">al = xlwt.Alignment()</span><br><span class="line">al.horz = <span class="number">0x02</span>  <span class="comment"># 设置水平居中</span></span><br><span class="line">al.vert = <span class="number">0x01</span>  <span class="comment"># 设置垂直居中</span></span><br><span class="line">style.alignment = al</span><br><span class="line">sheet.write(a, b, finalDataContent[j][k], style)<span class="comment">#在第a行第b列填入finalDataContent[j][k]的数据，格式为style</span></span><br></pre></td></tr></table></figure><h4 id="设置单元格高度"><a href="#设置单元格高度" class="headerlink" title="设置单元格高度"></a>设置单元格高度</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">style2 = xlwt.easyxf(<span class="string">&#x27;font:height 360;&#x27;</span>)  <span class="comment"># 18pt,类型小初的字号</span></span><br><span class="line">        row = sheet.row(j)<span class="comment">#在写第j行的时候设置它的高度</span></span><br><span class="line">        row.set_style(style2)</span><br></pre></td></tr></table></figure><h4 id="设置单元格高度-1"><a href="#设置单元格高度-1" class="headerlink" title="设置单元格高度"></a>设置单元格高度</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sheet.col(<span class="number">0</span>).width = <span class="number">256</span> * <span class="number">14</span><span class="comment">#设置单元格第1列的宽度；256为一个字符的宽度</span></span><br></pre></td></tr></table></figure><h2 id="将数据存储为txt文件"><a href="#将数据存储为txt文件" class="headerlink" title="将数据存储为txt文件"></a>将数据存储为txt文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(outsourc)):</span><br><span class="line">    name = Filepath.replace(<span class="string">&#x27;★模板★.xls&#x27;</span>, <span class="string">&#x27;【&#x27;</span> + outsourc[i] + <span class="string">&#x27;】.txt&#x27;</span>)</span><br><span class="line">    txtData = <span class="built_in">open</span>(name, <span class="string">&#x27;w&#x27;</span>)<span class="comment">#以读方式打开，如果有数据会被清空</span></span><br><span class="line">    count = <span class="number">0</span>  <span class="comment"># 记录行号</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(nrows):</span><br><span class="line">        <span class="keyword">if</span> j &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> finalDataContent[j][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]] == <span class="string">&#x27;外协&#x27;</span> + outsourc[i]:</span><br><span class="line">                <span class="keyword">if</span> count != <span class="number">0</span>:<span class="comment">#如果不是第一行则先加换行再输出；需求最后没有空行，最后不能换行，所以换行在写每一行之前</span></span><br><span class="line">                    print(<span class="string">&#x27;&#x27;</span>, file=txtData)<span class="comment">#print打印会默认换行，所以直接打印空字符</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">                    print(finalDataContent[j][k], end=<span class="string">&#x27;\t&#x27;</span>, file=txtData)<span class="comment">#写入每个数据后用制表符分隔</span></span><br><span class="line">    txtData.close()<span class="comment">#关闭文件对象</span></span><br></pre></td></tr></table></figure><h2 id="完成后弹出提示框"><a href="#完成后弹出提示框" class="headerlink" title="完成后弹出提示框"></a>完成后弹出提示框</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">messagebox.showinfo(&quot;提示&quot;, &quot;文件分解完成&quot;)</span><br></pre></td></tr></table></figure><h2 id="打包文件"><a href="#打包文件" class="headerlink" title="打包文件"></a>打包文件</h2><p>安装pyinstaller<code>pip install pyinstaller</code></p><p>打包<code>pyinstaller -F -w PlansToBreakUp.py</code> </p><p>需要在文件在目录下运行</p><p><code>-w</code>是去掉运行时的黑框</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;做了一个从Excel中筛选需要的列和行；并根据内容不同放到不同的Excel中的程序&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;导入需要的包&quot;&gt;&lt;a href=&quot;#导入需要的包&quot; class=&quot;headerlink&quot; title=&quot;导入需要的包&quot;&gt;&lt;/a&gt;导入</summary>
      
    
    
    
    <category term="Python" scheme="https://zzy521.com/categories/Python/"/>
    
    
    <category term="python" scheme="https://zzy521.com/tags/python/"/>
    
    <category term="excel" scheme="https://zzy521.com/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>服务器添加EOS的workspace功能</title>
    <link href="https://zzy521.com/posts/24cd4f39.html"/>
    <id>https://zzy521.com/posts/24cd4f39.html</id>
    <published>2021-02-20T01:13:00.000Z</published>
    <updated>2021-05-20T09:00:05.813Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-复制文件到服务器"><a href="#1-复制文件到服务器" class="headerlink" title="1.复制文件到服务器"></a>1.复制文件到服务器</h2><p>将Windows下边的<code>workspace</code>文件夹拷贝到服务器tomcat目录下的<code>webapps</code>文件夹中 ，<code>workspace</code>文件夹为EOS安装路径下的<code>\apache-tomcat-7.0.54\webapps\workspace</code></p><h2 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h2><p>这个时候就可以访问登录界面但实际无法登录，需要修改xml文件中的IP地址的端口号</p><p>修改<code>uddi-address.xml</code>文件中的内容，文件地址为服务器tomcat安装目录下的<code>apache-tomcat-7.0.54/webapps/workspace/WEB-INF/classes/uddi-address.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uddi__address</span> <span class="attr">id</span>=<span class="string">&quot;default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>localserver<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logicName</span>&gt;</span>default<span class="tag">&lt;/<span class="name">logicName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>remote<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>uddi-config.xml at &quot; Work Space&quot;<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiHost</span>&gt;</span>10.8.32.159<span class="tag">&lt;/<span class="name">uddiHost</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiPort</span>&gt;</span>8090<span class="tag">&lt;/<span class="name">uddiPort</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiWebContext</span>&gt;</span>default<span class="tag">&lt;/<span class="name">uddiWebContext</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiUserID</span>&gt;</span>bps<span class="tag">&lt;/<span class="name">uddiUserID</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiPassword</span>&gt;</span>000000<span class="tag">&lt;/<span class="name">uddiPassword</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiAdminPort</span>&gt;</span>6200<span class="tag">&lt;/<span class="name">uddiAdminPort</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">uddi__address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">uddi__address__list</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将<code>uddiHost</code>修改为服务器ip地址，将<code>uddiPort</code>修改为服务器tomcat的端口号</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-复制文件到服务器&quot;&gt;&lt;a href=&quot;#1-复制文件到服务器&quot; class=&quot;headerlink&quot; title=&quot;1.复制文件到服务器&quot;&gt;&lt;/a&gt;1.复制文件到服务器&lt;/h2&gt;&lt;p&gt;将Windows下边的&lt;code&gt;workspace&lt;/code&gt;文件夹拷贝</summary>
      
    
    
    
    <category term="服务器" scheme="https://zzy521.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="EOS" scheme="https://zzy521.com/tags/EOS/"/>
    
    <category term="Linux" scheme="https://zzy521.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>将Java程序打包为exe文件并和jre一起打包为安装包</title>
    <link href="https://zzy521.com/posts/eeae6a0e.html"/>
    <id>https://zzy521.com/posts/eeae6a0e.html</id>
    <published>2021-02-19T03:36:00.000Z</published>
    <updated>2021-05-20T09:09:06.380Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-将Java程序导出的jar文件打包为exe文件"><a href="#1-将Java程序导出的jar文件打包为exe文件" class="headerlink" title="1.将Java程序导出的jar文件打包为exe文件"></a>1.将Java程序导出的jar文件打包为exe文件</h2><p>1.1打开安装好的exe4j软件，首先看到的是一个欢迎界面，直接【next】就可以了</p><img src="../img/1.png" alt="1" style="zoom:67%;" /><p>1.2在第二步中我们选择【JAR in EXE mode】，然后【next】</p><img src="../img/2.png" alt="img" style="zoom:67%;" /><p>1.3.第三步中需要输入程序的缩写名字和指明输出目录，就是程序的保存目录，按照自己的情况设置就行，没啥特别要求，然后【next】</p><img src="../img/3.png" alt="img" style="zoom: 67%;" /><p>1.4.需要指定程序的名字，设置程序的图标，注意，程序图标要用ico格式的图片</p><img src="../img/4.png" alt="img" style="zoom:67%;" /><p>1.5.然后我们在左边的菜单栏中选择【32 bit or 64 bit】，勾上【Generate 64 bit executeable】，不勾选为32位，勾选为64位</p><img src="../img/5.png" alt="img" style="zoom:67%;" /><p>1.6.添加我们的jar包，点击右边绿色的 “+”号，然后选择【Archive】，打开浏览目录，找到我们的jar包，然后选择【打开】，【ok】</p><img src="../img/6.png" alt="img" style="zoom:67%;" /><img src="../img/7.png" alt="img" style="zoom:67%;" /><p>1.7.然后选择主类，在Main class后面，选择【浏览】，找到主类，添加上主类，然后【next】</p><img src="../img/8.png" alt="img" style="zoom:67%;" /><img src="../img/9.png" alt="img" style="zoom:67%;" /><p>1.8.设置JRE的最小最高版本，我们根据自己的情况设置，小版本设置成1.5，大版本设置成1.8，就行</p><img src="../img/10.png" alt="img" style="zoom:67%;" /><p>1.9.然后点击【Advanced Options】，选择【Search sequence】，将我们的JRE添加到软件中，这样的话，我们的代码可以在别的没有安装Java环境的电脑上运行；点击右边的添加，选择【Directory】，然后选择【浏览】，找到我们的JRE，然后添加（添加之后把前面的删掉然后加一个点，这里我写的是.\jre1.8.0_73，使用相对路径，之后把生成的程序和jre的文件夹拷贝到同一个文件夹下）</p><img src="../img/11.png" alt="img" style="zoom:67%;" /><p>1.10.然后点击左侧的【Preferred VM】，选择【Client hotspot VM】，然后【next】</p><img src="../img/12.png" alt="img" style="zoom:67%;" /><p>1.11.其余的步骤直接默认就行了，这样生成的exe文件就能正常运行了！</p><h2 id="2-将jre环境和exe文件一起打包为程序安装包"><a href="#2-将jre环境和exe文件一起打包为程序安装包" class="headerlink" title="2.将jre环境和exe文件一起打包为程序安装包"></a>2.将jre环境和exe文件一起打包为程序安装包</h2><p>需要安装<a href="https://www.baidu.com/link?url=Bejop3spAjw-LqNUd2iZw9OGTAIwdrhK3o32ssHxwdFlOlv6ZNhpIq6IGkNgn1h5vPOIPiEeR1CDMjUMhwF0rK&wd=&eqid=afdafbb7000c18bc00000004602f5369"><em>Inno Setup</em></a></p><p>菜单栏→新建，打开脚本向导</p><img src="../img/2021-02-19_140259.png" alt="2021-02-19_140259" style="zoom: 50%;" /><p>直接下一步</p><img src="../img/QQ截图20210219140645.png" alt="QQ截图20210219140645" style="zoom: 50%;" /><p>填写应用程序名称和应用程序版本，其他两个可以选填。</p><img src="../img/QQ截图20210219140927.png" alt="QQ截图20210219140927" style="zoom:50%;" /><p>这一步可以默认，应用程序所在的文件夹默认为上一步填的应用程序名称</p><img src="../img/QQ截图20210219142039.png" alt="QQ截图20210219142039" style="zoom:50%;" /><p>主执行文件选择用exe4j打包好的那个exe文件，然后点击添加文件夹选中jre文件夹，下一步</p><img src="../img/QQ截图20210219142521.png" alt="QQ截图20210219142521" style="zoom:50%;" /><p>直接下一步</p><img src="../img/QQ截图20210219145453.png" alt="QQ截图20210219145453" style="zoom:50%;" /><p>接着下一步</p><img src="../img/QQ截图20210219145541.png" alt="QQ截图20210219145541" style="zoom:50%;" /><p>继续下一步</p><img src="../img/QQ截图20210219145557.png" alt="QQ截图20210219145557" style="zoom:50%;" /><p>还是下一步</p><img src="../img/QQ截图20210219145610.png" alt="QQ截图20210219145610" style="zoom:50%;" /><p>选择安装程序的保存位置、安装程序文件名、安装程序的图标。安装密码为可选项</p><img src="../img/QQ截图20210219145922.png" alt="QQ截图20210219145922" style="zoom:50%;" /><p>继续下一步</p><img src="../img/QQ截图20210219150133.png" alt="QQ截图20210219150133" style="zoom:50%;" /><p>点击完成</p><img src="../img/QQ截图20210219150217.png" alt="QQ截图20210219150217" style="zoom:50%;" /><p>在生成的脚本中找到**[Files]<strong>,然后找到刚刚添加的文件夹路径，在文件加路径后的<code>&#123;app&#125;</code>后边加上<code>\jre</code>，jre就是程序安装后在安装路径下生成的文件夹名称，</strong>这里文件夹的名称与上边1.9中填写的路径要保持一致**，如果上边是跟我的文件夹名一样的，那这里也要写为.\jre1.8.0_73。</p><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20210219150416.png" alt="QQ截图20210219150416"></p><p>然后在菜单栏点击构建→编译即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-将Java程序导出的jar文件打包为exe文件&quot;&gt;&lt;a href=&quot;#1-将Java程序导出的jar文件打包为exe文件&quot; class=&quot;headerlink&quot; title=&quot;1.将Java程序导出的jar文件打包为exe文件&quot;&gt;&lt;/a&gt;1.将Java程序导出</summary>
      
    
    
    
    <category term="开发工具" scheme="https://zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Java" scheme="https://zzy521.com/tags/Java/"/>
    
    <category term="exe" scheme="https://zzy521.com/tags/exe/"/>
    
  </entry>
  
  <entry>
    <title>EOS中Restful服务的开发与调用</title>
    <link href="https://zzy521.com/posts/5a3d390e.html"/>
    <id>https://zzy521.com/posts/5a3d390e.html</id>
    <published>2021-01-20T09:21:05.000Z</published>
    <updated>2021-05-20T08:58:47.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发Restful服务"><a href="#开发Restful服务" class="headerlink" title="开发Restful服务"></a>开发Restful服务</h2><h3 id="创建服务实现类"><a href="#创建服务实现类" class="headerlink" title="创建服务实现类"></a>创建服务实现类</h3><p>创建一个class，添加下列注解和代码，配置接口访问的入口，需要注意的是Path中的路径必须是与web.xml中resteasyservlet配置的相同，否则将无法访问到接口，此处我们配置在/rest/services下</p><img src="../img/image-20210220101202007.png" alt="image-20210220101202007" style="zoom:50%;" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xcmg.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.POST;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.PathParam;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Produces;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.eos.common.connection.DataSourceHelper;</span><br><span class="line"><span class="keyword">import</span> com.eos.engine.component.ILogicComponent;</span><br><span class="line"><span class="keyword">import</span> com.eos.foundation.data.DataObjectUtil;</span><br><span class="line"><span class="keyword">import</span> com.eos.workflow.api.BPSServiceClientFactory;</span><br><span class="line"><span class="keyword">import</span> com.primeton.components.rest.annotation.JSONParam;</span><br><span class="line"><span class="keyword">import</span> com.primeton.ext.engine.component.LogicComponentFactory;</span><br><span class="line"><span class="keyword">import</span> com.xcmg.getRsInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> commonj.sdo.DataObject;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Path(&quot;/rest/services/RoleService&quot;)</span></span><br><span class="line"><span class="meta">@Produces(&#123;&quot;application/json&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProcessStartService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@POST</span></span><br><span class="line"><span class="meta">@Path(&quot;/addProcess&quot;)</span></span><br><span class="line"><span class="comment">//新增数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span>  String  <span class="title">addRole</span><span class="params">(<span class="meta">@JSONParam(&quot;role&quot;)</span>DataObject[] role)</span><span class="keyword">throws</span> Throwable</span>&#123;</span><br><span class="line"><span class="comment">//获取后台返回值</span></span><br><span class="line">Map ms= <span class="keyword">new</span> HashMap();</span><br><span class="line"><span class="comment">//调用数据模型   </span></span><br><span class="line">role = DataObjectUtil.convertDataObjects(role,<span class="string">&quot;com.primeton.eos.Advice.Advice&quot;</span>,<span class="keyword">false</span>);</span><br><span class="line">System.err.println(role.length);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; role.length; i++) &#123;</span><br><span class="line">Object[] inParameters = &#123;</span><br><span class="line">role[i].get(<span class="string">&quot;proposer&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;department&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;phone&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;category&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;carrydepartment&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;proposal&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;actuality&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;improvement&quot;</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//打印数据</span></span><br><span class="line">Object[] params = <span class="keyword">new</span> Object[<span class="number">1</span>];</span><br><span class="line">params[<span class="number">0</span>] = role;</span><br><span class="line">Object[] result = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//设置登录用户</span></span><br><span class="line">String userid= (String)role[i].get(<span class="string">&quot;state&quot;</span>);</span><br><span class="line">BPSServiceClientFactory.getLoginManager().setCurrentUser(userid, <span class="string">&quot;sysadmin&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//构件名称</span></span><br><span class="line">ILogicComponent logicComponent = LogicComponentFactory.create(<span class="string">&quot;com.primeton.eos.phoneProcess&quot;</span>);</span><br><span class="line"><span class="comment">//逻辑流名称</span></span><br><span class="line">result = logicComponent.invoke(<span class="string">&quot;StartProcess&quot;</span>, inParameters);</span><br><span class="line">String count = (String)result[<span class="number">0</span>];</span><br><span class="line">Long id = (Long)result[<span class="number">1</span>];</span><br><span class="line">System.err.println(<span class="string">&quot;-----------------------》》&quot;</span>+count);</span><br><span class="line"><span class="keyword">if</span>(count.equals(<span class="string">&quot;1&quot;</span>))&#123;</span><br><span class="line">ms.put(<span class="string">&quot;errorCode&quot;</span>,<span class="string">&quot;00100&quot;</span>);</span><br><span class="line">ms.put(<span class="string">&quot;errorMsg&quot;</span>, <span class="string">&quot;新增数据成功&quot;</span>);</span><br><span class="line">ms.put(<span class="string">&quot;value&quot;</span>,id);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//更新数据</span></span><br><span class="line">ms.put(<span class="string">&quot;errorCode&quot;</span>,<span class="string">&quot;00200&quot;</span>);</span><br><span class="line">ms.put(<span class="string">&quot;errorMsg&quot;</span>, <span class="string">&quot;新增数据失败&quot;</span>);</span><br><span class="line">ms.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  JSON.toJSONString(ms);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GET</span></span><br><span class="line"><span class="meta">@Path(&quot;/getProcess/&#123;productCode&#125;&quot;)</span></span><br><span class="line"><span class="comment">//查询数据是否存在</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">selectEngineNumberInfoCount</span><span class="params">(<span class="meta">@PathParam(&quot;productCode&quot;)</span>String productCode)</span> <span class="keyword">throws</span> Throwable</span>&#123;</span><br><span class="line">Map ms= <span class="keyword">new</span> HashMap();</span><br><span class="line">DataSource db = DataSourceHelper.getDataSource(<span class="string">&quot;default&quot;</span>);</span><br><span class="line"><span class="comment">//查询用户</span></span><br><span class="line">String vininfo = <span class="string">&quot;SELECT a.PROCESSINSTID,a.PROPOSER,b.NAME DEPARTMENT,a.PHONE,c.NAME CATEGORY,d.NAME CARRYDEPARTMENT,a.PROPOSAL,a.ACTUALITY,a.IMPROVEMENT,a.SUBMITTIME,a.OPINION1,a.CHECKTIME,a.OPINION2,a.RECHECKTIME,a.STATE FROM ((ADVICE a LEFT JOIN DEPARTMENT b ON a.DEPARTMENT=b.DID)LEFT JOIN CATEGORY c ON a.CATEGORY=c.ID)LEFT JOIN CARRYDEPARTMENT d ON a.CARRYDEPARTMENT=d.ID WHERE PHONE = &#x27;&quot;</span>+productCode+<span class="string">&quot;&#x27; ORDER BY PROCESSINSTID DESC&quot;</span>;<span class="comment">//获取密码</span></span><br><span class="line">List list = getRsInfo.getRsListbySql(vininfo, db.getConnection());</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>  JSON.toJSONString(list);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>在编辑的java同目录下创建文件restconfig.properties并录入以下内容（等号后是对应的类全名）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resteasy.resources&#x3D;com.xcmg.service.ProcessStartService</span><br></pre></td></tr></table></figure><img src="../img/image-20210220101724380.png" alt="image-20210220101724380" style="zoom: 50%;" /><h2 id="编辑web-xml文件"><a href="#编辑web-xml文件" class="headerlink" title="编辑web.xml文件"></a>编辑web.xml文件</h2><p>编辑web.xml文件，在rest.config.locations下的param-value标签下新增restconfig.properties对应路径，需要增加英文逗号与已有内容分开，保存编辑后需要右键web.xml文件进行部署。</p><img src="../img/image-20210220101923074.png" alt="image-20210220101923074" style="zoom:50%;" /><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><p><strong>1.修改了web.xml要手动部署web.xml</strong><br><strong>2.web.xml中的servlet-mapping下的url-pattern要和配置访问的地址对应</strong><br><strong>3.在rest.config.locations下的param-value标签下新增restconfig.properties对应路径</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开发Restful服务&quot;&gt;&lt;a href=&quot;#开发Restful服务&quot; class=&quot;headerlink&quot; title=&quot;开发Restful服务&quot;&gt;&lt;/a&gt;开发Restful服务&lt;/h2&gt;&lt;h3 id=&quot;创建服务实现类&quot;&gt;&lt;a href=&quot;#创建服务实现类&quot; c</summary>
      
    
    
    
    <category term="开发工具" scheme="https://zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="EOS" scheme="https://zzy521.com/tags/EOS/"/>
    
    <category term="Rest接口" scheme="https://zzy521.com/tags/Rest%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>Markdown生成带侧边目录的HTML</title>
    <link href="https://zzy521.com/posts/7067bb35.html"/>
    <id>https://zzy521.com/posts/7067bb35.html</id>
    <published>2021-01-03T02:24:25.000Z</published>
    <updated>2021-05-20T09:43:04.992Z</updated>
    
    <content type="html"><![CDATA[<p><strong>在使用Markdown文件生成说明文档的时候一般需要加侧边目录，但是Markdown本身的目录只能在上方显示，这里我选择使用一个插件来生成侧边目录。</strong></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>使用了node.js，没有安装的话自己安装，安装插件下载过慢的话换淘宝源或者清华源</p><p>点击<code>win</code>+<code>r</code>，输入cmd点击回车打开。</p><img src="../img/QQ截图20210103095659.png" alt="QQ截图20210103095659" style="zoom:67%;" /><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g i5ting_toc</span><br></pre></td></tr></table></figure><img src="../img/QQ截图20210103095946.png" alt="QQ截图20210103095946" style="zoom:67%;" /><p>出现添加包成功代表安装成功</p><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><p>打开需要生成的md文件所在目录</p><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20210103100441.png" alt="QQ截图20210103100441"></p><p>在地址栏输入cmd点击回车。（这样操作省去了使用cd将目录移动到文件所在的文件夹的步骤）<img src="../img/QQ截图20210103100529.png" alt="QQ截图20210103100529" style="zoom:67%;" /></p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i5ting_toc -f Tomcat的目录结构.md -o</span><br></pre></td></tr></table></figure><p><code>Tomcat的目录结构.md</code>是我的文件名，需要根据自己的文件名去修改。<img src="../img/QQ截图20210103101000.png" alt="QQ截图20210103101000" style="zoom:67%;" /></p><p>下面输出的三行分别为文件所在文件夹、目标文件和生成的文件。</p><p>推荐将Markdown中使用的图片都放在一个单独的文件夹，并将文件夹和Markdown放在一个文件夹中，将图片路径设置为相对路径，这样如果生成的HTML文件图片不显示只要将图片文件夹复制一份放到preview文件夹中就正常显示了。</p><img src="../img/QQ截图20210103101650.png" alt="QQ截图20210103101650" style="zoom:67%;" /><p><strong>可以看到生成的文件已经加了锚点，支持打开相应的链接直接跳转到相应的位置。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;在使用Markdown文件生成说明文档的时候一般需要加侧边目录，但是Markdown本身的目录只能在上方显示，这里我选择使用一个插件来生成侧边目录。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;head</summary>
      
    
    
    
    <category term="开发工具" scheme="https://zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="markdown" scheme="https://zzy521.com/tags/markdown/"/>
    
    <category term="项目说明" scheme="https://zzy521.com/tags/%E9%A1%B9%E7%9B%AE%E8%AF%B4%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat服务器介绍</title>
    <link href="https://zzy521.com/posts/c86b9588.html"/>
    <id>https://zzy521.com/posts/c86b9588.html</id>
    <published>2021-01-02T09:01:32.000Z</published>
    <updated>2021-05-20T09:05:16.212Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tomcat的目录结构"><a href="#Tomcat的目录结构" class="headerlink" title="Tomcat的目录结构"></a>Tomcat的目录结构</h2><p>解压下载好的tomcat可以看到如下文件结构：</p><p><code>bin</code>：存放启动和关闭tomcat的命令的路径。</p><p><code>conf</code>：存放tomcat的配置，所有的tomcat的配置都在该路径下设置。</p><p><code>lib</code>：存放Tomcat服务器的核心类库（JAR文件），如果需要扩展tomcat的功能，也可将第三方类库复制到该路径下。</p><p><code>logs</code>：这是一个空路径，用来保存Tomcat每次运行后产生的日志。</p><p><code>temp</code>：保存Web应用运行过程中生成的临时文件。</p><p><code>webapps</code>：该路径用于自动部署Web应用，将Web应用复制到该路径下，Tomcat启动时会自动将该应用部署到容器中。</p><p><code>work</code>：保存在Web应用在运行过程中编译生成的.class文件。该文件夹可以删除，但每次启动Tomcat时系统都会再次建立该路径。</p><p><code>LICENSE</code>等相关文档</p><p><strong>运行Tomcat只需要系统有一个JAVA_HOME环境变量。不管是Windows还是linux，只要有这个环境变量并且指向JDK的安装路径即可。</strong></p><h2 id="启动Tomcat"><a href="#启动Tomcat" class="headerlink" title="启动Tomcat"></a>启动Tomcat</h2><p>对于Windows平台，只要双击Tomcat安装路径下bin目录中的startup.bat文件即可。</p><p>启动Tomcat后，打开浏览器并在地址栏输入<a href="http://localhost:8080/%EF%BC%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%87%BA%E7%8E%B0%E6%AD%A4%E7%95%8C%E9%9D%A2%E5%8D%B3%E8%A1%A8%E7%A4%BA%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%E3%80%82">http://localhost:8080/，浏览器出现此界面即表示安装成功。</a></p><img src="../img/QQ截图20210102160835.png" alt="QQ截图20210102160835" style="zoom: 67%;" /><h2 id="配置Tomcat的端口"><a href="#配置Tomcat的端口" class="headerlink" title="配置Tomcat的端口"></a>配置Tomcat的端口</h2><p>Tomcat的默认端口是8080，可以通过修改Tomcat的配置文件来改变服务端口，甚至可以让Tomcat同时在多个端口提供服务。</p><p>Tomcat的配置文件在<code>conf</code>目录下，控制端口的配置文件为<code>conf</code>下的<code>server.xml</code>文件。切记修改时只能用记事本或者vi等无格式的编辑器，不可以使用写字板。</p><p>在<code>service.xml</code>的70行左右的位置，可以看到以下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>其中<code>port=&quot;8080&quot;</code>就是Tomcat提供服务的端口，将Tomcat修改为任意的端口，为避免与公用端口产生冲突，端口号最好大于1024。在这里我修改为8090.</p><p>修改完之后重启Tomcat，在浏览器地址栏输入<a href="http://localhost:8090/,%E5%8D%B3%E5%8F%AF%E5%86%8D%E6%AC%A1%E7%9C%8B%E5%88%B0Tomcat%E7%9A%84%E7%95%8C%E9%9D%A2%E3%80%82">http://localhost:8090/,即可再次看到Tomcat的界面。</a></p><h2 id="Tomcat的控制台"><a href="#Tomcat的控制台" class="headerlink" title="Tomcat的控制台"></a>Tomcat的控制台</h2><p>在上图右上角有三个控制台：一个是Server Status控制台，一个是Manager APP控制台，一个是Host Mnager控制台。</p><p>Status用来监控服务器的状态，Manager控制台用来部署和监控Web应用，通常只需使用Manager控制台。</p><p>控制台的用户名和密码是通过Tomcat的JAAS（JAAS的全称是Java Authentication Authorization Service（Java验证和授权API），它用来控制对Java web应用的授权访问）控制的。初始是没有用户的，所以无论输入什么都无法登陆。</p><p>webapps路径是Web应用的存放路径，而Manager控制台对应的也是一个Web应用，所以它的配置文件是webapps/manager/WEB-INF路径下的web.xml文件。</p><p>用户的配置也在其中，但是Tomcat采用文件安全域，<strong>添加控制台用户只需要修改conf路径下的tomcat-users.xml文件即可。</strong></p><p>打开该文件在</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tomcat-users</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下方添加下列内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;manager&quot;</span> <span class="attr">password</span>=<span class="string">&quot;manager&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>此处登录用户名和密码我都是用的manager，可以根据需要自行修改。</p><p>修改过后重启Tomcat点击控制台登录即可。</p><p>显示下图即表示登陆成功</p><img src="../img/QQ%E6%88%AA%E5%9B%BE20210102165446.png" alt="QQ截图20210102165446" style="zoom:67%;" /><hr><p><strong>Tomcat服务器状态</strong></p><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20210102165559.png" alt="QQ截图20210102165559"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Tomcat的目录结构&quot;&gt;&lt;a href=&quot;#Tomcat的目录结构&quot; class=&quot;headerlink&quot; title=&quot;Tomcat的目录结构&quot;&gt;&lt;/a&gt;Tomcat的目录结构&lt;/h2&gt;&lt;p&gt;解压下载好的tomcat可以看到如下文件结构：&lt;/p&gt;
&lt;p&gt;&lt;co</summary>
      
    
    
    
    <category term="服务器" scheme="https://zzy521.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Tomcat" scheme="https://zzy521.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Linux查看应用的端口号和进程号PID</title>
    <link href="https://zzy521.com/posts/73a46000.html"/>
    <id>https://zzy521.com/posts/73a46000.html</id>
    <published>2020-12-22T09:57:25.000Z</published>
    <updated>2021-05-20T09:03:44.453Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-进程名和进程号PID的互查"><a href="#1-进程名和进程号PID的互查" class="headerlink" title="1.进程名和进程号PID的互查"></a>1.进程名和进程号PID的互查</h2><h4 id="1-1根据进程名查进程号PID-PID是进程标识符"><a href="#1-1根据进程名查进程号PID-PID是进程标识符" class="headerlink" title="1.1根据进程名查进程号PID(PID是进程标识符)"></a>1.1根据进程名查进程号PID(PID是进程标识符)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep 进程名</span><br></pre></td></tr></table></figure><p>比如：查看tomcat进程的PID编号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep tomcat</span><br></pre></td></tr></table></figure><p>如图，第一个就是查到的PID编号</p><p><img src="../img/%E6%88%AA%E5%9B%BE.png" alt="截图"></p><h5 id="还可以使用ps-aux-grep-xxx，效果与ps-ef-grep-xxx一样，只不过信息会更详细。"><a href="#还可以使用ps-aux-grep-xxx，效果与ps-ef-grep-xxx一样，只不过信息会更详细。" class="headerlink" title="还可以使用ps -aux | grep xxx，效果与ps -ef | grep xxx一样，只不过信息会更详细。"></a>还可以使用<code>ps -aux | grep xxx</code>，效果与<code>ps -ef | grep xxx</code>一样，只不过信息会更详细。</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep 进程名</span><br></pre></td></tr></table></figure><p>PID编号可以用来强制结束某进程。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 PID编号</span><br></pre></td></tr></table></figure><p>比如：强制结束tomcat进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">5087为上边查到的tomcat的PID</span></span><br><span class="line">kill -9 5087</span><br></pre></td></tr></table></figure><h4 id="1-2根据进程号查进程名"><a href="#1-2根据进程号查进程名" class="headerlink" title="1.2根据进程号查进程名"></a>1.2根据进程号查进程名</h4><p>将上边的进程名换成进程号即可。（这个用的比较少，一般都是根据进程名去查进程号）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep 进程号</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep 进程号</span><br></pre></td></tr></table></figure><h2 id="2-端口号和进程号PID的互查"><a href="#2-端口号和进程号PID的互查" class="headerlink" title="2.端口号和进程号PID的互查"></a>2.端口号和进程号PID的互查</h2><h5 id="根据进程PID查端口号"><a href="#根据进程PID查端口号" class="headerlink" title="根据进程PID查端口号"></a>根据进程PID查端口号</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i | grep 进程号</span><br></pre></td></tr></table></figure><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20201223091932.png" alt="QQ截图20201223091932"></p><p>或使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap | grep 进程号</span><br></pre></td></tr></table></figure><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20201223092109.png" alt="QQ截图20201223092109"></p><h5 id="根据端口号查进程号PID"><a href="#根据端口号查进程号PID" class="headerlink" title="根据端口号查进程号PID"></a>根据端口号查进程号PID</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:端口号</span><br></pre></td></tr></table></figure><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20201223092227.png" alt="QQ截图20201223092227"></p><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap | grep 端口号</span><br></pre></td></tr></table></figure><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20201223092403.png" alt="QQ截图20201223092403"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-进程名和进程号PID的互查&quot;&gt;&lt;a href=&quot;#1-进程名和进程号PID的互查&quot; class=&quot;headerlink&quot; title=&quot;1.进程名和进程号PID的互查&quot;&gt;&lt;/a&gt;1.进程名和进程号PID的互查&lt;/h2&gt;&lt;h4 id=&quot;1-1根据进程名查进程号P</summary>
      
    
    
    
    <category term="服务器" scheme="https://zzy521.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="https://zzy521.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo新建博客显示分类及标签</title>
    <link href="https://zzy521.com/posts/4d9beafe.html"/>
    <id>https://zzy521.com/posts/4d9beafe.html</id>
    <published>2020-12-20T12:40:11.000Z</published>
    <updated>2021-05-20T08:07:41.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>进入hexo博客所在的根目录，输入如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>成功后提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: D:\Hexo\source\categories\index.md</span><br></pre></td></tr></table></figure><p>index.md的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-12-20 20:26:06</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>需要修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-12-20 20:26:06</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: categories</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>在控制台中输入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>成功后提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: D:\Hexo\source\tags\index.md</span><br></pre></td></tr></table></figure><p>index.md的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-12-20 20:51:11</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-12-20 20:51:11</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: tags</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="修改模板"><a href="#修改模板" class="headerlink" title="修改模板"></a>修改模板</h2><p>修改<code>scaffolds</code>中的<code>post</code>模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">  - 文章分类</span><br><span class="line">tags:</span><br><span class="line">  - 文章标签</span><br><span class="line">toc: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;分类&quot;&gt;&lt;a href=&quot;#分类&quot; class=&quot;headerlink&quot; title=&quot;分类&quot;&gt;&lt;/a&gt;分类&lt;/h2&gt;&lt;p&gt;进入hexo博客所在的根目录，输入如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    <category term="开发工具" scheme="https://zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Hexo" scheme="https://zzy521.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>在服务器上安装运行EOS的Tomcat的方法</title>
    <link href="https://zzy521.com/posts/eba5960e.html"/>
    <id>https://zzy521.com/posts/eba5960e.html</id>
    <published>2020-12-19T09:01:25.000Z</published>
    <updated>2021-05-20T09:01:05.880Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-防火墙开启端口号"><a href="#1-防火墙开启端口号" class="headerlink" title="1.防火墙开启端口号"></a>1.防火墙开启端口号</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看firewall的状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启（如果防火墙未开启的话先开启）</span></span><br><span class="line">service firewalld start</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询端口是否开放</span></span><br><span class="line">firewall-cmd --query-port=8080/tcp</span><br><span class="line">firewall-cmd --query-port=8009/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开放8080端口</span></span><br><span class="line">firewall-cmd --permanent --add-port=8080/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开放8009端口</span></span><br><span class="line">firewall-cmd --permanent --add-port=8009/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash">重启防火墙(修改配置后要重启防火墙)</span></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="2-将压缩包复制到服务器并打开"><a href="#2-将压缩包复制到服务器并打开" class="headerlink" title="2.将压缩包复制到服务器并打开"></a>2.将压缩包复制到服务器并打开</h2><p>在<code>/usr/local</code>文件夹下新建名为tomcat的文件夹，将名为<code>apache-tomcat-7.0.54.tar</code>的压缩包进去</p><p>进入tomcat文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/tomcat</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf apache-tomcat-7.0.54.tar</span><br></pre></td></tr></table></figure><h2 id="3-调大Tomcat的jvm内存"><a href="#3-调大Tomcat的jvm内存" class="headerlink" title="3.调大Tomcat的jvm内存"></a>3.调大Tomcat的jvm内存</h2><p>在生产环境中，tomcat内存设置不好很容易出现JVM内存溢出，解决方法就是修改<code>Tomcat</code>中的<code>catalina.sh</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入bin目录下</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-7.0.54/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">打开catalina.sh文件</span></span><br><span class="line">vi catalina.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">按i进入编辑模式，找到cygwin=<span class="literal">false</span>，在这一行的前面加入参数，具体如下，按Esc退出编辑模式，再输入:wq！点击回车保存</span></span><br><span class="line">JAVA_OPTS=&quot;-server -Xms800m -Xmx800m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:MaxNewSize=512m&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="其他说明："><a href="#其他说明：" class="headerlink" title="其他说明："></a>其他说明：</h5><ol><li>“m”说明单位是MB，否则默认是KB</li><li>一般使用物理内存的80%作为堆大小</li><li>一般把-Xms和-Xmx设为一样大</li><li>一般把-Xmn设置为-Xmx值的1/4</li><li>一般将堆的总大小的50%到60%分配给新生成的池</li></ol><h5 id="jvm参数说明："><a href="#jvm参数说明：" class="headerlink" title="jvm参数说明："></a>jvm参数说明：</h5><ul><li><code>-server</code> 一定要作为第一个参数，启用JDK的server版本，在多个CPU时性能佳<br><code>-Xms java Heap</code>初始大小。 默认是物理内存的1/64。<br><code>-Xmx java heap</code>最大值。建议均设为物理内存的80%。不可超过物理内存。<br><code>-Xmn java heap</code>最小值，一般设置为Xmx的3、4分之一。<br><code>-XX:PermSize</code> 设定内存的永久保存区初始大小，缺省值为64M。<br><code>-XX:MaxPermSize</code> 设定内存的永久保存区最大大小，缺省值为64M。<br><code>-XX:SurvivorRatio</code>=2 生还者池的大小，默认是2。如<br><code>-XX:NewSize</code> 新生成的池的初始大小。 缺省值为2M。<br><code>-XX:MaxNewSize</code> 新生成的池的最大大小。 缺省值为32M。<br><code>+XX:AggressiveHeap</code> 让jvm忽略Xmx参数，疯狂地吃完一个G物理内存，再吃尽一个G的swap。<br><code>-Xss</code> 每个线程的Stack大小<br><code>-verbose:gc</code> 现实垃圾收集信息<br><code>-Xloggc:gc.log</code> 指定垃圾收集日志文件<br><code>-XX:+UseParNewGC</code> 缩短minor收集的时间<br><code>-XX:+UseConcMarkSweepGC</code> 缩短major收集的时间<br><code>-XX:userParNewGC</code> 可用来设置并行收集(多CPU)<br><code>-XX:ParallelGCThreads</code> 可用来增加并行度(多CPU)<br><code>-XX:UseParallelGC</code> 设置后可以使用并行清除收集器(多CPU)</li></ul><h2 id="4-改变端口号"><a href="#4-改变端口号" class="headerlink" title="4.改变端口号"></a>4.改变端口号</h2><p>如果不用默认的8080端口则需要修改端口号，在<code>conf</code>文件夹下的<code>server.xml</code>文件中修改。换端口号的话需要在防火墙开启相应的端口号，参考第一步。（如果使用默认的8080端口则跳过此步骤）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入conf目录下</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-7.0.54/conf</span><br><span class="line"><span class="meta">#</span><span class="bash">打开server.xml文件</span></span><br><span class="line">vi server.xml</span><br><span class="line"><span class="meta">#</span><span class="bash">按i进入编辑模式，找到</span> </span><br><span class="line">&lt;Connector URIEncoding=&quot;UTF-8&quot; connectionTimeout=&quot;20000&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; redirectPort=&quot;8443&quot;/&gt;，</span><br><span class="line"><span class="meta">#</span><span class="bash">将其中的8080换为需要的端口号，例如8090，按Esc退出编辑模式，再输入:wq！点击回车保存</span></span><br><span class="line">&lt;Connector URIEncoding=&quot;UTF-8&quot; connectionTimeout=&quot;20000&quot; port=&quot;8090&quot; protocol=&quot;HTTP/1.1&quot; redirectPort=&quot;8443&quot;/&gt;</span><br></pre></td></tr></table></figure><h2 id="5-启动运行"><a href="#5-启动运行" class="headerlink" title="5.启动运行"></a>5.启动运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入bin目录下</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-7.0.54/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">启动运行</span></span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>部署完项目需要重启tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入bin目录下</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-7.0.54/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">停止运行</span></span><br><span class="line">./shutdown.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">启动运行</span></span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-防火墙开启端口号&quot;&gt;&lt;a href=&quot;#1-防火墙开启端口号&quot; class=&quot;headerlink&quot; title=&quot;1.防火墙开启端口号&quot;&gt;&lt;/a&gt;1.防火墙开启端口号&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    <category term="服务器" scheme="https://zzy521.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="EOS" scheme="https://zzy521.com/tags/EOS/"/>
    
    <category term="Linux" scheme="https://zzy521.com/tags/Linux/"/>
    
    <category term="Tomcat" scheme="https://zzy521.com/tags/Tomcat/"/>
    
  </entry>
  
</feed>
