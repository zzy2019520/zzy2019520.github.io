<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张占阳的博客</title>
  
  
  <link href="https://www.zzy521.com/atom.xml" rel="self"/>
  
  <link href="https://www.zzy521.com/"/>
  <updated>2021-05-19T06:57:52.235Z</updated>
  <id>https://www.zzy521.com/</id>
  
  <author>
    <name>张占阳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>qwer</title>
    <link href="https://www.zzy521.com/posts/5f8e9c2.html"/>
    <id>https://www.zzy521.com/posts/5f8e9c2.html</id>
    <published>2021-05-19T06:57:44.000Z</published>
    <updated>2021-05-19T06:57:52.235Z</updated>
    
    
    
    
    <category term="文章分类" scheme="https://www.zzy521.com/categories/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="文章标签" scheme="https://www.zzy521.com/tags/%E6%96%87%E7%AB%A0%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>aaa</title>
    <link href="https://www.zzy521.com/posts/f007732d.html"/>
    <id>https://www.zzy521.com/posts/f007732d.html</id>
    <published>2021-05-19T06:50:20.000Z</published>
    <updated>2021-05-19T06:57:24.358Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0f0a99d48420a8ba072d923bc1eb43a3b2557089b65803e6e7f5914abd1dbe06">fe8ef1ecebcef2a435afafe09880d555d907009426142505a2e80700904f53b4f9788b8879728f3c8bfde73d9c5a075c1aa55e715c71a875d8b3c29e9f32c5578e259b73ff2fca4bf3a1ae5ec10ce62f570f6a73ecd4bec278ec731d5d60269d13095012992c7066f2d155004b1abea81747a9ded814c6e989c33f34ab873e223273e67dca2246b1f135d826b18bd4672c354fc03932717bd9bd02979d7d81f0b30453966da96f17ff10b7d6f8c87e6110656aacd5a881d701d2f749ac2ca52846b07eb5bd73f6c242bc964d7839d5a16c569ebf858d501927526c6320419e0fd2529617e9b6c29d118b53a69a5f80ec7c7b460975fe83b2b325d1999fe20c5945fe6e6923cbd20cb819c7caa644d7ed</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这里需要密码才能访问。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这是一篇加密博文，请输入密码后查看</summary>
    
    
    
    <category term="文章分类" scheme="https://www.zzy521.com/categories/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="文章标签" scheme="https://www.zzy521.com/tags/%E6%96%87%E7%AB%A0%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://www.zzy521.com/posts/d87f7e0c.html"/>
    <id>https://www.zzy521.com/posts/d87f7e0c.html</id>
    <published>2021-05-19T06:45:29.000Z</published>
    <updated>2021-05-19T06:50:56.262Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="文章分类" scheme="https://www.zzy521.com/categories/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="文章标签" scheme="https://www.zzy521.com/tags/%E6%96%87%E7%AB%A0%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>CRM调用外部接口</title>
    <link href="https://www.zzy521.com/posts/ab81ff07.html"/>
    <id>https://www.zzy521.com/posts/ab81ff07.html</id>
    <published>2021-05-18T01:48:01.000Z</published>
    <updated>2021-05-18T06:25:16.065Z</updated>
    
    
    
    
    <category term="文章分类" scheme="https://www.zzy521.com/categories/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="文章标签" scheme="https://www.zzy521.com/tags/%E6%96%87%E7%AB%A0%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>调用钉钉接口发送工作通知</title>
    <link href="https://www.zzy521.com/posts/6a850357.html"/>
    <id>https://www.zzy521.com/posts/6a850357.html</id>
    <published>2021-04-07T03:21:19.000Z</published>
    <updated>2021-05-19T07:12:37.650Z</updated>
    
    <content type="html"><![CDATA[<p>工作通知消息是以某个微应用的名义推送到员工的工作通知消息，例如生日祝福、入职提醒等。</p><p>发送工作通知消息需要注意以下事项：</p><ul><li><p>同一个应用相同消息的内容同一个用户一天只能接收一次。</p></li><li><p>同一个应用给同一个用户发送消息，企业内部应用一天不得超过500次。</p></li><li><p>通过设置to_all_user参数全员推送消息，一天最多3次。</p></li><li><p><strong>超出以上限制**</strong>次数**<strong>后，接口返回成功，但用户无法接收到。</strong>详细的限制说明，请参考<a href="https://developers.dingtalk.com/document/app/invocation-frequency-limit#section-yx8-1s0-c8w">工作通知消息限制</a>。</p></li><li><p>该接口是异步发送消息，接口返回成功并不表示用户一定会收到消息，需要通过<a href="https://developers.dingtalk.com/document/app/gets-the-result-of-sending-messages-asynchronously-to-the-enterprise#topic-1936880">获取工作通知消息的发送结果</a>接口查询是否给用户发送成功。</p></li><li><p>消息类型和样例可参考<a href="https://developers.dingtalk.com/document/app/message-types-and-data-format#topic-1945727">消息类型与数据格式</a>。</p></li></ul><ol><li><a href="https://developers.dingtalk.com/document/app/obtain-orgapp-token?spm=ding_open_doc.document.0.0.3579203faWR4wP#topic-1936350">先获取token</a></li><li><a href="https://developers.dingtalk.com/document/app/retrieve-userid-from-mobile-phone-number">再根据token和用户的手机号获取钉钉的userid</a></li><li><a href="https://developers.dingtalk.com/document/app/asynchronous-sending-of-enterprise-session-messages">根据token和用户的userid发送消息</a></li></ol><p>具体代码如下</p><p><strong>代码中的*****要自己填</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMsg</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用钉钉接口返回的token---不用填</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String TOKEN =<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//调用钉钉接口返回的错误值---不用填</span></span><br><span class="line"><span class="keyword">private</span> String errcode=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//根据用户手机号获取的用户的userid---不用填</span></span><br><span class="line"><span class="keyword">private</span> String userid=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//app应用的唯一标识key</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String appkey=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line"><span class="comment">//应用的密钥。</span></span><br><span class="line"><span class="comment">// AppKey和AppSecret可在钉钉开发者后台的应用详情页面获取。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String appsecret=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line"><span class="comment">//发送消息时使用的微应用的AgentID。</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String agent_id=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line"><span class="comment">//是否给所有用户发送消息</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String to_all_user=<span class="string">&quot;false&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据手机号和消息内容给用户发送钉钉消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone 手机号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg 消息内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SendMessage</span><span class="params">(String phone,String msg)</span></span>&#123;</span><br><span class="line">        getUserid(phone);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果获取失败获取token重新获取</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="string">&quot;0&quot;</span>.equals(errcode))&#123;</span><br><span class="line">            errcode =<span class="string">&quot;&quot;</span>;</span><br><span class="line">            getToken();</span><br><span class="line">            getUserid(phone);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        send(userid,msg);</span><br><span class="line">        <span class="comment">//如果发送失败重新获取token再发送</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="string">&quot;0&quot;</span>.equals(errcode)) &#123;</span><br><span class="line">            getToken();</span><br><span class="line">            errcode =<span class="string">&quot;&quot;</span>;</span><br><span class="line">            send(userid, msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getToken</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String URL_1 = <span class="string">&quot;https://oapi.dingtalk.com/gettoken?appkey=&quot;</span>;</span><br><span class="line">        String URL_2 =<span class="string">&quot;&amp;appsecret=&quot;</span>;</span><br><span class="line">        String URL = URL_1.concat(appkey).concat(URL_2).concat(appsecret);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建连接</span></span><br><span class="line">            URL url1 = <span class="keyword">new</span> URL(URL);</span><br><span class="line">            HttpURLConnection connection = (HttpURLConnection) url1.openConnection();</span><br><span class="line">            connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            connection.setUseCaches(<span class="keyword">false</span>);</span><br><span class="line">            connection.setInstanceFollowRedirects(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//设置请求头</span></span><br><span class="line">            connection.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">            connection.connect();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取响应</span></span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(connection.getInputStream()));</span><br><span class="line">            String lines;</span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> ((lines = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                lines = <span class="keyword">new</span> String(lines.getBytes(), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                sb.append(lines);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">            <span class="comment">// 断开连接</span></span><br><span class="line">            connection.disconnect();</span><br><span class="line">            String obj= String.valueOf(sb);</span><br><span class="line">            JSONObject jsonObject = JSONObject.parseObject(obj);</span><br><span class="line">            TOKEN =jsonObject.getString(<span class="string">&quot;access_token&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token值和用户手机号获取用户的钉钉userid</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone 用户手机号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserid</span><span class="params">(String phone)</span> </span>&#123;</span><br><span class="line">        String URL_1 = <span class="string">&quot;https://oapi.dingtalk.com/user/get_by_mobile?access_token=&quot;</span>;</span><br><span class="line">        String URL_2 =<span class="string">&quot;&amp;mobile=&quot;</span>;</span><br><span class="line">        String URL = URL_1.concat(TOKEN).concat(URL_2).concat(phone);</span><br><span class="line">       <span class="comment">// String userid=&quot;&quot;;</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建连接</span></span><br><span class="line">            URL url1 = <span class="keyword">new</span> URL(URL);</span><br><span class="line">            HttpURLConnection connection = (HttpURLConnection) url1.openConnection();</span><br><span class="line">            connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">            connection.setUseCaches(<span class="keyword">false</span>);</span><br><span class="line">            connection.setInstanceFollowRedirects(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//设置请求头</span></span><br><span class="line">            connection.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">            connection.connect();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取响应</span></span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(connection.getInputStream()));</span><br><span class="line">            String lines;</span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> ((lines = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                lines = <span class="keyword">new</span> String(lines.getBytes(), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                sb.append(lines);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">            <span class="comment">// 断开连接</span></span><br><span class="line">            connection.disconnect();</span><br><span class="line">            String obj= String.valueOf(sb);</span><br><span class="line">            JSONObject jsonObject = JSONObject.parseObject(obj);</span><br><span class="line">            userid =jsonObject.getString(<span class="string">&quot;userid&quot;</span>);</span><br><span class="line">            errcode =jsonObject.getString(<span class="string">&quot;errcode&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token和用户的userid发送消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userid 用户的钉钉id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg    发送消息的内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">send</span><span class="params">(String userid,String msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String URL_title = <span class="string">&quot;https://oapi.dingtalk.com/topapi/message/corpconversation/asyncsend_v2?access_token=&quot;</span>;</span><br><span class="line">        String URL=URL_title.concat(TOKEN);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建连接</span></span><br><span class="line">            URL url = <span class="keyword">new</span> URL(URL);</span><br><span class="line">            HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            connection.setRequestMethod(<span class="string">&quot;POST&quot;</span>);</span><br><span class="line">            connection.setUseCaches(<span class="keyword">false</span>);</span><br><span class="line">            connection.setInstanceFollowRedirects(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//设置请求头</span></span><br><span class="line">            connection.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">            connection.connect();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// POST请求,包装成json数据</span></span><br><span class="line">            PrintWriter out = <span class="keyword">new</span> PrintWriter(<span class="keyword">new</span> OutputStreamWriter(connection.getOutputStream(),<span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">            JSONObject obj = <span class="keyword">new</span> JSONObject();</span><br><span class="line">            JSONObject obj1 = <span class="keyword">new</span> JSONObject();</span><br><span class="line">            JSONObject obj2 = <span class="keyword">new</span> JSONObject();</span><br><span class="line">            <span class="comment">//消息内容</span></span><br><span class="line">            obj2.put(<span class="string">&quot;content&quot;</span>,msg);</span><br><span class="line">            obj1.put(<span class="string">&quot;text&quot;</span>,obj2);</span><br><span class="line">            <span class="comment">//消息格式</span></span><br><span class="line">            obj1.put(<span class="string">&quot;msgtype&quot;</span>,<span class="string">&quot;text&quot;</span>);</span><br><span class="line"></span><br><span class="line">            obj.put(<span class="string">&quot;msg&quot;</span>, obj1);</span><br><span class="line">            <span class="comment">//是否给所有用户发送消息</span></span><br><span class="line">            obj.put(<span class="string">&quot;to_all_user&quot;</span>,to_all_user);</span><br><span class="line">            <span class="comment">//发现消息的程序id</span></span><br><span class="line">            obj.put(<span class="string">&quot;agent_id&quot;</span>,agent_id);</span><br><span class="line">            <span class="comment">//用户id</span></span><br><span class="line">            obj.put(<span class="string">&quot;userid_list&quot;</span>,userid);</span><br><span class="line"></span><br><span class="line">            out.println(obj);</span><br><span class="line">            out.flush();</span><br><span class="line">            out.close();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取响应</span></span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(connection.getInputStream()));</span><br><span class="line">            String lines;</span><br><span class="line">            StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> ((lines = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                lines = <span class="keyword">new</span> String(lines.getBytes(), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                sb.append(lines);</span><br><span class="line">            &#125;</span><br><span class="line">            reader.close();</span><br><span class="line">            <span class="comment">// 断开连接</span></span><br><span class="line">            connection.disconnect();</span><br><span class="line">            String obj11= String.valueOf(sb);</span><br><span class="line">            JSONObject jsonObject = JSONObject.parseObject(obj11);</span><br><span class="line">            errcode =jsonObject.getString(<span class="string">&quot;errcode&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;工作通知消息是以某个微应用的名义推送到员工的工作通知消息，例如生日祝福、入职提醒等。&lt;/p&gt;
&lt;p&gt;发送工作通知消息需要注意以下事项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;同一个应用相同消息的内容同一个用户一天只能接收一次。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同一个应用给同一个</summary>
      
    
    
    
    <category term="开发工具" scheme="https://www.zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="钉钉消息" scheme="https://www.zzy521.com/tags/%E9%92%89%E9%92%89%E6%B6%88%E6%81%AF/"/>
    
    <category term="java" scheme="https://www.zzy521.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>解决NavicatPremium连接SQLServer出现未发现数据源名称并且未指定默认驱动</title>
    <link href="https://www.zzy521.com/posts/21754c85.html"/>
    <id>https://www.zzy521.com/posts/21754c85.html</id>
    <published>2021-03-30T02:34:02.000Z</published>
    <updated>2021-03-30T02:49:07.850Z</updated>
    
    <content type="html"><![CDATA[<p><strong>报错：[navicat premium] [IM002] [Microsoft][ODBC 驱动程序管理器] 未发现数据源名称并且未指定默认驱动程序</strong></p><p>进入Navicat的安装目录,找到下边的文件,点击安装,重新打开数据库即可.</p><p><img src="../img/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20210330103656.png" alt="微信截图_20210330103656"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;报错：[navicat premium] [IM002] [Microsoft][ODBC 驱动程序管理器] 未发现数据源名称并且未指定默认驱动程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入Navicat的安装目录,找到下边的文件,点击安装,重新打开数据库即可.</summary>
      
    
    
    
    <category term="开发工具" scheme="https://www.zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="数据库" scheme="https://www.zzy521.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="SQLServer" scheme="https://www.zzy521.com/tags/SQLServer/"/>
    
  </entry>
  
  <entry>
    <title>Java中a=a++的问题</title>
    <link href="https://www.zzy521.com/posts/dad1e78f.html"/>
    <id>https://www.zzy521.com/posts/dad1e78f.html</id>
    <published>2021-03-23T09:41:17.000Z</published>
    <updated>2021-03-24T01:38:12.091Z</updated>
    
    <content type="html"><![CDATA[<h3 id="int-a-0-a-a"><a href="#int-a-0-a-a" class="headerlink" title="int a=0;a=a++;"></a>int a=0;a=a++;</h3><p>生成的字节码是：</p><p>0 iconst_0 —–0压入栈顶</p><p>1 istore_1 [a] —–栈顶值（0）存入局部变量1（a）</p><p>2 iload_1 [a] —–变量1的值压入栈顶（值为0）(a++效果)</p><p>3 iinc 1 1 [a] —–变量1自加（a++操作，自加后变量1的值为1）</p><p>6 istore_1 [a] —–将栈顶值（0）存入变量1（=操作）</p><p>a的值依次变化为：0-&gt;1-&gt;0</p><p>运算符的优先级中++和–仅次于(),而a++正常的逻辑是++在下一行才会生效,但这里使用的是同一个变量,所以这里是先把右边运算的结果(也就是a的原始值0)压入栈,然后再去计算a++,由于=的优先级是最低的,所以最后再将运算过的值赋值给左边的a</p><h3 id="int-a-0-a-a-1"><a href="#int-a-0-a-a-1" class="headerlink" title="int a=0;a=++a;"></a>int a=0;a=++a;</h3><p>生成的字节码是：</p><p>0 iconst_0 —–0压入栈顶</p><p>1 istore_1 [a] —–栈顶值（0）存入局部变量1（a）</p><p>2 iinc 1 1 [a] —–变量1自加（++a操作，自加后变量1的值为1）</p><p>5 iload_1 [a] —–变量1的值压入栈顶（值为1）(++a效果)</p><p>6 istore_1 [a] —–将栈顶值（1）存入变量1（=操作）</p><p>a的值依次变化为：0-&gt;1-&gt;1</p><h3 id="int-a-0-a-a-a"><a href="#int-a-0-a-a-a" class="headerlink" title="int a=0;a=(a++)+(++a);"></a>int a=0;a=(a++)+(++a);</h3><p>0 iconst_0 —–0压入栈顶</p><p>1 istore_1 [a] —–栈顶值（0）存入局部变量1（a）</p><p>2 iload_1 [a] —–变量1的值压入栈顶（值为0）(a++效果)</p><p>3 iinc 1 1 [a] —–变量1自加（a++操作，自加后变量1的值为1）</p><p>6 iinc 1 1 [a] —–变量1自加（++a操作，自加后变量1的值为2）</p><p>9 iload_1 [a] —–变量1的值压入栈顶（值为2）(++a效果)</p><p>10 iadd —–栈顶两值（0，2）相加（结果为2），并存入栈顶</p><p>11 istore_1 [a]—–将栈顶值（2）存入变量1（=操作）</p><p>a的值依次变化为：0-&gt;1-&gt;2-&gt;2</p><p>这里是先计算括号里边的值,左边的括号是先存a的值,然后压入栈用来计算之后的a++(由于有++才有了这一步),这时候左边的括号内容进行运算,然后a自加;右边括号先进行a自加然后进行运算,这时候右边括号的值为2,然后赋值给a</p><p><strong>总结:应该是++的优先级最高,所以a++是会先取a的值,然后a进行自加,然后使用取出的值进行运算,最后在进行=的赋值操作,所以是因为=的优先级最低,所以=的赋值覆盖了a自加的值.</strong></p><p><strong>但在实际编码的过程中还是尽量不要用不好理解的代码.</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;int-a-0-a-a&quot;&gt;&lt;a href=&quot;#int-a-0-a-a&quot; class=&quot;headerlink&quot; title=&quot;int a=0;a=a++;&quot;&gt;&lt;/a&gt;int a=0;a=a++;&lt;/h3&gt;&lt;p&gt;生成的字节码是：&lt;/p&gt;
&lt;p&gt;0 iconst_0 —</summary>
      
    
    
    
    <category term="Java" scheme="https://www.zzy521.com/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.zzy521.com/tags/Java/"/>
    
    <category term="a++" scheme="https://www.zzy521.com/tags/a/"/>
    
  </entry>
  
  <entry>
    <title>Java位运算</title>
    <link href="https://www.zzy521.com/posts/f789481e.html"/>
    <id>https://www.zzy521.com/posts/f789481e.html</id>
    <published>2021-03-23T02:05:47.000Z</published>
    <updated>2021-03-23T03:56:02.170Z</updated>
    
    <content type="html"><![CDATA[<h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><table><thead><tr><th>符号</th><th>描述</th><th align="left">运算规则</th></tr></thead><tbody><tr><td>&amp;</td><td>与</td><td align="left">两个位都为1时，结果才为1</td></tr><tr><td>|</td><td>或</td><td align="left">两个位都为0时，结果才为0</td></tr><tr><td>^</td><td>异或</td><td align="left">两个位相同为0，不同为1</td></tr><tr><td>~</td><td>取反</td><td align="left">0变1，1变0</td></tr><tr><td>&lt;&lt;</td><td>左移</td><td align="left">各二进位全部左移若干位，高位丢弃，低位补0.相当于乘2</td></tr><tr><td>&gt;&gt;</td><td>右移</td><td align="left">各二进位全部右移若干位，对无符号数，高位补0，有符号数，各编译器处理方法不一样，有的补符号位（算术右移），有的补0（逻辑右移）</td></tr></tbody></table><h2 id="位运算符常用方式"><a href="#位运算符常用方式" class="headerlink" title="位运算符常用方式"></a>位运算符常用方式</h2><h3 id="用位运算做加法"><a href="#用位运算做加法" class="headerlink" title="用位运算做加法"></a>用位运算做加法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//step1:异或查看两个数进行加法操作后的结果</span></span><br><span class="line"><span class="comment">//step2:与运算计算出想对应的位置的进位结果，然后左移一位</span></span><br><span class="line"><span class="comment">//b代表的是两数相加是否有进位，有的话就继续，没有的话就结束得出相加后的答案</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(b != <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = a ^ b;<span class="comment">//计算出相对应的位置相加后的结果</span></span><br><span class="line">            b = (a &amp; b) &lt;&lt; <span class="number">1</span>;<span class="comment">//计算出想对应的位置的进位，然后左移一位</span></span><br><span class="line">            a = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个其实可以简写成return (a^b)+((a&amp;b)&lt;&lt;1);</span></span><br></pre></td></tr></table></figure><h3 id="用位运算求平均数"><a href="#用位运算求平均数" class="headerlink" title="用位运算求平均数"></a>用位运算求平均数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">average</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (a &amp; b)+((a ^ b) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="原理"><a href="#原理" class="headerlink" title="原理:"></a>原理:</h4><p>每一位都0,1有两种情况,所以对应的每一位相加有3种情况</p><p>1.(0+0):0&amp;0和0^0都是0</p><p>2.(1+0)或(0+1):1&amp;0为0,1^0为1;而1+0为1,所以相加的结果刚好是与的结果,要求平均数所以右移一位,相当于除以二</p><p>3.(1+1):1&amp;1为1,1^1为0,而1+1为2,所以刚好是异或的结果刚好是平均数</p><h3 id="二进制中1的个数"><a href="#二进制中1的个数" class="headerlink" title="二进制中1的个数"></a>二进制中1的个数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">0</span>||a == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(a != <span class="number">0</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            a = a &amp; (a-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理:"></a>原理:</h4><p>a = a &amp; (a-1);</p><p>a异或a-1的结果刚好为a去掉二进制时的最后一位1的结果</p><h3 id="判断一个数的奇偶性"><a href="#判断一个数的奇偶性" class="headerlink" title="判断一个数的奇偶性"></a>判断一个数的奇偶性</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((a &amp; <span class="number">1</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;a是偶数&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;a是奇数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="两数的中位数"><a href="#两数的中位数" class="headerlink" title="两数的中位数"></a>两数的中位数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="comment">//通过位运算不会造成溢出</span></span><br><span class="line"><span class="keyword">int</span> mid = a - ((a - b) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不使用第三个变量的情况下交换两个变量的值"><a href="#不使用第三个变量的情况下交换两个变量的值" class="headerlink" title="不使用第三个变量的情况下交换两个变量的值"></a>不使用第三个变量的情况下交换两个变量的值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//原理：运用异或的特性</span></span><br><span class="line"><span class="comment">//A ^ B = C --&gt; C ^ A = B --&gt; C ^ B = A</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    x = x ^ y;</span><br><span class="line">    y = x ^ y;</span><br><span class="line">    x = x ^ y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="原理-2"><a href="#原理-2" class="headerlink" title="原理:"></a>原理:</h4><p><code>x = x ^ y;y = x ^ y;x = x ^ y;</code></p><p><code>z = x ^ y;y = z ^ y;x = z ^ y;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;位运算符&quot;&gt;&lt;a href=&quot;#位运算符&quot; class=&quot;headerlink&quot; title=&quot;位运算符&quot;&gt;&lt;/a&gt;位运算符&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;运算规</summary>
      
    
    
    
    <category term="Java" scheme="https://www.zzy521.com/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.zzy521.com/tags/Java/"/>
    
    <category term="位运算" scheme="https://www.zzy521.com/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Java类型转换</title>
    <link href="https://www.zzy521.com/posts/16b8fe02.html"/>
    <id>https://www.zzy521.com/posts/16b8fe02.html</id>
    <published>2021-03-20T07:27:14.000Z</published>
    <updated>2021-03-23T07:40:54.956Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Java一共有八种基本数据类型</strong></p><ul><li>整数类型<ul><li>1字节:byte<ul><li>表数范围为-128(-2<sup>7</sup>)~127(2<sup>7</sup>-1)</li></ul></li><li>2字节:short<ul><li>-32768(-2<sup>15</sup>)~32767 (2<sup>15</sup>-1)(大约为32万)</li></ul></li><li>4字节:int<ul><li>-2147483648(-2<sup>31</sup>)~2147483647(2<sup>31</sup>-1)(大约为21亿)</li></ul></li><li>8字节:long<ul><li>-2<sup>63</sup>~2<sup>63</sup>-1</li></ul></li></ul></li><li>字符类型<ul><li>2字节:char</li></ul></li><li>浮点类型<ul><li>4字节:float</li><li>8字节:double</li></ul></li><li>布尔类型<ul><li>boolean</li></ul></li></ul><h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><p>Java的所有字符型变量可以相互转换,如果系统支持把某种类型的变量直接赋值给另一种基本类型的变量,这种方式称为自动类型转换.当把一个表数范围小的数值或变量直接赋值给另一个表数范围大的变量时,系统可以进行自动类型转换;否则就需要强制转换.</p><p>支持自动类型转换的类型为:byte→short→int→long→float→double和char→int→long→float→double</p><p><strong><em>字符串和任何基本类型的值进行连接运算时,基本类型的值都会自动转化为字符串类型</em></strong></p><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><p>当需要把箭头右边的类型转换为箭头左边的类型时,必须进行强制类型转换强制类型转换的语法格式是:<code>(targetType)value</code>,强制类型转换的运算符是<code>()</code>.转换时要注意数据溢出问题.</p><h2 id="字符串类型与其他类型的转换"><a href="#字符串类型与其他类型的转换" class="headerlink" title="字符串类型与其他类型的转换"></a>字符串类型与其他类型的转换</h2><h4 id="其它类型向字符串的转换"><a href="#其它类型向字符串的转换" class="headerlink" title="其它类型向字符串的转换"></a>其它类型向字符串的转换</h4><ol><li>调用类的串转换方法:X.toString();</li><li>自动转换:X+“”;</li><li>使用String的方法:String.valueOf(X);</li></ol><h4 id="字符串作为值-向其它类型的转换"><a href="#字符串作为值-向其它类型的转换" class="headerlink" title="字符串作为值,向其它类型的转换"></a>字符串作为值,向其它类型的转换</h4><ol><li>先转换成相应的封装器实例,再调用对应的方法转换成其它类型</li></ol><p>例如，字符中“32.1”转换double型的值的格式为:new Float(“32.1”).doubleValue()。</p><p>也可以用:Double.valueOf(“32.1”).doubleValue()</p><ol start="2"><li>静态parseXXX方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span> b = Byte.parseByte( s );</span><br><span class="line"><span class="keyword">short</span> t = Short.parseShort( s );</span><br><span class="line"><span class="keyword">int</span> i = Integer.parseInt( s );</span><br><span class="line"><span class="keyword">long</span> l = Long.parseLong( s );</span><br><span class="line">Float f = Float.parseFloat( s );</span><br><span class="line">Double d = Double.parseDouble( s );</span><br></pre></td></tr></table></figure><ol start="3"><li>Character的getNumericValue(char ch)方法</li></ol><p>返回指定的 Unicode 字符表示的 <code>int</code> 值。</p><h2 id="其它实用数据类型转换"><a href="#其它实用数据类型转换" class="headerlink" title="其它实用数据类型转换"></a>其它实用数据类型转换</h2><h4 id="Date类与其它数据类型的相互转换"><a href="#Date类与其它数据类型的相互转换" class="headerlink" title="Date类与其它数据类型的相互转换"></a>Date类与其它数据类型的相互转换</h4><p>整型和Date类之间并不存在直接的对应关系，只是你可以使用int型为分别表示年、月、日、时、分、秒，这样就在两者之间建立了一个对应关系，在作这种转换时，你可以使用<strong>Date类构造函数的三种形式</strong>：</p><p>①Date(int year, int month, int date)：以int型表示年、月、日</p><p>②Date(int year, int month, int date, int hrs, int min)：以int型表示年、月、日、时、分</p><p>③Date(int year, int month, int date, int hrs, int min, int sec)：以int型表示年、月、日、时、</p><p>分、秒</p><p>在长整型和Date类之间有一个很有趣的对应关系，就是将一个时间表示为距离格林尼治标准时间1970年1月1日0时0分0秒的毫秒数。对于这种对应关系，Date类也有其相应的构造函数：Date(long date)。</p><p>获取Date类中的年、月、日、时、分、秒以及星期你可以使用Date类的getYear()、getMonth()、getDate()、getHours()、getMinutes()、getSeconds()、getDay()方法，你也可以将其理解为将Date类转换成int。</p><p>而Date类的getTime()方法可以得到我们前面所说的一个时间对应的长整型数，与包装类一样，Date类也有一个toString()方法可以将其转换为String类。</p><p>有时我们希望得到Date的特定格式，例如20020324，我们可以使用以下方法，首先在文件开始引入，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line">java.util.Date date = <span class="keyword">new</span> java.util.Date();</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果希望得到YYYYMMDD的格式</span></span><br><span class="line"></span><br><span class="line">SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyyMMDD&quot;</span>);</span><br><span class="line"></span><br><span class="line">String dateFormat=sdf.format(date);</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果希望分开得到年，月，日</span></span><br><span class="line"></span><br><span class="line">SimpleDateFormat sy=newSimpleDateFormat(<span class="string">&quot;yyyy&quot;</span>);</span><br><span class="line"></span><br><span class="line">SimpleDateFormat sm=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;MM&quot;</span>);</span><br><span class="line"></span><br><span class="line">SimpleDateFormat sd=<span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;dd&quot;</span>);</span><br><span class="line"></span><br><span class="line">String syear=sy.format(date);</span><br><span class="line"></span><br><span class="line">String smon=sm.format(date);</span><br><span class="line"></span><br><span class="line">String sday=sd.format(date);</span><br></pre></td></tr></table></figure><h4 id="js中将Data转换成String类型"><a href="#js中将Data转换成String类型" class="headerlink" title="js中将Data转换成String类型"></a>js中将Data转换成String类型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对Date的扩展，将 Date转化为指定格式的String</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 月(M)、日(d)、12小时(h)、24小时(H)、分(m)、秒(s)、周(E)、季度(q) 可以用 1-2个占位符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3位的数字)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//eg:</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-MM-dd hh:mm:ss.S&quot;</span>) ==&gt;<span class="number">2006</span>-<span class="number">07</span>-<span class="number">02</span> <span class="number">08</span>:<span class="number">09</span>:<span class="number">04</span><span class="number">.423</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-MM-dd E HH:mm:ss&quot;</span>) ==&gt;<span class="number">2009</span>-<span class="number">03</span>-<span class="number">10</span> 二 <span class="number">20</span>:<span class="number">09</span>:<span class="number">04</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-MM-dd EE hh:mm:ss&quot;</span>) ==&gt;<span class="number">2009</span>-<span class="number">03</span>-<span class="number">10</span> 周二 <span class="number">08</span>:<span class="number">09</span>:<span class="number">04</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-MM-dd EEE hh:mm:ss&quot;</span>)==&gt; <span class="number">2009</span>-<span class="number">03</span>-<span class="number">10</span> 星期二 <span class="number">08</span>:<span class="number">09</span>:<span class="number">04</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Date</span>()).pattern(<span class="string">&quot;yyyy-M-d h:m:s.S&quot;</span>) ==&gt;<span class="number">2006</span>-<span class="number">7</span>-<span class="number">2</span> <span class="number">8</span>:<span class="number">9</span>:<span class="number">4.</span></span><br></pre></td></tr></table></figure><h4 id="字符型转时间型"><a href="#字符型转时间型" class="headerlink" title="字符型转时间型"></a>字符型转时间型</h4><p>（2005-10-1）</p><p>reportdate_str ＝ “2005-10-01”；</p><p>reportdate_str ＝ reportdate_str ＋ “ 00:00:00.0”</p><p>reportdate = <strong>java.sql.Timestamp.valueOf(reportdate_str);</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Java一共有八种基本数据类型&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整数类型&lt;ul&gt;
&lt;li&gt;1字节:byte&lt;ul&gt;
&lt;li&gt;表数范围为-128(-2&lt;sup&gt;7&lt;/sup&gt;)~127(2&lt;sup&gt;7&lt;/sup&gt;-1)&lt;/li&gt;
&lt;/ul&gt;
&lt;/l</summary>
      
    
    
    
    <category term="Java" scheme="https://www.zzy521.com/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.zzy521.com/tags/Java/"/>
    
    <category term="类型转换" scheme="https://www.zzy521.com/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python处理Excel文件</title>
    <link href="https://www.zzy521.com/posts/6c0fc8c8.html"/>
    <id>https://www.zzy521.com/posts/6c0fc8c8.html</id>
    <published>2021-02-25T03:42:02.000Z</published>
    <updated>2021-03-23T03:33:02.657Z</updated>
    
    <content type="html"><![CDATA[<p><strong>做了一个从Excel中筛选需要的列和行；并根据内容不同放到不同的Excel中的程序</strong></p><h2 id="导入需要的包"><a href="#导入需要的包" class="headerlink" title="导入需要的包"></a>导入需要的包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> xlrd <span class="keyword">import</span> xldate_as_tuple</span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> filedialog</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br></pre></td></tr></table></figure><h2 id="选取Excel文件并获取文件名和文件路径"><a href="#选取Excel文件并获取文件名和文件路径" class="headerlink" title="选取Excel文件并获取文件名和文件路径"></a>选取Excel文件并获取文件名和文件路径</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> filedialog</span><br><span class="line">tkinter.Tk().withdraw()  <span class="comment"># 使用tk选择文件时会出现一个框框，不影响使用但会看着很难受，所以将Tkinter.Tk()实例隐藏</span></span><br><span class="line">Filepath = filedialog.askopenfilename(title=<span class="string">u&#x27;选择文件&#x27;</span>)<span class="comment">#获取文件路径并将选择框标题设置为选择文件</span></span><br><span class="line">Filename = os.path.basename(Filepath)<span class="comment">#根据文件路径获取文件名，后边我生成新的文件需要根据选择的文件来命名</span></span><br><span class="line"><span class="keyword">if</span> Filepath == <span class="string">&#x27;&#x27;</span>:<span class="comment">#如果弹出的文件选择框未选择就关闭会导致文件路径为空，下边的代码执行会出错，所以路径为空直接结束程序</span></span><br><span class="line">    sys.exit()</span><br></pre></td></tr></table></figure><h2 id="读取Excel文件"><a href="#读取Excel文件" class="headerlink" title="读取Excel文件"></a>读取Excel文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;读取工作表&#x27;&#x27;&#x27;</span></span><br><span class="line">data = xlrd.open_workbook(Filepath)<span class="comment">#根据上边的路径读取Excel文件</span></span><br><span class="line">table = data.sheets()[<span class="number">0</span>]<span class="comment">#用索引方式获取第一个sheet</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;总行数&#x27;&#x27;&#x27;</span></span><br><span class="line">nrows = table.nrows</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;总列数&#x27;&#x27;&#x27;</span></span><br><span class="line">ncols = table.ncols</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;获取第二行的列名称&#x27;&#x27;&#x27;</span></span><br><span class="line">columnName = table.row_values(<span class="number">1</span>)<span class="comment">#excel中第二行为列名，用列表记录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;获取需要的列的字典&#x27;&#x27;&#x27;</span></span><br><span class="line">saveColumn = [<span class="string">&#x27;任务号&#x27;</span>, <span class="string">&#x27;物料编码&#x27;</span>, <span class="string">&#x27;零件图号&#x27;</span>, <span class="string">&#x27;数量&#x27;</span>, <span class="string">&#x27;材质&#x27;</span>, <span class="string">&#x27;尺寸&#x27;</span>, <span class="string">&#x27;工序&#x27;</span>, <span class="string">&#x27;完工日期&#x27;</span>, <span class="string">&#x27;备料日期&#x27;</span>, <span class="string">&#x27;成型日期&#x27;</span>, <span class="string">&#x27;仓库&#x27;</span>, <span class="string">&#x27;定额&#x27;</span>, <span class="string">&#x27;工段&#x27;</span>, <span class="string">&#x27;组件&#x27;</span>, <span class="string">&#x27;外协&#x27;</span>, <span class="string">&#x27;批次&#x27;</span>]<span class="comment">#需要保存的列的名称</span></span><br><span class="line">columnNameDictionary = &#123;&#125;<span class="comment">#声明一个字典来存储需要的列在excel中对应的列号</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">    <span class="keyword">if</span> columnName[i] <span class="keyword">in</span> saveColumn:<span class="comment">#如果第二列中的列名在需要保存的列的列表中；则将列名和列号存到字典中</span></span><br><span class="line">        columnNameDictionary[columnName[i]] = i</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;获取需要的数据列数据，去掉不需要的列数据&#x27;&#x27;&#x27;</span></span><br><span class="line">dataContent = []</span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> columnNameDictionary.items():<span class="comment">#根据列名字典中列名对应的数据列去获取数据内容</span></span><br><span class="line">    dataContent.append(table.col_values(value, start_rowx=<span class="number">1</span>, end_rowx=nrows))</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;去掉不需要的行数据,同时将列表存储数据的方式由列转为行&#x27;&#x27;&#x27;</span></span><br><span class="line">ncols = <span class="built_in">len</span>(dataContent)  <span class="comment"># 列数量----更新行列值</span></span><br><span class="line">nrows = <span class="built_in">len</span>(dataContent[<span class="number">0</span>])  <span class="comment"># 行数量</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;需要将材质列等于——的值整行删除&#x27;&#x27;&#x27;</span></span><br><span class="line">material = <span class="number">0</span>  <span class="comment"># 材质的列号</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nrows):  <span class="comment"># 找到材质的列号</span></span><br><span class="line">    <span class="keyword">if</span> dataContent[i][<span class="number">0</span>] == <span class="string">&#x27;材质&#x27;</span>:</span><br><span class="line">        material = i</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">finalDataContent = []<span class="comment">#用来存储最终需要的行列数据，按行存储</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nrows):<span class="comment">#i为行数</span></span><br><span class="line">    temp = []<span class="comment">#暂存数据的列表</span></span><br><span class="line">    <span class="keyword">if</span> dataContent[material][i] != <span class="string">&#x27;——&#x27;</span>:<span class="comment">#如果材质不等于——则将第i行数据读出</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">            temp.append(dataContent[j][i])</span><br><span class="line">        finalDataContent.append(temp)<span class="comment">#将读到的数据保存</span></span><br><span class="line">        temp = []</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;更新列名字典和行列数&#x27;&#x27;&#x27;</span></span><br><span class="line">ncols = <span class="built_in">len</span>(finalDataContent[<span class="number">0</span>])  <span class="comment"># 列数量</span></span><br><span class="line">nrows = <span class="built_in">len</span>(finalDataContent)  <span class="comment"># 行数量</span></span><br><span class="line">columnNameDictionary.clear()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">    columnNameDictionary[finalDataContent[<span class="number">0</span>][i]] = i</span><br></pre></td></tr></table></figure><h2 id="修改Excel内需要修改的数据"><a href="#修改Excel内需要修改的数据" class="headerlink" title="修改Excel内需要修改的数据"></a>修改Excel内需要修改的数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;修改数据内容;按外协厂家进行分组-----为了减少循环次数放到了一块&#x27;&#x27;&#x27;</span></span><br><span class="line">outsourcSet = <span class="built_in">set</span>()  <span class="comment"># 创建外协集合</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nrows):</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">0</span>:  <span class="comment"># 第一行为列名，从第二行开始遍历 “零件图号”列将所有字母改为小写、“.”改为“-”、“艺”改为“y”</span></span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]] = finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]].lower()</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]] = finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]].replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]] = finalDataContent[i][columnNameDictionary[<span class="string">&#x27;零件图号&#x27;</span>]].replace(<span class="string">&#x27;艺&#x27;</span>, <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;数量&#x27;</span>]] = <span class="built_in">int</span>(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;数量&#x27;</span>]])</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;完工日期&#x27;</span>]] = datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;完工日期&#x27;</span>]], <span class="number">0</span>)).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;备料日期&#x27;</span>]] = datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;备料日期&#x27;</span>]], <span class="number">0</span>)).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">        finalDataContent[i][columnNameDictionary[<span class="string">&#x27;成型日期&#x27;</span>]] = datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;成型日期&#x27;</span>]], <span class="number">0</span>)).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">        outsourcSet.add(finalDataContent[i][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]])</span><br><span class="line"></span><br><span class="line">outsourc = <span class="built_in">list</span>(outsourcSet)<span class="comment">#得到的分为不同文件的厂家名</span></span><br></pre></td></tr></table></figure><p><strong><code>str.lower()</code>是将字符串的字母全转为小写</strong></p><p><strong><code>str.replace(&#39;艺&#39;, &#39;y&#39;)</code>是将字符串的“艺”都转为“y”</strong></p><p><code>finalDataContent[i][columnNameDictionary[&#39;完工日期&#39;]] = datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[&#39;完工日期&#39;]], 0)).strftime(&#39;%Y-%m-%d&#39;)</code></p><p><code>finalDataContent[i][columnNameDictionary[&#39;完工日期&#39;]]</code>的 值在读取过后被转为了数值，应该展示为日期，所以使用</p><p><code>datetime(*xldate_as_tuple(finalDataContent[i][columnNameDictionary[&#39;完工日期&#39;]], 0)).strftime(&#39;%Y-%m-%d&#39;)</code></p><p>来转为日期型并重新赋值给它</p><p><strong>将<code>data</code>由读出来的数值转为日期的方法为<code>datetime(*xldate_as_tuple(data, 0)).strftime(&#39;%Y-%m-%d&#39;)</code></strong></p><h2 id="将数据存储为Excel文件"><a href="#将数据存储为Excel文件" class="headerlink" title="将数据存储为Excel文件"></a>将数据存储为Excel文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置样式</span></span><br><span class="line"><span class="comment"># VERT_TOP = 0x00       上端对齐</span></span><br><span class="line"><span class="comment"># VERT_CENTER = 0x01    居中对齐（垂直方向上）</span></span><br><span class="line"><span class="comment"># VERT_BOTTOM = 0x02    低端对齐</span></span><br><span class="line"><span class="comment"># HORZ_LEFT = 0x01      左端对齐</span></span><br><span class="line"><span class="comment"># HORZ_CENTER = 0x02    居中对齐（水平方向上）</span></span><br><span class="line"><span class="comment"># HORZ_RIGHT = 0x03     右端对齐</span></span><br><span class="line">style = xlwt.XFStyle()</span><br><span class="line">al = xlwt.Alignment()</span><br><span class="line">al.horz = <span class="number">0x02</span>  <span class="comment"># 设置水平居中</span></span><br><span class="line">al.vert = <span class="number">0x01</span>  <span class="comment"># 设置垂直居中</span></span><br><span class="line">style.alignment = al</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(outsourc)):</span><br><span class="line">    name = Filepath.replace(<span class="string">&#x27;★模板★&#x27;</span>, <span class="string">&#x27;【&#x27;</span> + outsourc[i] + <span class="string">&#x27;】&#x27;</span>)</span><br><span class="line">    <span class="comment"># 创建excel文件</span></span><br><span class="line">    filename = xlwt.Workbook()</span><br><span class="line">    <span class="comment"># 给工作表命名</span></span><br><span class="line">    sheet = filename.add_sheet(data.sheet_names()[<span class="number">0</span>])</span><br><span class="line">    a = b = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(nrows):</span><br><span class="line">        style2 = xlwt.easyxf(<span class="string">&#x27;font:height 360;&#x27;</span>)  <span class="comment"># 18pt,类型小初的字号</span></span><br><span class="line">        row = sheet.row(j)</span><br><span class="line">        row.set_style(style2)</span><br><span class="line">        <span class="keyword">if</span> j == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">                sheet.write(a, b, finalDataContent[j][k], style)</span><br><span class="line">                b += <span class="number">1</span></span><br><span class="line">            b = <span class="number">0</span></span><br><span class="line">            a += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> finalDataContent[j][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]] == outsourc[i]:</span><br><span class="line">                finalDataContent[j][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]] = <span class="string">&#x27;外协&#x27;</span> + finalDataContent[j][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]]</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">                    sheet.write(a, b, finalDataContent[j][k], style)</span><br><span class="line">                    b += <span class="number">1</span></span><br><span class="line">                b = <span class="number">0</span></span><br><span class="line">                a += <span class="number">1</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;设置每一列的宽度&#x27;&#x27;&#x27;</span></span><br><span class="line">    sheet.col(<span class="number">0</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">1</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">2</span>).width = <span class="number">256</span> * <span class="number">20</span></span><br><span class="line">    sheet.col(<span class="number">3</span>).width = <span class="number">256</span> * <span class="number">5</span></span><br><span class="line">    sheet.col(<span class="number">4</span>).width = <span class="number">256</span> * <span class="number">10</span></span><br><span class="line">    sheet.col(<span class="number">5</span>).width = <span class="number">256</span> * <span class="number">20</span></span><br><span class="line">    sheet.col(<span class="number">6</span>).width = <span class="number">256</span> * <span class="number">20</span></span><br><span class="line">    sheet.col(<span class="number">7</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">8</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">9</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">10</span>).width = <span class="number">256</span> * <span class="number">10</span></span><br><span class="line">    sheet.col(<span class="number">11</span>).width = <span class="number">256</span> * <span class="number">10</span></span><br><span class="line">    sheet.col(<span class="number">12</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">13</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">14</span>).width = <span class="number">256</span> * <span class="number">14</span></span><br><span class="line">    sheet.col(<span class="number">15</span>).width = <span class="number">256</span> * <span class="number">20</span></span><br><span class="line">    filename.save(name)</span><br></pre></td></tr></table></figure><h4 id="设置单元格数据居中的方式"><a href="#设置单元格数据居中的方式" class="headerlink" title="设置单元格数据居中的方式"></a>设置单元格数据居中的方式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置样式</span></span><br><span class="line"><span class="comment"># VERT_TOP = 0x00       上端对齐</span></span><br><span class="line"><span class="comment"># VERT_CENTER = 0x01    居中对齐（垂直方向上）</span></span><br><span class="line"><span class="comment"># VERT_BOTTOM = 0x02    低端对齐</span></span><br><span class="line"><span class="comment"># HORZ_LEFT = 0x01      左端对齐</span></span><br><span class="line"><span class="comment"># HORZ_CENTER = 0x02    居中对齐（水平方向上）</span></span><br><span class="line"><span class="comment"># HORZ_RIGHT = 0x03     右端对齐</span></span><br><span class="line"></span><br><span class="line">style = xlwt.XFStyle()</span><br><span class="line">al = xlwt.Alignment()</span><br><span class="line">al.horz = <span class="number">0x02</span>  <span class="comment"># 设置水平居中</span></span><br><span class="line">al.vert = <span class="number">0x01</span>  <span class="comment"># 设置垂直居中</span></span><br><span class="line">style.alignment = al</span><br><span class="line">sheet.write(a, b, finalDataContent[j][k], style)<span class="comment">#在第a行第b列填入finalDataContent[j][k]的数据，格式为style</span></span><br></pre></td></tr></table></figure><h4 id="设置单元格高度"><a href="#设置单元格高度" class="headerlink" title="设置单元格高度"></a>设置单元格高度</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">style2 = xlwt.easyxf(<span class="string">&#x27;font:height 360;&#x27;</span>)  <span class="comment"># 18pt,类型小初的字号</span></span><br><span class="line">        row = sheet.row(j)<span class="comment">#在写第j行的时候设置它的高度</span></span><br><span class="line">        row.set_style(style2)</span><br></pre></td></tr></table></figure><h4 id="设置单元格高度-1"><a href="#设置单元格高度-1" class="headerlink" title="设置单元格高度"></a>设置单元格高度</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sheet.col(<span class="number">0</span>).width = <span class="number">256</span> * <span class="number">14</span><span class="comment">#设置单元格第1列的宽度；256为一个字符的宽度</span></span><br></pre></td></tr></table></figure><h2 id="将数据存储为txt文件"><a href="#将数据存储为txt文件" class="headerlink" title="将数据存储为txt文件"></a>将数据存储为txt文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(outsourc)):</span><br><span class="line">    name = Filepath.replace(<span class="string">&#x27;★模板★.xls&#x27;</span>, <span class="string">&#x27;【&#x27;</span> + outsourc[i] + <span class="string">&#x27;】.txt&#x27;</span>)</span><br><span class="line">    txtData = <span class="built_in">open</span>(name, <span class="string">&#x27;w&#x27;</span>)<span class="comment">#以读方式打开，如果有数据会被清空</span></span><br><span class="line">    count = <span class="number">0</span>  <span class="comment"># 记录行号</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(nrows):</span><br><span class="line">        <span class="keyword">if</span> j &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> finalDataContent[j][columnNameDictionary[<span class="string">&#x27;外协&#x27;</span>]] == <span class="string">&#x27;外协&#x27;</span> + outsourc[i]:</span><br><span class="line">                <span class="keyword">if</span> count != <span class="number">0</span>:<span class="comment">#如果不是第一行则先加换行再输出；需求最后没有空行，最后不能换行，所以换行在写每一行之前</span></span><br><span class="line">                    print(<span class="string">&#x27;&#x27;</span>, file=txtData)<span class="comment">#print打印会默认换行，所以直接打印空字符</span></span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(ncols):</span><br><span class="line">                    print(finalDataContent[j][k], end=<span class="string">&#x27;\t&#x27;</span>, file=txtData)<span class="comment">#写入每个数据后用制表符分隔</span></span><br><span class="line">    txtData.close()<span class="comment">#关闭文件对象</span></span><br></pre></td></tr></table></figure><h2 id="完成后弹出提示框"><a href="#完成后弹出提示框" class="headerlink" title="完成后弹出提示框"></a>完成后弹出提示框</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">messagebox.showinfo(&quot;提示&quot;, &quot;文件分解完成&quot;)</span><br></pre></td></tr></table></figure><h2 id="打包文件"><a href="#打包文件" class="headerlink" title="打包文件"></a>打包文件</h2><p>安装pyinstaller<code>pip install pyinstaller</code></p><p>打包<code>pyinstaller -F -w PlansToBreakUp.py</code> </p><p>需要在文件在目录下运行</p><p><code>-w</code>是去掉运行时的黑框</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;做了一个从Excel中筛选需要的列和行；并根据内容不同放到不同的Excel中的程序&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;导入需要的包&quot;&gt;&lt;a href=&quot;#导入需要的包&quot; class=&quot;headerlink&quot; title=&quot;导入需要的包&quot;&gt;&lt;/a&gt;导入</summary>
      
    
    
    
    <category term="Python" scheme="https://www.zzy521.com/categories/Python/"/>
    
    
    <category term="python" scheme="https://www.zzy521.com/tags/python/"/>
    
    <category term="excel" scheme="https://www.zzy521.com/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>服务器添加EOS的workspace功能</title>
    <link href="https://www.zzy521.com/posts/24cd4f39.html"/>
    <id>https://www.zzy521.com/posts/24cd4f39.html</id>
    <published>2021-02-20T01:13:00.000Z</published>
    <updated>2021-02-20T01:32:31.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-复制文件到服务器"><a href="#1-复制文件到服务器" class="headerlink" title="1.复制文件到服务器"></a>1.复制文件到服务器</h2><p>将Windows下边的<code>workspace</code>文件夹拷贝到服务器tomcat目录下的<code>webapps</code>文件夹中 ，<code>workspace</code>文件夹为EOS安装路径下的<code>\apache-tomcat-7.0.54\webapps\workspace</code></p><h2 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h2><p>这个时候就可以访问登录界面但实际无法登录，需要修改xml文件中的IP地址的端口号</p><p>修改<code>uddi-address.xml</code>文件中的内容，文件地址为服务器tomcat安装目录下的<code>apache-tomcat-7.0.54/webapps/workspace/WEB-INF/classes/uddi-address.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uddi__address</span> <span class="attr">id</span>=<span class="string">&quot;default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>localserver<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logicName</span>&gt;</span>default<span class="tag">&lt;/<span class="name">logicName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>remote<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>uddi-config.xml at &quot; Work Space&quot;<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiHost</span>&gt;</span>10.8.32.159<span class="tag">&lt;/<span class="name">uddiHost</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiPort</span>&gt;</span>8090<span class="tag">&lt;/<span class="name">uddiPort</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiWebContext</span>&gt;</span>default<span class="tag">&lt;/<span class="name">uddiWebContext</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiUserID</span>&gt;</span>bps<span class="tag">&lt;/<span class="name">uddiUserID</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiPassword</span>&gt;</span>000000<span class="tag">&lt;/<span class="name">uddiPassword</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uddiAdminPort</span>&gt;</span>6200<span class="tag">&lt;/<span class="name">uddiAdminPort</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">uddi__address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">uddi__address__list</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将<code>uddiHost</code>修改为服务器ip地址，将<code>uddiPort</code>修改为服务器tomcat的端口号</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-复制文件到服务器&quot;&gt;&lt;a href=&quot;#1-复制文件到服务器&quot; class=&quot;headerlink&quot; title=&quot;1.复制文件到服务器&quot;&gt;&lt;/a&gt;1.复制文件到服务器&lt;/h2&gt;&lt;p&gt;将Windows下边的&lt;code&gt;workspace&lt;/code&gt;文件夹拷贝</summary>
      
    
    
    
    <category term="服务器" scheme="https://www.zzy521.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="EOS" scheme="https://www.zzy521.com/tags/EOS/"/>
    
    <category term="Linux" scheme="https://www.zzy521.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>将Java程序打包为exe文件并和jre一起打包为安装包</title>
    <link href="https://www.zzy521.com/posts/eeae6a0e.html"/>
    <id>https://www.zzy521.com/posts/eeae6a0e.html</id>
    <published>2021-02-19T03:36:00.000Z</published>
    <updated>2021-02-25T09:15:06.169Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-将Java程序导出的jar文件打包为exe文件"><a href="#1-将Java程序导出的jar文件打包为exe文件" class="headerlink" title="1.将Java程序导出的jar文件打包为exe文件"></a>1.将Java程序导出的jar文件打包为exe文件</h2><p>1.1打开安装好的exe4j软件，首先看到的是一个欢迎界面，直接【next】就可以了</p><img src="../img/1.png" alt="1" style="zoom:67%;" /><p>1.2在第二步中我们选择【JAR in EXE mode】，然后【next】</p><img src="../img/2.png" alt="img" style="zoom:67%;" /><p>1.3.第三步中需要输入程序的缩写名字和指明输出目录，就是程序的保存目录，按照自己的情况设置就行，没啥特别要求，然后【next】</p><img src="../img/3.png" alt="img" style="zoom: 67%;" /><p>1.4.需要指定程序的名字，设置程序的图标，注意，程序图标要用ico格式的图片</p><img src="../img/4.png" alt="img" style="zoom:67%;" /><p>1.5.然后我们在左边的菜单栏中选择【32 bit or 64 bit】，勾上【Generate 64 bit executeable】，不勾选为32位，勾选为64位</p><img src="../img/5.png" alt="img" style="zoom:67%;" /><p>1.6.添加我们的jar包，点击右边绿色的 “+”号，然后选择【Archive】，打开浏览目录，找到我们的jar包，然后选择【打开】，【ok】</p><img src="../img/6.png" alt="img" style="zoom:67%;" /><img src="../img/7.png" alt="img" style="zoom:67%;" /><p>1.7.然后选择主类，在Main class后面，选择【浏览】，找到主类，添加上主类，然后【next】</p><img src="../img/8.png" alt="img" style="zoom:67%;" /><img src="../img/9.png" alt="img" style="zoom:67%;" /><p>1.8.设置JRE的最小最高版本，我们根据自己的情况设置，小版本设置成1.5，大版本设置成1.8，就行</p><img src="../img/10.png" alt="img" style="zoom:67%;" /><p>1.9.然后点击【Advanced Options】，选择【Search sequence】，将我们的JRE添加到软件中，这样的话，我们的代码可以在别的没有安装Java环境的电脑上运行；点击右边的添加，选择【Directory】，然后选择【浏览】，找到我们的JRE，然后添加（添加之后把前面的删掉然后加一个点，这里我写的是.\jre1.8.0_73，使用相对路径，之后把生成的程序和jre的文件夹拷贝到同一个文件夹下）</p><img src="../img/11.png" alt="img" style="zoom:67%;" /><p>1.10.然后点击左侧的【Preferred VM】，选择【Client hotspot VM】，然后【next】</p><img src="../img/12.png" alt="img" style="zoom:67%;" /><p>1.11.其余的步骤直接默认就行了，这样生成的exe文件就能正常运行了！</p><h2 id="2-将jre环境和exe文件一起打包为程序安装包"><a href="#2-将jre环境和exe文件一起打包为程序安装包" class="headerlink" title="2.将jre环境和exe文件一起打包为程序安装包"></a>2.将jre环境和exe文件一起打包为程序安装包</h2><p>需要安装<a href="https://www.baidu.com/link?url=Bejop3spAjw-LqNUd2iZw9OGTAIwdrhK3o32ssHxwdFlOlv6ZNhpIq6IGkNgn1h5vPOIPiEeR1CDMjUMhwF0rK&wd=&eqid=afdafbb7000c18bc00000004602f5369"><em>Inno Setup</em></a></p><p>菜单栏→新建，打开脚本向导</p><img src="../img/2021-02-19_140259.png" alt="2021-02-19_140259" style="zoom: 50%;" /><p>直接下一步</p><img src="../img/QQ截图20210219140645.png" alt="QQ截图20210219140645" style="zoom: 50%;" /><p>填写应用程序名称和应用程序版本，其他两个可以选填。</p><img src="../img/QQ截图20210219140927.png" alt="QQ截图20210219140927" style="zoom:50%;" /><p>这一步可以默认，应用程序所在的文件夹默认为上一步填的应用程序名称</p><img src="../img/QQ截图20210219142039.png" alt="QQ截图20210219142039" style="zoom:50%;" /><p>主执行文件选择用exe4j打包好的那个exe文件，然后点击添加文件夹选中jre文件夹，下一步</p><img src="../img/QQ截图20210219142521.png" alt="QQ截图20210219142521" style="zoom:50%;" /><p>直接下一步</p><img src="../img/QQ截图20210219145453.png" alt="QQ截图20210219145453" style="zoom:50%;" /><p>接着下一步</p><img src="../img/QQ截图20210219145541.png" alt="QQ截图20210219145541" style="zoom:50%;" /><p>继续下一步</p><img src="../img/QQ截图20210219145557.png" alt="QQ截图20210219145557" style="zoom:50%;" /><p>还是下一步</p><img src="../img/QQ截图20210219145610.png" alt="QQ截图20210219145610" style="zoom:50%;" /><p>选择安装程序的保存位置、安装程序文件名、安装程序的图标。安装密码为可选项</p><img src="../img/QQ截图20210219145922.png" alt="QQ截图20210219145922" style="zoom:50%;" /><p>继续下一步</p><img src="../img/QQ截图20210219150133.png" alt="QQ截图20210219150133" style="zoom:50%;" /><p>点击完成</p><img src="../img/QQ截图20210219150217.png" alt="QQ截图20210219150217" style="zoom:50%;" /><p>在生成的脚本中找到**[Files]<strong>,然后找到刚刚添加的文件夹路径，在文件加路径后的<code>&#123;app&#125;</code>后边加上<code>\jre</code>，jre就是程序安装后在安装路径下生成的文件夹名称，</strong>这里文件夹的名称与上边1.9中填写的路径要保持一致**，如果上边是跟我的文件夹名一样的，那这里也要写为.\jre1.8.0_73。</p><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20210219150416.png" alt="QQ截图20210219150416"></p><p>然后在菜单栏点击构建→编译即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-将Java程序导出的jar文件打包为exe文件&quot;&gt;&lt;a href=&quot;#1-将Java程序导出的jar文件打包为exe文件&quot; class=&quot;headerlink&quot; title=&quot;1.将Java程序导出的jar文件打包为exe文件&quot;&gt;&lt;/a&gt;1.将Java程序导出</summary>
      
    
    
    
    <category term="开发工具" scheme="https://www.zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Java" scheme="https://www.zzy521.com/tags/Java/"/>
    
    <category term="exe" scheme="https://www.zzy521.com/tags/exe/"/>
    
  </entry>
  
  <entry>
    <title>EOS中Restful服务的开发与调用</title>
    <link href="https://www.zzy521.com/posts/5a3d390e.html"/>
    <id>https://www.zzy521.com/posts/5a3d390e.html</id>
    <published>2021-01-20T09:21:05.000Z</published>
    <updated>2021-02-25T09:21:15.115Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发Restful服务"><a href="#开发Restful服务" class="headerlink" title="开发Restful服务"></a>开发Restful服务</h2><h3 id="创建服务实现类"><a href="#创建服务实现类" class="headerlink" title="创建服务实现类"></a>创建服务实现类</h3><p>创建一个class，添加下列注解和代码，配置接口访问的入口，需要注意的是Path中的路径必须是与web.xml中resteasyservlet配置的相同，否则将无法访问到接口，此处我们配置在/rest/services下</p><img src="../img/image-20210220101202007.png" alt="image-20210220101202007" style="zoom:50%;" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xcmg.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.POST;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.PathParam;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Produces;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.eos.common.connection.DataSourceHelper;</span><br><span class="line"><span class="keyword">import</span> com.eos.engine.component.ILogicComponent;</span><br><span class="line"><span class="keyword">import</span> com.eos.foundation.data.DataObjectUtil;</span><br><span class="line"><span class="keyword">import</span> com.eos.workflow.api.BPSServiceClientFactory;</span><br><span class="line"><span class="keyword">import</span> com.primeton.components.rest.annotation.JSONParam;</span><br><span class="line"><span class="keyword">import</span> com.primeton.ext.engine.component.LogicComponentFactory;</span><br><span class="line"><span class="keyword">import</span> com.xcmg.getRsInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> commonj.sdo.DataObject;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Path(&quot;/rest/services/RoleService&quot;)</span></span><br><span class="line"><span class="meta">@Produces(&#123;&quot;application/json&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProcessStartService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@POST</span></span><br><span class="line"><span class="meta">@Path(&quot;/addProcess&quot;)</span></span><br><span class="line"><span class="comment">//新增数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span>  String  <span class="title">addRole</span><span class="params">(<span class="meta">@JSONParam(&quot;role&quot;)</span>DataObject[] role)</span><span class="keyword">throws</span> Throwable</span>&#123;</span><br><span class="line"><span class="comment">//获取后台返回值</span></span><br><span class="line">Map ms= <span class="keyword">new</span> HashMap();</span><br><span class="line"><span class="comment">//调用数据模型   </span></span><br><span class="line">role = DataObjectUtil.convertDataObjects(role,<span class="string">&quot;com.primeton.eos.Advice.Advice&quot;</span>,<span class="keyword">false</span>);</span><br><span class="line">System.err.println(role.length);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; role.length; i++) &#123;</span><br><span class="line">Object[] inParameters = &#123;</span><br><span class="line">role[i].get(<span class="string">&quot;proposer&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;department&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;phone&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;category&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;carrydepartment&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;proposal&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;actuality&quot;</span>),</span><br><span class="line">role[i].get(<span class="string">&quot;improvement&quot;</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//打印数据</span></span><br><span class="line">Object[] params = <span class="keyword">new</span> Object[<span class="number">1</span>];</span><br><span class="line">params[<span class="number">0</span>] = role;</span><br><span class="line">Object[] result = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//设置登录用户</span></span><br><span class="line">String userid= (String)role[i].get(<span class="string">&quot;state&quot;</span>);</span><br><span class="line">BPSServiceClientFactory.getLoginManager().setCurrentUser(userid, <span class="string">&quot;sysadmin&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//构件名称</span></span><br><span class="line">ILogicComponent logicComponent = LogicComponentFactory.create(<span class="string">&quot;com.primeton.eos.phoneProcess&quot;</span>);</span><br><span class="line"><span class="comment">//逻辑流名称</span></span><br><span class="line">result = logicComponent.invoke(<span class="string">&quot;StartProcess&quot;</span>, inParameters);</span><br><span class="line">String count = (String)result[<span class="number">0</span>];</span><br><span class="line">Long id = (Long)result[<span class="number">1</span>];</span><br><span class="line">System.err.println(<span class="string">&quot;-----------------------》》&quot;</span>+count);</span><br><span class="line"><span class="keyword">if</span>(count.equals(<span class="string">&quot;1&quot;</span>))&#123;</span><br><span class="line">ms.put(<span class="string">&quot;errorCode&quot;</span>,<span class="string">&quot;00100&quot;</span>);</span><br><span class="line">ms.put(<span class="string">&quot;errorMsg&quot;</span>, <span class="string">&quot;新增数据成功&quot;</span>);</span><br><span class="line">ms.put(<span class="string">&quot;value&quot;</span>,id);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//更新数据</span></span><br><span class="line">ms.put(<span class="string">&quot;errorCode&quot;</span>,<span class="string">&quot;00200&quot;</span>);</span><br><span class="line">ms.put(<span class="string">&quot;errorMsg&quot;</span>, <span class="string">&quot;新增数据失败&quot;</span>);</span><br><span class="line">ms.put(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  JSON.toJSONString(ms);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GET</span></span><br><span class="line"><span class="meta">@Path(&quot;/getProcess/&#123;productCode&#125;&quot;)</span></span><br><span class="line"><span class="comment">//查询数据是否存在</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">selectEngineNumberInfoCount</span><span class="params">(<span class="meta">@PathParam(&quot;productCode&quot;)</span>String productCode)</span> <span class="keyword">throws</span> Throwable</span>&#123;</span><br><span class="line">Map ms= <span class="keyword">new</span> HashMap();</span><br><span class="line">DataSource db = DataSourceHelper.getDataSource(<span class="string">&quot;default&quot;</span>);</span><br><span class="line"><span class="comment">//查询用户</span></span><br><span class="line">String vininfo = <span class="string">&quot;SELECT a.PROCESSINSTID,a.PROPOSER,b.NAME DEPARTMENT,a.PHONE,c.NAME CATEGORY,d.NAME CARRYDEPARTMENT,a.PROPOSAL,a.ACTUALITY,a.IMPROVEMENT,a.SUBMITTIME,a.OPINION1,a.CHECKTIME,a.OPINION2,a.RECHECKTIME,a.STATE FROM ((ADVICE a LEFT JOIN DEPARTMENT b ON a.DEPARTMENT=b.DID)LEFT JOIN CATEGORY c ON a.CATEGORY=c.ID)LEFT JOIN CARRYDEPARTMENT d ON a.CARRYDEPARTMENT=d.ID WHERE PHONE = &#x27;&quot;</span>+productCode+<span class="string">&quot;&#x27; ORDER BY PROCESSINSTID DESC&quot;</span>;<span class="comment">//获取密码</span></span><br><span class="line">List list = getRsInfo.getRsListbySql(vininfo, db.getConnection());</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>  JSON.toJSONString(list);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h2><p>在编辑的java同目录下创建文件restconfig.properties并录入以下内容（等号后是对应的类全名）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resteasy.resources&#x3D;com.xcmg.service.ProcessStartService</span><br></pre></td></tr></table></figure><img src="../img/image-20210220101724380.png" alt="image-20210220101724380" style="zoom: 50%;" /><h2 id="编辑web-xml文件"><a href="#编辑web-xml文件" class="headerlink" title="编辑web.xml文件"></a>编辑web.xml文件</h2><p>编辑web.xml文件，在rest.config.locations下的param-value标签下新增restconfig.properties对应路径，需要增加英文逗号与已有内容分开，保存编辑后需要右键web.xml文件进行部署。</p><img src="../img/image-20210220101923074.png" alt="image-20210220101923074" style="zoom:50%;" /><h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><p><strong>1.修改了web.xml要手动部署web.xml</strong><br><strong>2.web.xml中的servlet-mapping下的url-pattern要和配置访问的地址对应</strong><br><strong>3.在rest.config.locations下的param-value标签下新增restconfig.properties对应路径</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开发Restful服务&quot;&gt;&lt;a href=&quot;#开发Restful服务&quot; class=&quot;headerlink&quot; title=&quot;开发Restful服务&quot;&gt;&lt;/a&gt;开发Restful服务&lt;/h2&gt;&lt;h3 id=&quot;创建服务实现类&quot;&gt;&lt;a href=&quot;#创建服务实现类&quot; c</summary>
      
    
    
    
    <category term="开发工具" scheme="https://www.zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="EOS" scheme="https://www.zzy521.com/tags/EOS/"/>
    
    <category term="Rest接口" scheme="https://www.zzy521.com/tags/Rest%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>Markdown生成带侧边目录的HTML</title>
    <link href="https://www.zzy521.com/posts/7067bb35.html"/>
    <id>https://www.zzy521.com/posts/7067bb35.html</id>
    <published>2021-01-03T02:24:25.000Z</published>
    <updated>2021-03-02T03:46:42.681Z</updated>
    
    <content type="html"><![CDATA[<p><strong>在使用Markdown文件生成说明文档的时候一般需要加侧边目录，但是Markdown本身的目录只能在上方显示，这里我选择使用一个插件来生成侧边目录。</strong></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>使用了node.js，没有安装的话自己安装，安装插件下载过慢的话换淘宝源或者清华源</p><p>点击<code>win</code>+<code>r</code>，输入cmd点击回车打开。</p><img src="../img/QQ截图20210103095659.png" alt="QQ截图20210103095659" style="zoom:67%;" /><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g i5ting_toc</span><br></pre></td></tr></table></figure><img src="../img/QQ截图20210103095946.png" alt="QQ截图20210103095946" style="zoom:67%;" /><p>出现添加包成功代表安装成功</p><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><p>打开需要生成的md文件所在目录</p><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20210103100441.png" alt="QQ截图20210103100441"></p><p>在地址栏输入cmd点击回车。（这样操作省去了使用cd将目录移动到文件所在的文件夹的步骤）<img src="../img/QQ截图20210103100529.png" alt="QQ截图20210103100529" style="zoom:67%;" /></p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i5ting_toc -f Tomcat的目录结构.md -o</span><br></pre></td></tr></table></figure><p><code>Tomcat的目录结构.md</code>是我的文件名，需要根据自己的文件名去修改。<img src="../img/QQ截图20210103101000.png" alt="QQ截图20210103101000" style="zoom:67%;" /></p><p>下面输出的三行分别为文件所在文件夹、目标文件和生成的文件。</p><p>推荐将Markdown中使用的图片都放在一个单独的文件夹，并将文件夹和Markdown放在一个文件夹中，将图片路径设置为相对路径，这样如果生成的HTML文件图片不显示只要将图片文件夹复制一份放到preview文件夹中就正常显示了。</p><img src="../img/QQ截图20210103101650.png" alt="QQ截图20210103101650" style="zoom:67%;" /><p><strong>可以看到生成的文件已经加了锚点，支持打开相应的链接直接跳转到相应的位置。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;在使用Markdown文件生成说明文档的时候一般需要加侧边目录，但是Markdown本身的目录只能在上方显示，这里我选择使用一个插件来生成侧边目录。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;head</summary>
      
    
    
    
    <category term="开发工具" scheme="https://www.zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="markdown" scheme="https://www.zzy521.com/tags/markdown/"/>
    
    <category term="项目说明" scheme="https://www.zzy521.com/tags/%E9%A1%B9%E7%9B%AE%E8%AF%B4%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat服务器介绍</title>
    <link href="https://www.zzy521.com/posts/c86b9588.html"/>
    <id>https://www.zzy521.com/posts/c86b9588.html</id>
    <published>2021-01-02T09:01:32.000Z</published>
    <updated>2021-02-25T09:17:55.946Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tomcat的目录结构"><a href="#Tomcat的目录结构" class="headerlink" title="Tomcat的目录结构"></a>Tomcat的目录结构</h2><p>解压下载好的tomcat可以看到如下文件结构：</p><p><code>bin</code>：存放启动和关闭tomcat的命令的路径。</p><p><code>conf</code>：存放tomcat的配置，所有的tomcat的配置都在该路径下设置。</p><p><code>lib</code>：存放Tomcat服务器的核心类库（JAR文件），如果需要扩展tomcat的功能，也可将第三方类库复制到该路径下。</p><p><code>logs</code>：这是一个空路径，用来保存Tomcat每次运行后产生的日志。</p><p><code>temp</code>：保存Web应用运行过程中生成的临时文件。</p><p><code>webapps</code>：该路径用于自动部署Web应用，将Web应用复制到该路径下，Tomcat启动时会自动将该应用部署到容器中。</p><p><code>work</code>：保存在Web应用在运行过程中编译生成的.class文件。该文件夹可以删除，但每次启动Tomcat时系统都会再次建立该路径。</p><p><code>LICENSE</code>等相关文档</p><p><strong>运行Tomcat只需要系统有一个JAVA_HOME环境变量。不管是Windows还是linux，只要有这个环境变量并且指向JDK的安装路径即可。</strong></p><h2 id="启动Tomcat"><a href="#启动Tomcat" class="headerlink" title="启动Tomcat"></a>启动Tomcat</h2><p>对于Windows平台，只要双击Tomcat安装路径下bin目录中的startup.bat文件即可。</p><p>启动Tomcat后，打开浏览器并在地址栏输入<a href="http://localhost:8080/%EF%BC%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%87%BA%E7%8E%B0%E6%AD%A4%E7%95%8C%E9%9D%A2%E5%8D%B3%E8%A1%A8%E7%A4%BA%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%E3%80%82">http://localhost:8080/，浏览器出现此界面即表示安装成功。</a></p><img src="../img/QQ截图20210102160835.png" alt="QQ截图20210102160835" style="zoom: 67%;" /><h2 id="配置Tomcat的端口"><a href="#配置Tomcat的端口" class="headerlink" title="配置Tomcat的端口"></a>配置Tomcat的端口</h2><p>Tomcat的默认端口是8080，可以通过修改Tomcat的配置文件来改变服务端口，甚至可以让Tomcat同时在多个端口提供服务。</p><p>Tomcat的配置文件在<code>conf</code>目录下，控制端口的配置文件为<code>conf</code>下的<code>server.xml</code>文件。切记修改时只能用记事本或者vi等无格式的编辑器，不可以使用写字板。</p><p>在<code>service.xml</code>的70行左右的位置，可以看到以下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>其中<code>port=&quot;8080&quot;</code>就是Tomcat提供服务的端口，将Tomcat修改为任意的端口，为避免与公用端口产生冲突，端口号最好大于1024。在这里我修改为8090.</p><p>修改完之后重启Tomcat，在浏览器地址栏输入<a href="http://localhost:8090/,%E5%8D%B3%E5%8F%AF%E5%86%8D%E6%AC%A1%E7%9C%8B%E5%88%B0Tomcat%E7%9A%84%E7%95%8C%E9%9D%A2%E3%80%82">http://localhost:8090/,即可再次看到Tomcat的界面。</a></p><h2 id="Tomcat的控制台"><a href="#Tomcat的控制台" class="headerlink" title="Tomcat的控制台"></a>Tomcat的控制台</h2><p>在上图右上角有三个控制台：一个是Server Status控制台，一个是Manager APP控制台，一个是Host Mnager控制台。</p><p>Status用来监控服务器的状态，Manager控制台用来部署和监控Web应用，通常只需使用Manager控制台。</p><p>控制台的用户名和密码是通过Tomcat的JAAS（JAAS的全称是Java Authentication Authorization Service（Java验证和授权API），它用来控制对Java web应用的授权访问）控制的。初始是没有用户的，所以无论输入什么都无法登陆。</p><p>webapps路径是Web应用的存放路径，而Manager控制台对应的也是一个Web应用，所以它的配置文件是webapps/manager/WEB-INF路径下的web.xml文件。</p><p>用户的配置也在其中，但是Tomcat采用文件安全域，<strong>添加控制台用户只需要修改conf路径下的tomcat-users.xml文件即可。</strong></p><p>打开该文件在</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tomcat-users</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下方添加下列内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">&quot;manager&quot;</span> <span class="attr">password</span>=<span class="string">&quot;manager&quot;</span> <span class="attr">roles</span>=<span class="string">&quot;manager-gui&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>此处登录用户名和密码我都是用的manager，可以根据需要自行修改。</p><p>修改过后重启Tomcat点击控制台登录即可。</p><p>显示下图即表示登陆成功</p><img src="../img/QQ%E6%88%AA%E5%9B%BE20210102165446.png" alt="QQ截图20210102165446" style="zoom:67%;" /><hr><p><strong>Tomcat服务器状态</strong></p><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20210102165559.png" alt="QQ截图20210102165559"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Tomcat的目录结构&quot;&gt;&lt;a href=&quot;#Tomcat的目录结构&quot; class=&quot;headerlink&quot; title=&quot;Tomcat的目录结构&quot;&gt;&lt;/a&gt;Tomcat的目录结构&lt;/h2&gt;&lt;p&gt;解压下载好的tomcat可以看到如下文件结构：&lt;/p&gt;
&lt;p&gt;&lt;co</summary>
      
    
    
    
    <category term="服务器" scheme="https://www.zzy521.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Tomcat" scheme="https://www.zzy521.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Linux查看应用的端口号和进程号PID</title>
    <link href="https://www.zzy521.com/posts/73a46000.html"/>
    <id>https://www.zzy521.com/posts/73a46000.html</id>
    <published>2020-12-22T09:57:25.000Z</published>
    <updated>2021-02-25T09:20:32.238Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-进程名和进程号PID的互查"><a href="#1-进程名和进程号PID的互查" class="headerlink" title="1.进程名和进程号PID的互查"></a>1.进程名和进程号PID的互查</h2><h4 id="1-1根据进程名查进程号PID-PID是进程标识符"><a href="#1-1根据进程名查进程号PID-PID是进程标识符" class="headerlink" title="1.1根据进程名查进程号PID(PID是进程标识符)"></a>1.1根据进程名查进程号PID(PID是进程标识符)</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep 进程名</span><br></pre></td></tr></table></figure><p>比如：查看tomcat进程的PID编号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep tomcat</span><br></pre></td></tr></table></figure><p>如图，第一个就是查到的PID编号</p><p><img src="../img/%E6%88%AA%E5%9B%BE.png" alt="截图"></p><h5 id="还可以使用ps-aux-grep-xxx，效果与ps-ef-grep-xxx一样，只不过信息会更详细。"><a href="#还可以使用ps-aux-grep-xxx，效果与ps-ef-grep-xxx一样，只不过信息会更详细。" class="headerlink" title="还可以使用ps -aux | grep xxx，效果与ps -ef | grep xxx一样，只不过信息会更详细。"></a>还可以使用<code>ps -aux | grep xxx</code>，效果与<code>ps -ef | grep xxx</code>一样，只不过信息会更详细。</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep 进程名</span><br></pre></td></tr></table></figure><p>PID编号可以用来强制结束某进程。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 PID编号</span><br></pre></td></tr></table></figure><p>比如：强制结束tomcat进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">5087为上边查到的tomcat的PID</span></span><br><span class="line">kill -9 5087</span><br></pre></td></tr></table></figure><h4 id="1-2根据进程号查进程名"><a href="#1-2根据进程号查进程名" class="headerlink" title="1.2根据进程号查进程名"></a>1.2根据进程号查进程名</h4><p>将上边的进程名换成进程号即可。（这个用的比较少，一般都是根据进程名去查进程号）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep 进程号</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep 进程号</span><br></pre></td></tr></table></figure><h2 id="2-端口号和进程号PID的互查"><a href="#2-端口号和进程号PID的互查" class="headerlink" title="2.端口号和进程号PID的互查"></a>2.端口号和进程号PID的互查</h2><h5 id="根据进程PID查端口号"><a href="#根据进程PID查端口号" class="headerlink" title="根据进程PID查端口号"></a>根据进程PID查端口号</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i | grep 进程号</span><br></pre></td></tr></table></figure><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20201223091932.png" alt="QQ截图20201223091932"></p><p>或使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap | grep 进程号</span><br></pre></td></tr></table></figure><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20201223092109.png" alt="QQ截图20201223092109"></p><h5 id="根据端口号查进程号PID"><a href="#根据端口号查进程号PID" class="headerlink" title="根据端口号查进程号PID"></a>根据端口号查进程号PID</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:端口号</span><br></pre></td></tr></table></figure><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20201223092227.png" alt="QQ截图20201223092227"></p><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap | grep 端口号</span><br></pre></td></tr></table></figure><p><img src="../img/QQ%E6%88%AA%E5%9B%BE20201223092403.png" alt="QQ截图20201223092403"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-进程名和进程号PID的互查&quot;&gt;&lt;a href=&quot;#1-进程名和进程号PID的互查&quot; class=&quot;headerlink&quot; title=&quot;1.进程名和进程号PID的互查&quot;&gt;&lt;/a&gt;1.进程名和进程号PID的互查&lt;/h2&gt;&lt;h4 id=&quot;1-1根据进程名查进程号P</summary>
      
    
    
    
    <category term="服务器" scheme="https://www.zzy521.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="https://www.zzy521.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo新建博客显示分类及标签</title>
    <link href="https://www.zzy521.com/posts/4d9beafe.html"/>
    <id>https://www.zzy521.com/posts/4d9beafe.html</id>
    <published>2020-12-20T12:40:11.000Z</published>
    <updated>2020-12-20T12:57:08.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>进入hexo博客所在的根目录，输入如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>成功后提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: D:\Hexo\source\categories\index.md</span><br></pre></td></tr></table></figure><p>index.md的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-12-20 20:26:06</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>需要修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-12-20 20:26:06</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: categories</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>在控制台中输入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>成功后提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: D:\Hexo\source\tags\index.md</span><br></pre></td></tr></table></figure><p>index.md的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-12-20 20:51:11</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-12-20 20:51:11</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: tags</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="修改模板"><a href="#修改模板" class="headerlink" title="修改模板"></a>修改模板</h2><p>修改<code>scaffolds</code>中的<code>post</code>模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">  - 文章分类</span><br><span class="line">tags:</span><br><span class="line">  - 文章标签</span><br><span class="line">toc: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;分类&quot;&gt;&lt;a href=&quot;#分类&quot; class=&quot;headerlink&quot; title=&quot;分类&quot;&gt;&lt;/a&gt;分类&lt;/h2&gt;&lt;p&gt;进入hexo博客所在的根目录，输入如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;</summary>
      
    
    
    
    <category term="开发工具" scheme="https://www.zzy521.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Hexo" scheme="https://www.zzy521.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>在服务器上安装运行EOS的Tomcat的方法</title>
    <link href="https://www.zzy521.com/posts/eba5960e.html"/>
    <id>https://www.zzy521.com/posts/eba5960e.html</id>
    <published>2020-12-19T09:01:25.000Z</published>
    <updated>2021-03-23T07:49:26.379Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-防火墙开启端口号"><a href="#1-防火墙开启端口号" class="headerlink" title="1.防火墙开启端口号"></a>1.防火墙开启端口号</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看firewall的状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启（如果防火墙未开启的话先开启）</span></span><br><span class="line">service firewalld start</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询端口是否开放</span></span><br><span class="line">firewall-cmd --query-port=8080/tcp</span><br><span class="line">firewall-cmd --query-port=8009/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开放8080端口</span></span><br><span class="line">firewall-cmd --permanent --add-port=8080/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开放8009端口</span></span><br><span class="line">firewall-cmd --permanent --add-port=8009/tcp</span><br><span class="line"><span class="meta">#</span><span class="bash">重启防火墙(修改配置后要重启防火墙)</span></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="2-将压缩包复制到服务器并打开"><a href="#2-将压缩包复制到服务器并打开" class="headerlink" title="2.将压缩包复制到服务器并打开"></a>2.将压缩包复制到服务器并打开</h2><p>在<code>/usr/local</code>文件夹下新建名为tomcat的文件夹，将名为<code>apache-tomcat-7.0.54.tar</code>的压缩包进去</p><p>进入tomcat文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/tomcat</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf apache-tomcat-7.0.54.tar</span><br></pre></td></tr></table></figure><h2 id="3-调大Tomcat的jvm内存"><a href="#3-调大Tomcat的jvm内存" class="headerlink" title="3.调大Tomcat的jvm内存"></a>3.调大Tomcat的jvm内存</h2><p>在生产环境中，tomcat内存设置不好很容易出现JVM内存溢出，解决方法就是修改<code>Tomcat</code>中的<code>catalina.sh</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入bin目录下</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-7.0.54/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">打开catalina.sh文件</span></span><br><span class="line">vi catalina.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">按i进入编辑模式，找到cygwin=<span class="literal">false</span>，在这一行的前面加入参数，具体如下，按Esc退出编辑模式，再输入:wq！点击回车保存</span></span><br><span class="line">JAVA_OPTS=&quot;-server -Xms800m -Xmx800m -XX:PermSize=256m -XX:MaxPermSize=512m -XX:MaxNewSize=512m&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="其他说明："><a href="#其他说明：" class="headerlink" title="其他说明："></a>其他说明：</h5><ol><li>“m”说明单位是MB，否则默认是KB</li><li>一般使用物理内存的80%作为堆大小</li><li>一般把-Xms和-Xmx设为一样大</li><li>一般把-Xmn设置为-Xmx值的1/4</li><li>一般将堆的总大小的50%到60%分配给新生成的池</li></ol><h5 id="jvm参数说明："><a href="#jvm参数说明：" class="headerlink" title="jvm参数说明："></a>jvm参数说明：</h5><ul><li><code>-server</code> 一定要作为第一个参数，启用JDK的server版本，在多个CPU时性能佳<br><code>-Xms java Heap</code>初始大小。 默认是物理内存的1/64。<br><code>-Xmx java heap</code>最大值。建议均设为物理内存的80%。不可超过物理内存。<br><code>-Xmn java heap</code>最小值，一般设置为Xmx的3、4分之一。<br><code>-XX:PermSize</code> 设定内存的永久保存区初始大小，缺省值为64M。<br><code>-XX:MaxPermSize</code> 设定内存的永久保存区最大大小，缺省值为64M。<br><code>-XX:SurvivorRatio</code>=2 生还者池的大小，默认是2。如<br><code>-XX:NewSize</code> 新生成的池的初始大小。 缺省值为2M。<br><code>-XX:MaxNewSize</code> 新生成的池的最大大小。 缺省值为32M。<br><code>+XX:AggressiveHeap</code> 让jvm忽略Xmx参数，疯狂地吃完一个G物理内存，再吃尽一个G的swap。<br><code>-Xss</code> 每个线程的Stack大小<br><code>-verbose:gc</code> 现实垃圾收集信息<br><code>-Xloggc:gc.log</code> 指定垃圾收集日志文件<br><code>-XX:+UseParNewGC</code> 缩短minor收集的时间<br><code>-XX:+UseConcMarkSweepGC</code> 缩短major收集的时间<br><code>-XX:userParNewGC</code> 可用来设置并行收集(多CPU)<br><code>-XX:ParallelGCThreads</code> 可用来增加并行度(多CPU)<br><code>-XX:UseParallelGC</code> 设置后可以使用并行清除收集器(多CPU)</li></ul><h2 id="4-改变端口号"><a href="#4-改变端口号" class="headerlink" title="4.改变端口号"></a>4.改变端口号</h2><p>如果不用默认的8080端口则需要修改端口号，在<code>conf</code>文件夹下的<code>server.xml</code>文件中修改。换端口号的话需要在防火墙开启相应的端口号，参考第一步。（如果使用默认的8080端口则跳过此步骤）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入conf目录下</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-7.0.54/conf</span><br><span class="line"><span class="meta">#</span><span class="bash">打开server.xml文件</span></span><br><span class="line">vi server.xml</span><br><span class="line"><span class="meta">#</span><span class="bash">按i进入编辑模式，找到</span> </span><br><span class="line">&lt;Connector URIEncoding=&quot;UTF-8&quot; connectionTimeout=&quot;20000&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; redirectPort=&quot;8443&quot;/&gt;，</span><br><span class="line"><span class="meta">#</span><span class="bash">将其中的8080换为需要的端口号，例如8090，按Esc退出编辑模式，再输入:wq！点击回车保存</span></span><br><span class="line">&lt;Connector URIEncoding=&quot;UTF-8&quot; connectionTimeout=&quot;20000&quot; port=&quot;8090&quot; protocol=&quot;HTTP/1.1&quot; redirectPort=&quot;8443&quot;/&gt;</span><br></pre></td></tr></table></figure><h2 id="5-启动运行"><a href="#5-启动运行" class="headerlink" title="5.启动运行"></a>5.启动运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入bin目录下</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-7.0.54/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">启动运行</span></span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>部署完项目需要重启tomcat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入bin目录下</span></span><br><span class="line">cd /usr/local/tomcat/apache-tomcat-7.0.54/bin</span><br><span class="line"><span class="meta">#</span><span class="bash">停止运行</span></span><br><span class="line">./shutdown.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">启动运行</span></span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-防火墙开启端口号&quot;&gt;&lt;a href=&quot;#1-防火墙开启端口号&quot; class=&quot;headerlink&quot; title=&quot;1.防火墙开启端口号&quot;&gt;&lt;/a&gt;1.防火墙开启端口号&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    <category term="服务器" scheme="https://www.zzy521.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="EOS" scheme="https://www.zzy521.com/tags/EOS/"/>
    
    <category term="Linux" scheme="https://www.zzy521.com/tags/Linux/"/>
    
    <category term="Tomcat" scheme="https://www.zzy521.com/tags/Tomcat/"/>
    
  </entry>
  
</feed>
